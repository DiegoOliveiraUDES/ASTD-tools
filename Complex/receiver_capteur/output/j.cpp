#include "Alert.cpp"
#include "helper.h"
#include "blockingconcurrentqueue.h"
#include <pthread.h>
#include <mutex>
#include <chrono>
#include <ctime>
#include <atomic>
enum GuardState
{
  GUARD_NOTSTARTED,
  GUARD_STARTED
};
enum InterruptState
{
  FST,
  SND
};
enum ChoiceState
{
  NONE,
  LEFT,
  RIGHT
};
enum AutState
{
  D,
  J2,
  S0
};
enum KleeneState
{
  KLEENE_NOTSTARTED,
  KLEENE_STARTED
};
enum CallState
{
  NOTCALLED,
  CALLED
};
struct TState_choice2B_guard
{
  AutState  autState;

};
struct TState_D
{
  AutState  autState;

};
struct TState_choice_1choiceB_guard
{
  AutState  autState;
  TState_D  ts_D;

};
struct TState_choiceB_guard
{
  ChoiceState  choiceState;
  TState_choice_1choiceB_guard  ts_choice_1choiceB_guard;
  TState_choice2B_guard  ts_choice2B_guard;

};
struct TState_guardB
{
  GuardState  guardState;
  TState_choiceB_guard  ts_choiceB_guard;

};
struct TState_C
{
  AutState  autState;

};
struct TState_pguardB
{
  TState_C  ts_C;

};
struct TState_B
{
  InterruptState  interruptState;
  TState_pguardB  ts_pguardB;
  TState_guardB  ts_guardB;

};
struct TState_A
{
  KleeneState  kleeneState;
  TState_B  ts_B;

};
struct TState_F1
{
  CallState  callState;
  TState_A  ts_A;

};
struct TState_E
{
  Timer  h;
  AutState  autState;

};
struct TState_F2
{
  CallState  callState;
  TState_E  ts_E;

};
struct TState_F
{
  Timer  right_clock_F1;
  Timer  left_clock_F2;
  TState_F2  ts_F2;
  TState_F1  ts_F1;

};
struct TState_choice2J_guard
{
  CallState  callState;
  TState_F  ts_F;

};
struct TState_J2
{
  CallState  callState;
  TState_F  ts_F;

};
struct TState_choice_1choiceJ_guard
{
  AutState  autState;
  TState_J2  ts_J2;

};
struct TState_choiceJ_guard
{
  ChoiceState  choiceState;
  TState_choice_1choiceJ_guard  ts_choice_1choiceJ_guard;
  TState_choice2J_guard  ts_choice2J_guard;

};
struct TState_guardJ
{
  GuardState  guardState;
  TState_choiceJ_guard  ts_choiceJ_guard;

};
struct TState_J1
{
  Timer  h;
  AutState  autState;

};
struct TState_pguardJ
{
  TState_J1  ts_J1;

};
struct TState_J
{
  float  stddev;
  Std::vector  vec;
  float  avg;
  Timer  clock_timed_interrupt;
  InterruptState  interruptState;
  TState_pguardJ  ts_pguardJ;
  TState_guardJ  ts_guardJ;

};
const std::vector<AutState>  deep_final_choice_1choiceJ_guard = {S0};
const std::vector<AutState>  deep_final_choice_1choiceB_guard = {S0};
const std::vector<AutState>  shallow_final_D = {S0};
const std::vector<AutState>  shallow_final_choice2B_guard = {S0};
TState_J  ts_J;
moodycamel::BlockingConcurrentQueue<Event>  queue;
std::time_t  step_time = 10000000;
Timer  last_event_time;
Timer  last_step_time;
Timer  exec_start;
bool  continue_signal = 1;

int    e()
{
	int  exec = 0;
	exec_start.reset_clock();
	if((ts_J.interruptState == FST && (ts_J.clock_timed_interrupt.expired(7.2E12) == false  && ts_J.ts_pguardJ.ts_J1.autState == S0)))
	{
		if((ts_J.clock_timed_interrupt.expired(7.2E12) == false  && ts_J.ts_pguardJ.ts_J1.autState == S0))
		{
			if(ts_J.ts_pguardJ.ts_J1.autState == S0)
			{
				ts_J.vec.emplace_back(ts_J.ts_pguardJ.ts_J1.h.getPassedTime()); ts_J.ts_pguardJ.ts_J1.h.reset_clock();ts_J.ts_pguardJ.ts_J1.autState = S0;
				exec = 1;
			
			}
		
		}
	
	}else if((ts_J.interruptState == FST && ((GUARD_NOTSTARTED == GUARD_NOTSTARTED && (ts_J.clock_timed_interrupt.expired(7.2E12)  && ((NONE == NONE && (S0 == J2 && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.callState == NOTCALLED && (((NOTCALLED == NOTCALLED && ((S0 == S0 && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.ts_E.h <= ts_J.avg - 3 * ts_J.stddev ) || (S0 == S0 && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.ts_E.h > ts_J.avg - 3 * ts_J.stddev ))) || (NOTCALLED == CALLED && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.ts_E.autState == S0 && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.ts_E.h <= ts_J.avg - 3 * ts_J.stddev ) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.ts_E.autState == S0 && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.ts_E.h > ts_J.avg - 3 * ts_J.stddev )))) || ((NOTCALLED == NOTCALLED && (((((FST == FST && 0) || (FST == SND && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.guardState == GUARD_NOTSTARTED && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9)  && ((NONE == NONE && (std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end() || std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), S0) !=shallow_final_choice2B_guard.end())) || (NONE == LEFT && std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end()) || (NONE == RIGHT && std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice2B_guard.autState) !=shallow_final_choice2B_guard.end())))) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.guardState == GUARD_STARTED && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == NONE && (std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end() || std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), S0) !=shallow_final_choice2B_guard.end())) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == LEFT && std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end()) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == RIGHT && std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice2B_guard.autState) !=shallow_final_choice2B_guard.end())))))) || KLEENE_NOTSTARTED == ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.kleeneState) && (FST == FST && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && S0 == S0))) || (FST == FST && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && S0 == S0)))) || (NOTCALLED == CALLED && (((((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.interruptState == FST && 0) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.interruptState == SND && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.guardState == GUARD_NOTSTARTED && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9)  && ((NONE == NONE && (std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end() || std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), S0) !=shallow_final_choice2B_guard.end())) || (NONE == LEFT && std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end()) || (NONE == RIGHT && std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice2B_guard.autState) !=shallow_final_choice2B_guard.end())))) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.guardState == GUARD_STARTED && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == NONE && (std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end() || std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), S0) !=shallow_final_choice2B_guard.end())) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == LEFT && std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end()) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == RIGHT && std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice2B_guard.autState) !=shallow_final_choice2B_guard.end())))))) || KLEENE_NOTSTARTED == ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.kleeneState) && (FST == FST && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && S0 == S0))) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.interruptState == FST && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_pguardB.ts_C.autState == S0))))))) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.callState == CALLED && (((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.callState == NOTCALLED && ((S0 == S0 && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.ts_E.h <= ts_J.avg - 3 * ts_J.stddev ) || (S0 == S0 && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.ts_E.h > ts_J.avg - 3 * ts_J.stddev ))) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.callState == CALLED && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.ts_E.autState == S0 && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.ts_E.h <= ts_J.avg - 3 * ts_J.stddev ) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.ts_E.autState == S0 && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.ts_E.h > ts_J.avg - 3 * ts_J.stddev )))) || ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.callState == NOTCALLED && (((((FST == FST && 0) || (FST == SND && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.guardState == GUARD_NOTSTARTED && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9)  && ((NONE == NONE && (std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end() || std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), S0) !=shallow_final_choice2B_guard.end())) || (NONE == LEFT && std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end()) || (NONE == RIGHT && std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice2B_guard.autState) !=shallow_final_choice2B_guard.end())))) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.guardState == GUARD_STARTED && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == NONE && (std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end() || std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), S0) !=shallow_final_choice2B_guard.end())) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == LEFT && std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end()) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == RIGHT && std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice2B_guard.autState) !=shallow_final_choice2B_guard.end())))))) || KLEENE_NOTSTARTED == ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.kleeneState) && (FST == FST && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && S0 == S0))) || (FST == FST && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && S0 == S0)))) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.callState == CALLED && (((((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.interruptState == FST && 0) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.interruptState == SND && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.guardState == GUARD_NOTSTARTED && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9)  && ((NONE == NONE && (std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end() || std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), S0) !=shallow_final_choice2B_guard.end())) || (NONE == LEFT && std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end()) || (NONE == RIGHT && std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice2B_guard.autState) !=shallow_final_choice2B_guard.end())))) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.guardState == GUARD_STARTED && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == NONE && (std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end() || std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), S0) !=shallow_final_choice2B_guard.end())) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == LEFT && std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end()) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == RIGHT && std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice2B_guard.autState) !=shallow_final_choice2B_guard.end())))))) || KLEENE_NOTSTARTED == ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.kleeneState) && (FST == FST && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && S0 == S0))) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.interruptState == FST && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_pguardB.ts_C.autState == S0)))))))))) || (NONE == LEFT && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.autState == J2 && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.callState == NOTCALLED && (((NOTCALLED == NOTCALLED && ((S0 == S0 && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.ts_E.h <= ts_J.avg - 3 * ts_J.stddev ) || (S0 == S0 && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.ts_E.h > ts_J.avg - 3 * ts_J.stddev ))) || (NOTCALLED == CALLED && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.ts_E.autState == S0 && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.ts_E.h <= ts_J.avg - 3 * ts_J.stddev ) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.ts_E.autState == S0 && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.ts_E.h > ts_J.avg - 3 * ts_J.stddev )))) || ((NOTCALLED == NOTCALLED && (((((FST == FST && 0) || (FST == SND && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.guardState == GUARD_NOTSTARTED && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9)  && ((NONE == NONE && (std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end() || std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), S0) !=shallow_final_choice2B_guard.end())) || (NONE == LEFT && std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end()) || (NONE == RIGHT && std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice2B_guard.autState) !=shallow_final_choice2B_guard.end())))) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.guardState == GUARD_STARTED && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == NONE && (std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end() || std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), S0) !=shallow_final_choice2B_guard.end())) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == LEFT && std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end()) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == RIGHT && std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice2B_guard.autState) !=shallow_final_choice2B_guard.end())))))) || KLEENE_NOTSTARTED == ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.kleeneState) && (FST == FST && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && S0 == S0))) || (FST == FST && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && S0 == S0)))) || (NOTCALLED == CALLED && (((((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.interruptState == FST && 0) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.interruptState == SND && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.guardState == GUARD_NOTSTARTED && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9)  && ((NONE == NONE && (std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end() || std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), S0) !=shallow_final_choice2B_guard.end())) || (NONE == LEFT && std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end()) || (NONE == RIGHT && std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice2B_guard.autState) !=shallow_final_choice2B_guard.end())))) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.guardState == GUARD_STARTED && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == NONE && (std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end() || std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), S0) !=shallow_final_choice2B_guard.end())) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == LEFT && std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end()) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == RIGHT && std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice2B_guard.autState) !=shallow_final_choice2B_guard.end())))))) || KLEENE_NOTSTARTED == ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.kleeneState) && (FST == FST && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && S0 == S0))) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.interruptState == FST && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_pguardB.ts_C.autState == S0))))))) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.callState == CALLED && (((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.callState == NOTCALLED && ((S0 == S0 && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.ts_E.h <= ts_J.avg - 3 * ts_J.stddev ) || (S0 == S0 && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.ts_E.h > ts_J.avg - 3 * ts_J.stddev ))) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.callState == CALLED && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.ts_E.autState == S0 && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.ts_E.h <= ts_J.avg - 3 * ts_J.stddev ) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.ts_E.autState == S0 && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.ts_E.h > ts_J.avg - 3 * ts_J.stddev )))) || ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.callState == NOTCALLED && (((((FST == FST && 0) || (FST == SND && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.guardState == GUARD_NOTSTARTED && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9)  && ((NONE == NONE && (std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end() || std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), S0) !=shallow_final_choice2B_guard.end())) || (NONE == LEFT && std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end()) || (NONE == RIGHT && std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice2B_guard.autState) !=shallow_final_choice2B_guard.end())))) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.guardState == GUARD_STARTED && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == NONE && (std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end() || std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), S0) !=shallow_final_choice2B_guard.end())) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == LEFT && std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end()) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == RIGHT && std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice2B_guard.autState) !=shallow_final_choice2B_guard.end())))))) || KLEENE_NOTSTARTED == ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.kleeneState) && (FST == FST && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && S0 == S0))) || (FST == FST && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && S0 == S0)))) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.callState == CALLED && (((((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.interruptState == FST && 0) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.interruptState == SND && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.guardState == GUARD_NOTSTARTED && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9)  && ((NONE == NONE && (std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end() || std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), S0) !=shallow_final_choice2B_guard.end())) || (NONE == LEFT && std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end()) || (NONE == RIGHT && std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice2B_guard.autState) !=shallow_final_choice2B_guard.end())))) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.guardState == GUARD_STARTED && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == NONE && (std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end() || std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), S0) !=shallow_final_choice2B_guard.end())) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == LEFT && std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end()) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == RIGHT && std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice2B_guard.autState) !=shallow_final_choice2B_guard.end())))))) || KLEENE_NOTSTARTED == ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.kleeneState) && (FST == FST && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && S0 == S0))) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.interruptState == FST && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_pguardB.ts_C.autState == S0)))))))))) || (NONE == NONE && ((NOTCALLED == NOTCALLED && (((NOTCALLED == NOTCALLED && ((S0 == S0 && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F2.ts_E.h <= ts_J.avg - 3 * ts_J.stddev ) || (S0 == S0 && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F2.ts_E.h > ts_J.avg - 3 * ts_J.stddev ))) || (NOTCALLED == CALLED && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F2.ts_E.autState == S0 && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F2.ts_E.h <= ts_J.avg - 3 * ts_J.stddev ) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F2.ts_E.autState == S0 && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F2.ts_E.h > ts_J.avg - 3 * ts_J.stddev )))) || ((NOTCALLED == NOTCALLED && (((((FST == FST && 0) || (FST == SND && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.guardState == GUARD_NOTSTARTED && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9)  && ((NONE == NONE && (std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end() || std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), S0) !=shallow_final_choice2B_guard.end())) || (NONE == LEFT && std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end()) || (NONE == RIGHT && std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice2B_guard.autState) !=shallow_final_choice2B_guard.end())))) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.guardState == GUARD_STARTED && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == NONE && (std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end() || std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), S0) !=shallow_final_choice2B_guard.end())) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == LEFT && std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end()) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == RIGHT && std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice2B_guard.autState) !=shallow_final_choice2B_guard.end())))))) || KLEENE_NOTSTARTED == ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.kleeneState) && (FST == FST && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && S0 == S0))) || (FST == FST && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && S0 == S0)))) || (NOTCALLED == CALLED && (((((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.interruptState == FST && 0) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.interruptState == SND && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.guardState == GUARD_NOTSTARTED && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9)  && ((NONE == NONE && (std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end() || std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), S0) !=shallow_final_choice2B_guard.end())) || (NONE == LEFT && std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end()) || (NONE == RIGHT && std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice2B_guard.autState) !=shallow_final_choice2B_guard.end())))) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.guardState == GUARD_STARTED && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == NONE && (std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end() || std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), S0) !=shallow_final_choice2B_guard.end())) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == LEFT && std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end()) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == RIGHT && std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice2B_guard.autState) !=shallow_final_choice2B_guard.end())))))) || KLEENE_NOTSTARTED == ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.kleeneState) && (FST == FST && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && S0 == S0))) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.interruptState == FST && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_pguardB.ts_C.autState == S0))))))) || (NOTCALLED == CALLED && (((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F2.callState == NOTCALLED && ((S0 == S0 && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F2.ts_E.h <= ts_J.avg - 3 * ts_J.stddev ) || (S0 == S0 && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F2.ts_E.h > ts_J.avg - 3 * ts_J.stddev ))) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F2.callState == CALLED && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F2.ts_E.autState == S0 && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F2.ts_E.h <= ts_J.avg - 3 * ts_J.stddev ) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F2.ts_E.autState == S0 && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F2.ts_E.h > ts_J.avg - 3 * ts_J.stddev )))) || ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.callState == NOTCALLED && (((((FST == FST && 0) || (FST == SND && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.guardState == GUARD_NOTSTARTED && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9)  && ((NONE == NONE && (std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end() || std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), S0) !=shallow_final_choice2B_guard.end())) || (NONE == LEFT && std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end()) || (NONE == RIGHT && std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice2B_guard.autState) !=shallow_final_choice2B_guard.end())))) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.guardState == GUARD_STARTED && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == NONE && (std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end() || std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), S0) !=shallow_final_choice2B_guard.end())) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == LEFT && std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end()) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == RIGHT && std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice2B_guard.autState) !=shallow_final_choice2B_guard.end())))))) || KLEENE_NOTSTARTED == ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.kleeneState) && (FST == FST && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && S0 == S0))) || (FST == FST && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && S0 == S0)))) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.callState == CALLED && (((((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.interruptState == FST && 0) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.interruptState == SND && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.guardState == GUARD_NOTSTARTED && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9)  && ((NONE == NONE && (std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end() || std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), S0) !=shallow_final_choice2B_guard.end())) || (NONE == LEFT && std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end()) || (NONE == RIGHT && std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice2B_guard.autState) !=shallow_final_choice2B_guard.end())))) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.guardState == GUARD_STARTED && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == NONE && (std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end() || std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), S0) !=shallow_final_choice2B_guard.end())) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == LEFT && std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end()) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == RIGHT && std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice2B_guard.autState) !=shallow_final_choice2B_guard.end())))))) || KLEENE_NOTSTARTED == ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.kleeneState) && (FST == FST && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && S0 == S0))) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.interruptState == FST && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_pguardB.ts_C.autState == S0))))))))) || (NONE == RIGHT && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.callState == NOTCALLED && (((NOTCALLED == NOTCALLED && ((S0 == S0 && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F2.ts_E.h <= ts_J.avg - 3 * ts_J.stddev ) || (S0 == S0 && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F2.ts_E.h > ts_J.avg - 3 * ts_J.stddev ))) || (NOTCALLED == CALLED && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F2.ts_E.autState == S0 && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F2.ts_E.h <= ts_J.avg - 3 * ts_J.stddev ) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F2.ts_E.autState == S0 && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F2.ts_E.h > ts_J.avg - 3 * ts_J.stddev )))) || ((NOTCALLED == NOTCALLED && (((((FST == FST && 0) || (FST == SND && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.guardState == GUARD_NOTSTARTED && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9)  && ((NONE == NONE && (std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end() || std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), S0) !=shallow_final_choice2B_guard.end())) || (NONE == LEFT && std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end()) || (NONE == RIGHT && std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice2B_guard.autState) !=shallow_final_choice2B_guard.end())))) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.guardState == GUARD_STARTED && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == NONE && (std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end() || std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), S0) !=shallow_final_choice2B_guard.end())) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == LEFT && std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end()) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == RIGHT && std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice2B_guard.autState) !=shallow_final_choice2B_guard.end())))))) || KLEENE_NOTSTARTED == ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.kleeneState) && (FST == FST && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && S0 == S0))) || (FST == FST && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && S0 == S0)))) || (NOTCALLED == CALLED && (((((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.interruptState == FST && 0) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.interruptState == SND && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.guardState == GUARD_NOTSTARTED && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9)  && ((NONE == NONE && (std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end() || std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), S0) !=shallow_final_choice2B_guard.end())) || (NONE == LEFT && std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end()) || (NONE == RIGHT && std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice2B_guard.autState) !=shallow_final_choice2B_guard.end())))) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.guardState == GUARD_STARTED && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == NONE && (std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end() || std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), S0) !=shallow_final_choice2B_guard.end())) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == LEFT && std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end()) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == RIGHT && std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice2B_guard.autState) !=shallow_final_choice2B_guard.end())))))) || KLEENE_NOTSTARTED == ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.kleeneState) && (FST == FST && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && S0 == S0))) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.interruptState == FST && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_pguardB.ts_C.autState == S0))))))) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.callState == CALLED && (((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F2.callState == NOTCALLED && ((S0 == S0 && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F2.ts_E.h <= ts_J.avg - 3 * ts_J.stddev ) || (S0 == S0 && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F2.ts_E.h > ts_J.avg - 3 * ts_J.stddev ))) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F2.callState == CALLED && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F2.ts_E.autState == S0 && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F2.ts_E.h <= ts_J.avg - 3 * ts_J.stddev ) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F2.ts_E.autState == S0 && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F2.ts_E.h > ts_J.avg - 3 * ts_J.stddev )))) || ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.callState == NOTCALLED && (((((FST == FST && 0) || (FST == SND && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.guardState == GUARD_NOTSTARTED && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9)  && ((NONE == NONE && (std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end() || std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), S0) !=shallow_final_choice2B_guard.end())) || (NONE == LEFT && std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end()) || (NONE == RIGHT && std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice2B_guard.autState) !=shallow_final_choice2B_guard.end())))) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.guardState == GUARD_STARTED && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == NONE && (std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end() || std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), S0) !=shallow_final_choice2B_guard.end())) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == LEFT && std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end()) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == RIGHT && std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice2B_guard.autState) !=shallow_final_choice2B_guard.end())))))) || KLEENE_NOTSTARTED == ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.kleeneState) && (FST == FST && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && S0 == S0))) || (FST == FST && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && S0 == S0)))) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.callState == CALLED && (((((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.interruptState == FST && 0) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.interruptState == SND && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.guardState == GUARD_NOTSTARTED && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9)  && ((NONE == NONE && (std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end() || std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), S0) !=shallow_final_choice2B_guard.end())) || (NONE == LEFT && std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end()) || (NONE == RIGHT && std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice2B_guard.autState) !=shallow_final_choice2B_guard.end())))) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.guardState == GUARD_STARTED && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == NONE && (std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end() || std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), S0) !=shallow_final_choice2B_guard.end())) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == LEFT && std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end()) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == RIGHT && std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice2B_guard.autState) !=shallow_final_choice2B_guard.end())))))) || KLEENE_NOTSTARTED == ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.kleeneState) && (FST == FST && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && S0 == S0))) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.interruptState == FST && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_pguardB.ts_C.autState == S0)))))))))))) || (GUARD_NOTSTARTED == GUARD_STARTED && ((NONE == NONE && (S0 == J2 && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.callState == NOTCALLED && (((NOTCALLED == NOTCALLED && ((S0 == S0 && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.ts_E.h <= ts_J.avg - 3 * ts_J.stddev ) || (S0 == S0 && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.ts_E.h > ts_J.avg - 3 * ts_J.stddev ))) || (NOTCALLED == CALLED && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.ts_E.autState == S0 && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.ts_E.h <= ts_J.avg - 3 * ts_J.stddev ) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.ts_E.autState == S0 && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.ts_E.h > ts_J.avg - 3 * ts_J.stddev )))) || ((NOTCALLED == NOTCALLED && (((((FST == FST && 0) || (FST == SND && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.guardState == GUARD_NOTSTARTED && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9)  && ((NONE == NONE && (std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end() || std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), S0) !=shallow_final_choice2B_guard.end())) || (NONE == LEFT && std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end()) || (NONE == RIGHT && std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice2B_guard.autState) !=shallow_final_choice2B_guard.end())))) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.guardState == GUARD_STARTED && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == NONE && (std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end() || std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), S0) !=shallow_final_choice2B_guard.end())) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == LEFT && std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end()) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == RIGHT && std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice2B_guard.autState) !=shallow_final_choice2B_guard.end())))))) || KLEENE_NOTSTARTED == ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.kleeneState) && (FST == FST && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && S0 == S0))) || (FST == FST && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && S0 == S0)))) || (NOTCALLED == CALLED && (((((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.interruptState == FST && 0) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.interruptState == SND && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.guardState == GUARD_NOTSTARTED && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9)  && ((NONE == NONE && (std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end() || std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), S0) !=shallow_final_choice2B_guard.end())) || (NONE == LEFT && std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end()) || (NONE == RIGHT && std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice2B_guard.autState) !=shallow_final_choice2B_guard.end())))) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.guardState == GUARD_STARTED && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == NONE && (std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end() || std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), S0) !=shallow_final_choice2B_guard.end())) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == LEFT && std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end()) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == RIGHT && std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice2B_guard.autState) !=shallow_final_choice2B_guard.end())))))) || KLEENE_NOTSTARTED == ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.kleeneState) && (FST == FST && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && S0 == S0))) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.interruptState == FST && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_pguardB.ts_C.autState == S0))))))) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.callState == CALLED && (((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.callState == NOTCALLED && ((S0 == S0 && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.ts_E.h <= ts_J.avg - 3 * ts_J.stddev ) || (S0 == S0 && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.ts_E.h > ts_J.avg - 3 * ts_J.stddev ))) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.callState == CALLED && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.ts_E.autState == S0 && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.ts_E.h <= ts_J.avg - 3 * ts_J.stddev ) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.ts_E.autState == S0 && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.ts_E.h > ts_J.avg - 3 * ts_J.stddev )))) || ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.callState == NOTCALLED && (((((FST == FST && 0) || (FST == SND && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.guardState == GUARD_NOTSTARTED && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9)  && ((NONE == NONE && (std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end() || std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), S0) !=shallow_final_choice2B_guard.end())) || (NONE == LEFT && std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end()) || (NONE == RIGHT && std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice2B_guard.autState) !=shallow_final_choice2B_guard.end())))) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.guardState == GUARD_STARTED && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == NONE && (std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end() || std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), S0) !=shallow_final_choice2B_guard.end())) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == LEFT && std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end()) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == RIGHT && std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice2B_guard.autState) !=shallow_final_choice2B_guard.end())))))) || KLEENE_NOTSTARTED == ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.kleeneState) && (FST == FST && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && S0 == S0))) || (FST == FST && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && S0 == S0)))) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.callState == CALLED && (((((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.interruptState == FST && 0) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.interruptState == SND && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.guardState == GUARD_NOTSTARTED && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9)  && ((NONE == NONE && (std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end() || std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), S0) !=shallow_final_choice2B_guard.end())) || (NONE == LEFT && std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end()) || (NONE == RIGHT && std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice2B_guard.autState) !=shallow_final_choice2B_guard.end())))) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.guardState == GUARD_STARTED && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == NONE && (std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end() || std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), S0) !=shallow_final_choice2B_guard.end())) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == LEFT && std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end()) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == RIGHT && std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice2B_guard.autState) !=shallow_final_choice2B_guard.end())))))) || KLEENE_NOTSTARTED == ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.kleeneState) && (FST == FST && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && S0 == S0))) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.interruptState == FST && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_pguardB.ts_C.autState == S0)))))))))) || (NONE == LEFT && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.autState == J2 && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.callState == NOTCALLED && (((NOTCALLED == NOTCALLED && ((S0 == S0 && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.ts_E.h <= ts_J.avg - 3 * ts_J.stddev ) || (S0 == S0 && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.ts_E.h > ts_J.avg - 3 * ts_J.stddev ))) || (NOTCALLED == CALLED && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.ts_E.autState == S0 && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.ts_E.h <= ts_J.avg - 3 * ts_J.stddev ) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.ts_E.autState == S0 && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.ts_E.h > ts_J.avg - 3 * ts_J.stddev )))) || ((NOTCALLED == NOTCALLED && (((((FST == FST && 0) || (FST == SND && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.guardState == GUARD_NOTSTARTED && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9)  && ((NONE == NONE && (std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end() || std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), S0) !=shallow_final_choice2B_guard.end())) || (NONE == LEFT && std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end()) || (NONE == RIGHT && std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice2B_guard.autState) !=shallow_final_choice2B_guard.end())))) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.guardState == GUARD_STARTED && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == NONE && (std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end() || std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), S0) !=shallow_final_choice2B_guard.end())) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == LEFT && std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end()) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == RIGHT && std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice2B_guard.autState) !=shallow_final_choice2B_guard.end())))))) || KLEENE_NOTSTARTED == ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.kleeneState) && (FST == FST && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && S0 == S0))) || (FST == FST && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && S0 == S0)))) || (NOTCALLED == CALLED && (((((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.interruptState == FST && 0) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.interruptState == SND && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.guardState == GUARD_NOTSTARTED && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9)  && ((NONE == NONE && (std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end() || std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), S0) !=shallow_final_choice2B_guard.end())) || (NONE == LEFT && std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end()) || (NONE == RIGHT && std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice2B_guard.autState) !=shallow_final_choice2B_guard.end())))) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.guardState == GUARD_STARTED && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == NONE && (std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end() || std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), S0) !=shallow_final_choice2B_guard.end())) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == LEFT && std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end()) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == RIGHT && std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice2B_guard.autState) !=shallow_final_choice2B_guard.end())))))) || KLEENE_NOTSTARTED == ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.kleeneState) && (FST == FST && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && S0 == S0))) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.interruptState == FST && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_pguardB.ts_C.autState == S0))))))) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.callState == CALLED && (((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.callState == NOTCALLED && ((S0 == S0 && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.ts_E.h <= ts_J.avg - 3 * ts_J.stddev ) || (S0 == S0 && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.ts_E.h > ts_J.avg - 3 * ts_J.stddev ))) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.callState == CALLED && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.ts_E.autState == S0 && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.ts_E.h <= ts_J.avg - 3 * ts_J.stddev ) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.ts_E.autState == S0 && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.ts_E.h > ts_J.avg - 3 * ts_J.stddev )))) || ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.callState == NOTCALLED && (((((FST == FST && 0) || (FST == SND && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.guardState == GUARD_NOTSTARTED && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9)  && ((NONE == NONE && (std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end() || std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), S0) !=shallow_final_choice2B_guard.end())) || (NONE == LEFT && std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end()) || (NONE == RIGHT && std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice2B_guard.autState) !=shallow_final_choice2B_guard.end())))) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.guardState == GUARD_STARTED && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == NONE && (std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end() || std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), S0) !=shallow_final_choice2B_guard.end())) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == LEFT && std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end()) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == RIGHT && std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice2B_guard.autState) !=shallow_final_choice2B_guard.end())))))) || KLEENE_NOTSTARTED == ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.kleeneState) && (FST == FST && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && S0 == S0))) || (FST == FST && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && S0 == S0)))) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.callState == CALLED && (((((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.interruptState == FST && 0) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.interruptState == SND && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.guardState == GUARD_NOTSTARTED && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9)  && ((NONE == NONE && (std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end() || std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), S0) !=shallow_final_choice2B_guard.end())) || (NONE == LEFT && std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end()) || (NONE == RIGHT && std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice2B_guard.autState) !=shallow_final_choice2B_guard.end())))) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.guardState == GUARD_STARTED && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == NONE && (std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end() || std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), S0) !=shallow_final_choice2B_guard.end())) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == LEFT && std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end()) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == RIGHT && std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice2B_guard.autState) !=shallow_final_choice2B_guard.end())))))) || KLEENE_NOTSTARTED == ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.kleeneState) && (FST == FST && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && S0 == S0))) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.interruptState == FST && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_pguardB.ts_C.autState == S0)))))))))) || (NONE == NONE && ((NOTCALLED == NOTCALLED && (((NOTCALLED == NOTCALLED && ((S0 == S0 && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F2.ts_E.h <= ts_J.avg - 3 * ts_J.stddev ) || (S0 == S0 && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F2.ts_E.h > ts_J.avg - 3 * ts_J.stddev ))) || (NOTCALLED == CALLED && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F2.ts_E.autState == S0 && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F2.ts_E.h <= ts_J.avg - 3 * ts_J.stddev ) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F2.ts_E.autState == S0 && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F2.ts_E.h > ts_J.avg - 3 * ts_J.stddev )))) || ((NOTCALLED == NOTCALLED && (((((FST == FST && 0) || (FST == SND && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.guardState == GUARD_NOTSTARTED && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9)  && ((NONE == NONE && (std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end() || std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), S0) !=shallow_final_choice2B_guard.end())) || (NONE == LEFT && std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end()) || (NONE == RIGHT && std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice2B_guard.autState) !=shallow_final_choice2B_guard.end())))) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.guardState == GUARD_STARTED && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == NONE && (std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end() || std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), S0) !=shallow_final_choice2B_guard.end())) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == LEFT && std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end()) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == RIGHT && std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice2B_guard.autState) !=shallow_final_choice2B_guard.end())))))) || KLEENE_NOTSTARTED == ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.kleeneState) && (FST == FST && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && S0 == S0))) || (FST == FST && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && S0 == S0)))) || (NOTCALLED == CALLED && (((((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.interruptState == FST && 0) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.interruptState == SND && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.guardState == GUARD_NOTSTARTED && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9)  && ((NONE == NONE && (std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end() || std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), S0) !=shallow_final_choice2B_guard.end())) || (NONE == LEFT && std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end()) || (NONE == RIGHT && std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice2B_guard.autState) !=shallow_final_choice2B_guard.end())))) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.guardState == GUARD_STARTED && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == NONE && (std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end() || std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), S0) !=shallow_final_choice2B_guard.end())) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == LEFT && std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end()) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == RIGHT && std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice2B_guard.autState) !=shallow_final_choice2B_guard.end())))))) || KLEENE_NOTSTARTED == ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.kleeneState) && (FST == FST && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && S0 == S0))) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.interruptState == FST && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_pguardB.ts_C.autState == S0))))))) || (NOTCALLED == CALLED && (((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F2.callState == NOTCALLED && ((S0 == S0 && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F2.ts_E.h <= ts_J.avg - 3 * ts_J.stddev ) || (S0 == S0 && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F2.ts_E.h > ts_J.avg - 3 * ts_J.stddev ))) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F2.callState == CALLED && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F2.ts_E.autState == S0 && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F2.ts_E.h <= ts_J.avg - 3 * ts_J.stddev ) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F2.ts_E.autState == S0 && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F2.ts_E.h > ts_J.avg - 3 * ts_J.stddev )))) || ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.callState == NOTCALLED && (((((FST == FST && 0) || (FST == SND && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.guardState == GUARD_NOTSTARTED && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9)  && ((NONE == NONE && (std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end() || std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), S0) !=shallow_final_choice2B_guard.end())) || (NONE == LEFT && std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end()) || (NONE == RIGHT && std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice2B_guard.autState) !=shallow_final_choice2B_guard.end())))) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.guardState == GUARD_STARTED && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == NONE && (std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end() || std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), S0) !=shallow_final_choice2B_guard.end())) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == LEFT && std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end()) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == RIGHT && std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice2B_guard.autState) !=shallow_final_choice2B_guard.end())))))) || KLEENE_NOTSTARTED == ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.kleeneState) && (FST == FST && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && S0 == S0))) || (FST == FST && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && S0 == S0)))) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.callState == CALLED && (((((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.interruptState == FST && 0) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.interruptState == SND && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.guardState == GUARD_NOTSTARTED && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9)  && ((NONE == NONE && (std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end() || std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), S0) !=shallow_final_choice2B_guard.end())) || (NONE == LEFT && std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end()) || (NONE == RIGHT && std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice2B_guard.autState) !=shallow_final_choice2B_guard.end())))) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.guardState == GUARD_STARTED && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == NONE && (std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end() || std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), S0) !=shallow_final_choice2B_guard.end())) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == LEFT && std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end()) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == RIGHT && std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice2B_guard.autState) !=shallow_final_choice2B_guard.end())))))) || KLEENE_NOTSTARTED == ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.kleeneState) && (FST == FST && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && S0 == S0))) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.interruptState == FST && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_pguardB.ts_C.autState == S0))))))))) || (NONE == RIGHT && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.callState == NOTCALLED && (((NOTCALLED == NOTCALLED && ((S0 == S0 && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F2.ts_E.h <= ts_J.avg - 3 * ts_J.stddev ) || (S0 == S0 && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F2.ts_E.h > ts_J.avg - 3 * ts_J.stddev ))) || (NOTCALLED == CALLED && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F2.ts_E.autState == S0 && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F2.ts_E.h <= ts_J.avg - 3 * ts_J.stddev ) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F2.ts_E.autState == S0 && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F2.ts_E.h > ts_J.avg - 3 * ts_J.stddev )))) || ((NOTCALLED == NOTCALLED && (((((FST == FST && 0) || (FST == SND && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.guardState == GUARD_NOTSTARTED && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9)  && ((NONE == NONE && (std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end() || std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), S0) !=shallow_final_choice2B_guard.end())) || (NONE == LEFT && std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end()) || (NONE == RIGHT && std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice2B_guard.autState) !=shallow_final_choice2B_guard.end())))) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.guardState == GUARD_STARTED && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == NONE && (std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end() || std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), S0) !=shallow_final_choice2B_guard.end())) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == LEFT && std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end()) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == RIGHT && std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice2B_guard.autState) !=shallow_final_choice2B_guard.end())))))) || KLEENE_NOTSTARTED == ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.kleeneState) && (FST == FST && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && S0 == S0))) || (FST == FST && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && S0 == S0)))) || (NOTCALLED == CALLED && (((((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.interruptState == FST && 0) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.interruptState == SND && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.guardState == GUARD_NOTSTARTED && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9)  && ((NONE == NONE && (std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end() || std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), S0) !=shallow_final_choice2B_guard.end())) || (NONE == LEFT && std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end()) || (NONE == RIGHT && std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice2B_guard.autState) !=shallow_final_choice2B_guard.end())))) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.guardState == GUARD_STARTED && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == NONE && (std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end() || std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), S0) !=shallow_final_choice2B_guard.end())) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == LEFT && std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end()) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == RIGHT && std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice2B_guard.autState) !=shallow_final_choice2B_guard.end())))))) || KLEENE_NOTSTARTED == ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.kleeneState) && (FST == FST && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && S0 == S0))) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.interruptState == FST && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_pguardB.ts_C.autState == S0))))))) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.callState == CALLED && (((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F2.callState == NOTCALLED && ((S0 == S0 && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F2.ts_E.h <= ts_J.avg - 3 * ts_J.stddev ) || (S0 == S0 && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F2.ts_E.h > ts_J.avg - 3 * ts_J.stddev ))) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F2.callState == CALLED && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F2.ts_E.autState == S0 && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F2.ts_E.h <= ts_J.avg - 3 * ts_J.stddev ) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F2.ts_E.autState == S0 && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F2.ts_E.h > ts_J.avg - 3 * ts_J.stddev )))) || ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.callState == NOTCALLED && (((((FST == FST && 0) || (FST == SND && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.guardState == GUARD_NOTSTARTED && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9)  && ((NONE == NONE && (std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end() || std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), S0) !=shallow_final_choice2B_guard.end())) || (NONE == LEFT && std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end()) || (NONE == RIGHT && std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice2B_guard.autState) !=shallow_final_choice2B_guard.end())))) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.guardState == GUARD_STARTED && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == NONE && (std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end() || std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), S0) !=shallow_final_choice2B_guard.end())) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == LEFT && std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end()) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == RIGHT && std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice2B_guard.autState) !=shallow_final_choice2B_guard.end())))))) || KLEENE_NOTSTARTED == ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.kleeneState) && (FST == FST && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && S0 == S0))) || (FST == FST && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && S0 == S0)))) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.callState == CALLED && (((((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.interruptState == FST && 0) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.interruptState == SND && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.guardState == GUARD_NOTSTARTED && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9)  && ((NONE == NONE && (std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end() || std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), S0) !=shallow_final_choice2B_guard.end())) || (NONE == LEFT && std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end()) || (NONE == RIGHT && std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice2B_guard.autState) !=shallow_final_choice2B_guard.end())))) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.guardState == GUARD_STARTED && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == NONE && (std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end() || std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), S0) !=shallow_final_choice2B_guard.end())) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == LEFT && std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end()) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == RIGHT && std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice2B_guard.autState) !=shallow_final_choice2B_guard.end())))))) || KLEENE_NOTSTARTED == ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.kleeneState) && (FST == FST && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && S0 == S0))) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.interruptState == FST && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_pguardB.ts_C.autState == S0))))))))))))))
	{
		ts_J.avg = getAverage(ts_J.vec); ts_J.stddev = getDeviation(ts_J.vec);ts_J.interruptState = SND;
		ts_J.ts_guardJ.guardState = GUARD_NOTSTARTED;
		ts_J.ts_guardJ.ts_choiceJ_guard.choiceState = NONE;
		if((ts_J.ts_guardJ.guardState == GUARD_NOTSTARTED && (ts_J.clock_timed_interrupt.expired(7.2E12)  && ((NONE == NONE && (S0 == J2 && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.callState == NOTCALLED && (((NOTCALLED == NOTCALLED && ((S0 == S0 && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.ts_E.h <= ts_J.avg - 3 * ts_J.stddev ) || (S0 == S0 && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.ts_E.h > ts_J.avg - 3 * ts_J.stddev ))) || (NOTCALLED == CALLED && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.ts_E.autState == S0 && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.ts_E.h <= ts_J.avg - 3 * ts_J.stddev ) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.ts_E.autState == S0 && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.ts_E.h > ts_J.avg - 3 * ts_J.stddev )))) || ((NOTCALLED == NOTCALLED && (((((FST == FST && 0) || (FST == SND && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.guardState == GUARD_NOTSTARTED && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9)  && ((NONE == NONE && (std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end() || std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), S0) !=shallow_final_choice2B_guard.end())) || (NONE == LEFT && std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end()) || (NONE == RIGHT && std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice2B_guard.autState) !=shallow_final_choice2B_guard.end())))) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.guardState == GUARD_STARTED && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == NONE && (std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end() || std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), S0) !=shallow_final_choice2B_guard.end())) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == LEFT && std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end()) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == RIGHT && std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice2B_guard.autState) !=shallow_final_choice2B_guard.end())))))) || KLEENE_NOTSTARTED == ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.kleeneState) && (FST == FST && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && S0 == S0))) || (FST == FST && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && S0 == S0)))) || (NOTCALLED == CALLED && (((((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.interruptState == FST && 0) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.interruptState == SND && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.guardState == GUARD_NOTSTARTED && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9)  && ((NONE == NONE && (std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end() || std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), S0) !=shallow_final_choice2B_guard.end())) || (NONE == LEFT && std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end()) || (NONE == RIGHT && std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice2B_guard.autState) !=shallow_final_choice2B_guard.end())))) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.guardState == GUARD_STARTED && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == NONE && (std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end() || std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), S0) !=shallow_final_choice2B_guard.end())) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == LEFT && std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end()) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == RIGHT && std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice2B_guard.autState) !=shallow_final_choice2B_guard.end())))))) || KLEENE_NOTSTARTED == ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.kleeneState) && (FST == FST && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && S0 == S0))) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.interruptState == FST && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_pguardB.ts_C.autState == S0))))))) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.callState == CALLED && (((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.callState == NOTCALLED && ((S0 == S0 && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.ts_E.h <= ts_J.avg - 3 * ts_J.stddev ) || (S0 == S0 && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.ts_E.h > ts_J.avg - 3 * ts_J.stddev ))) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.callState == CALLED && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.ts_E.autState == S0 && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.ts_E.h <= ts_J.avg - 3 * ts_J.stddev ) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.ts_E.autState == S0 && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.ts_E.h > ts_J.avg - 3 * ts_J.stddev )))) || ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.callState == NOTCALLED && (((((FST == FST && 0) || (FST == SND && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.guardState == GUARD_NOTSTARTED && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9)  && ((NONE == NONE && (std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end() || std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), S0) !=shallow_final_choice2B_guard.end())) || (NONE == LEFT && std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end()) || (NONE == RIGHT && std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice2B_guard.autState) !=shallow_final_choice2B_guard.end())))) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.guardState == GUARD_STARTED && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == NONE && (std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end() || std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), S0) !=shallow_final_choice2B_guard.end())) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == LEFT && std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end()) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == RIGHT && std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice2B_guard.autState) !=shallow_final_choice2B_guard.end())))))) || KLEENE_NOTSTARTED == ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.kleeneState) && (FST == FST && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && S0 == S0))) || (FST == FST && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && S0 == S0)))) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.callState == CALLED && (((((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.interruptState == FST && 0) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.interruptState == SND && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.guardState == GUARD_NOTSTARTED && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9)  && ((NONE == NONE && (std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end() || std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), S0) !=shallow_final_choice2B_guard.end())) || (NONE == LEFT && std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end()) || (NONE == RIGHT && std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice2B_guard.autState) !=shallow_final_choice2B_guard.end())))) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.guardState == GUARD_STARTED && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == NONE && (std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end() || std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), S0) !=shallow_final_choice2B_guard.end())) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == LEFT && std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end()) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == RIGHT && std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice2B_guard.autState) !=shallow_final_choice2B_guard.end())))))) || KLEENE_NOTSTARTED == ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.kleeneState) && (FST == FST && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && S0 == S0))) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.interruptState == FST && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_pguardB.ts_C.autState == S0)))))))))) || (NONE == LEFT && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.autState == J2 && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.callState == NOTCALLED && (((NOTCALLED == NOTCALLED && ((S0 == S0 && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.ts_E.h <= ts_J.avg - 3 * ts_J.stddev ) || (S0 == S0 && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.ts_E.h > ts_J.avg - 3 * ts_J.stddev ))) || (NOTCALLED == CALLED && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.ts_E.autState == S0 && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.ts_E.h <= ts_J.avg - 3 * ts_J.stddev ) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.ts_E.autState == S0 && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.ts_E.h > ts_J.avg - 3 * ts_J.stddev )))) || ((NOTCALLED == NOTCALLED && (((((FST == FST && 0) || (FST == SND && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.guardState == GUARD_NOTSTARTED && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9)  && ((NONE == NONE && (std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end() || std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), S0) !=shallow_final_choice2B_guard.end())) || (NONE == LEFT && std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end()) || (NONE == RIGHT && std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice2B_guard.autState) !=shallow_final_choice2B_guard.end())))) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.guardState == GUARD_STARTED && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == NONE && (std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end() || std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), S0) !=shallow_final_choice2B_guard.end())) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == LEFT && std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end()) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == RIGHT && std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice2B_guard.autState) !=shallow_final_choice2B_guard.end())))))) || KLEENE_NOTSTARTED == ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.kleeneState) && (FST == FST && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && S0 == S0))) || (FST == FST && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && S0 == S0)))) || (NOTCALLED == CALLED && (((((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.interruptState == FST && 0) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.interruptState == SND && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.guardState == GUARD_NOTSTARTED && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9)  && ((NONE == NONE && (std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end() || std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), S0) !=shallow_final_choice2B_guard.end())) || (NONE == LEFT && std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end()) || (NONE == RIGHT && std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice2B_guard.autState) !=shallow_final_choice2B_guard.end())))) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.guardState == GUARD_STARTED && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == NONE && (std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end() || std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), S0) !=shallow_final_choice2B_guard.end())) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == LEFT && std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end()) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == RIGHT && std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice2B_guard.autState) !=shallow_final_choice2B_guard.end())))))) || KLEENE_NOTSTARTED == ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.kleeneState) && (FST == FST && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && S0 == S0))) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.interruptState == FST && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_pguardB.ts_C.autState == S0))))))) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.callState == CALLED && (((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.callState == NOTCALLED && ((S0 == S0 && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.ts_E.h <= ts_J.avg - 3 * ts_J.stddev ) || (S0 == S0 && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.ts_E.h > ts_J.avg - 3 * ts_J.stddev ))) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.callState == CALLED && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.ts_E.autState == S0 && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.ts_E.h <= ts_J.avg - 3 * ts_J.stddev ) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.ts_E.autState == S0 && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.ts_E.h > ts_J.avg - 3 * ts_J.stddev )))) || ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.callState == NOTCALLED && (((((FST == FST && 0) || (FST == SND && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.guardState == GUARD_NOTSTARTED && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9)  && ((NONE == NONE && (std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end() || std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), S0) !=shallow_final_choice2B_guard.end())) || (NONE == LEFT && std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end()) || (NONE == RIGHT && std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice2B_guard.autState) !=shallow_final_choice2B_guard.end())))) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.guardState == GUARD_STARTED && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == NONE && (std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end() || std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), S0) !=shallow_final_choice2B_guard.end())) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == LEFT && std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end()) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == RIGHT && std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice2B_guard.autState) !=shallow_final_choice2B_guard.end())))))) || KLEENE_NOTSTARTED == ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.kleeneState) && (FST == FST && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && S0 == S0))) || (FST == FST && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && S0 == S0)))) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.callState == CALLED && (((((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.interruptState == FST && 0) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.interruptState == SND && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.guardState == GUARD_NOTSTARTED && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9)  && ((NONE == NONE && (std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end() || std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), S0) !=shallow_final_choice2B_guard.end())) || (NONE == LEFT && std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end()) || (NONE == RIGHT && std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice2B_guard.autState) !=shallow_final_choice2B_guard.end())))) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.guardState == GUARD_STARTED && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == NONE && (std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end() || std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), S0) !=shallow_final_choice2B_guard.end())) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == LEFT && std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end()) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == RIGHT && std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice2B_guard.autState) !=shallow_final_choice2B_guard.end())))))) || KLEENE_NOTSTARTED == ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.kleeneState) && (FST == FST && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && S0 == S0))) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.interruptState == FST && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_pguardB.ts_C.autState == S0)))))))))) || (NONE == NONE && ((NOTCALLED == NOTCALLED && (((NOTCALLED == NOTCALLED && ((S0 == S0 && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F2.ts_E.h <= ts_J.avg - 3 * ts_J.stddev ) || (S0 == S0 && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F2.ts_E.h > ts_J.avg - 3 * ts_J.stddev ))) || (NOTCALLED == CALLED && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F2.ts_E.autState == S0 && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F2.ts_E.h <= ts_J.avg - 3 * ts_J.stddev ) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F2.ts_E.autState == S0 && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F2.ts_E.h > ts_J.avg - 3 * ts_J.stddev )))) || ((NOTCALLED == NOTCALLED && (((((FST == FST && 0) || (FST == SND && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.guardState == GUARD_NOTSTARTED && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9)  && ((NONE == NONE && (std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end() || std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), S0) !=shallow_final_choice2B_guard.end())) || (NONE == LEFT && std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end()) || (NONE == RIGHT && std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice2B_guard.autState) !=shallow_final_choice2B_guard.end())))) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.guardState == GUARD_STARTED && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == NONE && (std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end() || std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), S0) !=shallow_final_choice2B_guard.end())) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == LEFT && std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end()) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == RIGHT && std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice2B_guard.autState) !=shallow_final_choice2B_guard.end())))))) || KLEENE_NOTSTARTED == ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.kleeneState) && (FST == FST && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && S0 == S0))) || (FST == FST && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && S0 == S0)))) || (NOTCALLED == CALLED && (((((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.interruptState == FST && 0) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.interruptState == SND && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.guardState == GUARD_NOTSTARTED && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9)  && ((NONE == NONE && (std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end() || std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), S0) !=shallow_final_choice2B_guard.end())) || (NONE == LEFT && std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end()) || (NONE == RIGHT && std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice2B_guard.autState) !=shallow_final_choice2B_guard.end())))) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.guardState == GUARD_STARTED && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == NONE && (std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end() || std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), S0) !=shallow_final_choice2B_guard.end())) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == LEFT && std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end()) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == RIGHT && std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice2B_guard.autState) !=shallow_final_choice2B_guard.end())))))) || KLEENE_NOTSTARTED == ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.kleeneState) && (FST == FST && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && S0 == S0))) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.interruptState == FST && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_pguardB.ts_C.autState == S0))))))) || (NOTCALLED == CALLED && (((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F2.callState == NOTCALLED && ((S0 == S0 && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F2.ts_E.h <= ts_J.avg - 3 * ts_J.stddev ) || (S0 == S0 && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F2.ts_E.h > ts_J.avg - 3 * ts_J.stddev ))) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F2.callState == CALLED && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F2.ts_E.autState == S0 && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F2.ts_E.h <= ts_J.avg - 3 * ts_J.stddev ) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F2.ts_E.autState == S0 && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F2.ts_E.h > ts_J.avg - 3 * ts_J.stddev )))) || ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.callState == NOTCALLED && (((((FST == FST && 0) || (FST == SND && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.guardState == GUARD_NOTSTARTED && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9)  && ((NONE == NONE && (std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end() || std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), S0) !=shallow_final_choice2B_guard.end())) || (NONE == LEFT && std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end()) || (NONE == RIGHT && std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice2B_guard.autState) !=shallow_final_choice2B_guard.end())))) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.guardState == GUARD_STARTED && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == NONE && (std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end() || std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), S0) !=shallow_final_choice2B_guard.end())) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == LEFT && std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end()) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == RIGHT && std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice2B_guard.autState) !=shallow_final_choice2B_guard.end())))))) || KLEENE_NOTSTARTED == ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.kleeneState) && (FST == FST && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && S0 == S0))) || (FST == FST && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && S0 == S0)))) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.callState == CALLED && (((((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.interruptState == FST && 0) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.interruptState == SND && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.guardState == GUARD_NOTSTARTED && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9)  && ((NONE == NONE && (std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end() || std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), S0) !=shallow_final_choice2B_guard.end())) || (NONE == LEFT && std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end()) || (NONE == RIGHT && std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice2B_guard.autState) !=shallow_final_choice2B_guard.end())))) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.guardState == GUARD_STARTED && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == NONE && (std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end() || std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), S0) !=shallow_final_choice2B_guard.end())) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == LEFT && std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end()) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == RIGHT && std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice2B_guard.autState) !=shallow_final_choice2B_guard.end())))))) || KLEENE_NOTSTARTED == ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.kleeneState) && (FST == FST && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && S0 == S0))) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.interruptState == FST && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_pguardB.ts_C.autState == S0))))))))) || (NONE == RIGHT && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.callState == NOTCALLED && (((NOTCALLED == NOTCALLED && ((S0 == S0 && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F2.ts_E.h <= ts_J.avg - 3 * ts_J.stddev ) || (S0 == S0 && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F2.ts_E.h > ts_J.avg - 3 * ts_J.stddev ))) || (NOTCALLED == CALLED && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F2.ts_E.autState == S0 && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F2.ts_E.h <= ts_J.avg - 3 * ts_J.stddev ) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F2.ts_E.autState == S0 && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F2.ts_E.h > ts_J.avg - 3 * ts_J.stddev )))) || ((NOTCALLED == NOTCALLED && (((((FST == FST && 0) || (FST == SND && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.guardState == GUARD_NOTSTARTED && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9)  && ((NONE == NONE && (std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end() || std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), S0) !=shallow_final_choice2B_guard.end())) || (NONE == LEFT && std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end()) || (NONE == RIGHT && std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice2B_guard.autState) !=shallow_final_choice2B_guard.end())))) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.guardState == GUARD_STARTED && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == NONE && (std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end() || std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), S0) !=shallow_final_choice2B_guard.end())) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == LEFT && std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end()) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == RIGHT && std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice2B_guard.autState) !=shallow_final_choice2B_guard.end())))))) || KLEENE_NOTSTARTED == ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.kleeneState) && (FST == FST && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && S0 == S0))) || (FST == FST && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && S0 == S0)))) || (NOTCALLED == CALLED && (((((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.interruptState == FST && 0) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.interruptState == SND && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.guardState == GUARD_NOTSTARTED && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9)  && ((NONE == NONE && (std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end() || std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), S0) !=shallow_final_choice2B_guard.end())) || (NONE == LEFT && std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end()) || (NONE == RIGHT && std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice2B_guard.autState) !=shallow_final_choice2B_guard.end())))) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.guardState == GUARD_STARTED && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == NONE && (std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end() || std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), S0) !=shallow_final_choice2B_guard.end())) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == LEFT && std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end()) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == RIGHT && std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice2B_guard.autState) !=shallow_final_choice2B_guard.end())))))) || KLEENE_NOTSTARTED == ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.kleeneState) && (FST == FST && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && S0 == S0))) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.interruptState == FST && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_pguardB.ts_C.autState == S0))))))) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.callState == CALLED && (((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F2.callState == NOTCALLED && ((S0 == S0 && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F2.ts_E.h <= ts_J.avg - 3 * ts_J.stddev ) || (S0 == S0 && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F2.ts_E.h > ts_J.avg - 3 * ts_J.stddev ))) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F2.callState == CALLED && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F2.ts_E.autState == S0 && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F2.ts_E.h <= ts_J.avg - 3 * ts_J.stddev ) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F2.ts_E.autState == S0 && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F2.ts_E.h > ts_J.avg - 3 * ts_J.stddev )))) || ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.callState == NOTCALLED && (((((FST == FST && 0) || (FST == SND && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.guardState == GUARD_NOTSTARTED && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9)  && ((NONE == NONE && (std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end() || std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), S0) !=shallow_final_choice2B_guard.end())) || (NONE == LEFT && std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end()) || (NONE == RIGHT && std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice2B_guard.autState) !=shallow_final_choice2B_guard.end())))) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.guardState == GUARD_STARTED && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == NONE && (std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end() || std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), S0) !=shallow_final_choice2B_guard.end())) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == LEFT && std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end()) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == RIGHT && std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice2B_guard.autState) !=shallow_final_choice2B_guard.end())))))) || KLEENE_NOTSTARTED == ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.kleeneState) && (FST == FST && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && S0 == S0))) || (FST == FST && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && S0 == S0)))) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.callState == CALLED && (((((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.interruptState == FST && 0) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.interruptState == SND && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.guardState == GUARD_NOTSTARTED && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9)  && ((NONE == NONE && (std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end() || std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), S0) !=shallow_final_choice2B_guard.end())) || (NONE == LEFT && std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end()) || (NONE == RIGHT && std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice2B_guard.autState) !=shallow_final_choice2B_guard.end())))) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.guardState == GUARD_STARTED && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == NONE && (std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end() || std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), S0) !=shallow_final_choice2B_guard.end())) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == LEFT && std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end()) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == RIGHT && std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice2B_guard.autState) !=shallow_final_choice2B_guard.end())))))) || KLEENE_NOTSTARTED == ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.kleeneState) && (FST == FST && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && S0 == S0))) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.interruptState == FST && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_pguardB.ts_C.autState == S0)))))))))))))
		{
			ts_J.ts_guardJ.guardState = GUARD_STARTED;
			if((ts_J.ts_guardJ.ts_choiceJ_guard.choiceState == NONE && (S0 == J2 && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.callState == NOTCALLED && (((NOTCALLED == NOTCALLED && ((S0 == S0 && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.ts_E.h <= ts_J.avg - 3 * ts_J.stddev ) || (S0 == S0 && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.ts_E.h > ts_J.avg - 3 * ts_J.stddev ))) || (NOTCALLED == CALLED && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.ts_E.autState == S0 && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.ts_E.h <= ts_J.avg - 3 * ts_J.stddev ) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.ts_E.autState == S0 && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.ts_E.h > ts_J.avg - 3 * ts_J.stddev )))) || ((NOTCALLED == NOTCALLED && (((((FST == FST && 0) || (FST == SND && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.guardState == GUARD_NOTSTARTED && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9)  && ((NONE == NONE && (std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end() || std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), S0) !=shallow_final_choice2B_guard.end())) || (NONE == LEFT && std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end()) || (NONE == RIGHT && std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice2B_guard.autState) !=shallow_final_choice2B_guard.end())))) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.guardState == GUARD_STARTED && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == NONE && (std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end() || std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), S0) !=shallow_final_choice2B_guard.end())) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == LEFT && std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end()) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == RIGHT && std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice2B_guard.autState) !=shallow_final_choice2B_guard.end())))))) || KLEENE_NOTSTARTED == ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.kleeneState) && (FST == FST && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && S0 == S0))) || (FST == FST && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && S0 == S0)))) || (NOTCALLED == CALLED && (((((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.interruptState == FST && 0) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.interruptState == SND && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.guardState == GUARD_NOTSTARTED && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9)  && ((NONE == NONE && (std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end() || std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), S0) !=shallow_final_choice2B_guard.end())) || (NONE == LEFT && std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end()) || (NONE == RIGHT && std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice2B_guard.autState) !=shallow_final_choice2B_guard.end())))) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.guardState == GUARD_STARTED && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == NONE && (std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end() || std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), S0) !=shallow_final_choice2B_guard.end())) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == LEFT && std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end()) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == RIGHT && std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice2B_guard.autState) !=shallow_final_choice2B_guard.end())))))) || KLEENE_NOTSTARTED == ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.kleeneState) && (FST == FST && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && S0 == S0))) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.interruptState == FST && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_pguardB.ts_C.autState == S0))))))) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.callState == CALLED && (((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.callState == NOTCALLED && ((S0 == S0 && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.ts_E.h <= ts_J.avg - 3 * ts_J.stddev ) || (S0 == S0 && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.ts_E.h > ts_J.avg - 3 * ts_J.stddev ))) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.callState == CALLED && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.ts_E.autState == S0 && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.ts_E.h <= ts_J.avg - 3 * ts_J.stddev ) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.ts_E.autState == S0 && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.ts_E.h > ts_J.avg - 3 * ts_J.stddev )))) || ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.callState == NOTCALLED && (((((FST == FST && 0) || (FST == SND && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.guardState == GUARD_NOTSTARTED && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9)  && ((NONE == NONE && (std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end() || std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), S0) !=shallow_final_choice2B_guard.end())) || (NONE == LEFT && std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end()) || (NONE == RIGHT && std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice2B_guard.autState) !=shallow_final_choice2B_guard.end())))) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.guardState == GUARD_STARTED && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == NONE && (std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end() || std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), S0) !=shallow_final_choice2B_guard.end())) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == LEFT && std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end()) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == RIGHT && std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice2B_guard.autState) !=shallow_final_choice2B_guard.end())))))) || KLEENE_NOTSTARTED == ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.kleeneState) && (FST == FST && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && S0 == S0))) || (FST == FST && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && S0 == S0)))) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.callState == CALLED && (((((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.interruptState == FST && 0) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.interruptState == SND && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.guardState == GUARD_NOTSTARTED && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9)  && ((NONE == NONE && (std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end() || std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), S0) !=shallow_final_choice2B_guard.end())) || (NONE == LEFT && std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end()) || (NONE == RIGHT && std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice2B_guard.autState) !=shallow_final_choice2B_guard.end())))) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.guardState == GUARD_STARTED && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == NONE && (std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end() || std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), S0) !=shallow_final_choice2B_guard.end())) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == LEFT && std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end()) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == RIGHT && std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice2B_guard.autState) !=shallow_final_choice2B_guard.end())))))) || KLEENE_NOTSTARTED == ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.kleeneState) && (FST == FST && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && S0 == S0))) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.interruptState == FST && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_pguardB.ts_C.autState == S0)))))))))))
			{
				ts_J.ts_guardJ.ts_choiceJ_guard.choiceState = LEFT;
				ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.autState = S0;
				if((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.autState == J2 && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.callState == NOTCALLED && (((NOTCALLED == NOTCALLED && ((S0 == S0 && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.ts_E.h <= ts_J.avg - 3 * ts_J.stddev ) || (S0 == S0 && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.ts_E.h > ts_J.avg - 3 * ts_J.stddev ))) || (NOTCALLED == CALLED && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.ts_E.autState == S0 && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.ts_E.h <= ts_J.avg - 3 * ts_J.stddev ) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.ts_E.autState == S0 && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.ts_E.h > ts_J.avg - 3 * ts_J.stddev )))) || ((NOTCALLED == NOTCALLED && (((((FST == FST && 0) || (FST == SND && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.guardState == GUARD_NOTSTARTED && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9)  && ((NONE == NONE && (std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end() || std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), S0) !=shallow_final_choice2B_guard.end())) || (NONE == LEFT && std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end()) || (NONE == RIGHT && std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice2B_guard.autState) !=shallow_final_choice2B_guard.end())))) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.guardState == GUARD_STARTED && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == NONE && (std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end() || std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), S0) !=shallow_final_choice2B_guard.end())) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == LEFT && std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end()) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == RIGHT && std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice2B_guard.autState) !=shallow_final_choice2B_guard.end())))))) || KLEENE_NOTSTARTED == ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.kleeneState) && (FST == FST && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && S0 == S0))) || (FST == FST && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && S0 == S0)))) || (NOTCALLED == CALLED && (((((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.interruptState == FST && 0) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.interruptState == SND && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.guardState == GUARD_NOTSTARTED && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9)  && ((NONE == NONE && (std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end() || std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), S0) !=shallow_final_choice2B_guard.end())) || (NONE == LEFT && std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end()) || (NONE == RIGHT && std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice2B_guard.autState) !=shallow_final_choice2B_guard.end())))) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.guardState == GUARD_STARTED && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == NONE && (std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end() || std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), S0) !=shallow_final_choice2B_guard.end())) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == LEFT && std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end()) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == RIGHT && std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice2B_guard.autState) !=shallow_final_choice2B_guard.end())))))) || KLEENE_NOTSTARTED == ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.kleeneState) && (FST == FST && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && S0 == S0))) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.interruptState == FST && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_pguardB.ts_C.autState == S0))))))) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.callState == CALLED && (((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.callState == NOTCALLED && ((S0 == S0 && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.ts_E.h <= ts_J.avg - 3 * ts_J.stddev ) || (S0 == S0 && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.ts_E.h > ts_J.avg - 3 * ts_J.stddev ))) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.callState == CALLED && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.ts_E.autState == S0 && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.ts_E.h <= ts_J.avg - 3 * ts_J.stddev ) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.ts_E.autState == S0 && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.ts_E.h > ts_J.avg - 3 * ts_J.stddev )))) || ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.callState == NOTCALLED && (((((FST == FST && 0) || (FST == SND && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.guardState == GUARD_NOTSTARTED && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9)  && ((NONE == NONE && (std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end() || std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), S0) !=shallow_final_choice2B_guard.end())) || (NONE == LEFT && std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end()) || (NONE == RIGHT && std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice2B_guard.autState) !=shallow_final_choice2B_guard.end())))) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.guardState == GUARD_STARTED && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == NONE && (std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end() || std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), S0) !=shallow_final_choice2B_guard.end())) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == LEFT && std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end()) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == RIGHT && std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice2B_guard.autState) !=shallow_final_choice2B_guard.end())))))) || KLEENE_NOTSTARTED == ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.kleeneState) && (FST == FST && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && S0 == S0))) || (FST == FST && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && S0 == S0)))) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.callState == CALLED && (((((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.interruptState == FST && 0) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.interruptState == SND && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.guardState == GUARD_NOTSTARTED && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9)  && ((NONE == NONE && (std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end() || std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), S0) !=shallow_final_choice2B_guard.end())) || (NONE == LEFT && std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end()) || (NONE == RIGHT && std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice2B_guard.autState) !=shallow_final_choice2B_guard.end())))) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.guardState == GUARD_STARTED && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == NONE && (std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end() || std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), S0) !=shallow_final_choice2B_guard.end())) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == LEFT && std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end()) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == RIGHT && std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice2B_guard.autState) !=shallow_final_choice2B_guard.end())))))) || KLEENE_NOTSTARTED == ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.kleeneState) && (FST == FST && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && S0 == S0))) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.interruptState == FST && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_pguardB.ts_C.autState == S0))))))))))
				{
					if((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.callState == NOTCALLED && (((NOTCALLED == NOTCALLED && ((S0 == S0 && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.ts_E.h <= ts_J.avg - 3 * ts_J.stddev ) || (S0 == S0 && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.ts_E.h > ts_J.avg - 3 * ts_J.stddev ))) || (NOTCALLED == CALLED && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.ts_E.autState == S0 && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.ts_E.h <= ts_J.avg - 3 * ts_J.stddev ) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.ts_E.autState == S0 && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.ts_E.h > ts_J.avg - 3 * ts_J.stddev )))) || ((NOTCALLED == NOTCALLED && (((((FST == FST && 0) || (FST == SND && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.guardState == GUARD_NOTSTARTED && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9)  && ((NONE == NONE && (std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end() || std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), S0) !=shallow_final_choice2B_guard.end())) || (NONE == LEFT && std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end()) || (NONE == RIGHT && std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice2B_guard.autState) !=shallow_final_choice2B_guard.end())))) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.guardState == GUARD_STARTED && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == NONE && (std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end() || std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), S0) !=shallow_final_choice2B_guard.end())) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == LEFT && std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end()) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == RIGHT && std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice2B_guard.autState) !=shallow_final_choice2B_guard.end())))))) || KLEENE_NOTSTARTED == ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.kleeneState) && (FST == FST && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && S0 == S0))) || (FST == FST && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && S0 == S0)))) || (NOTCALLED == CALLED && (((((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.interruptState == FST && 0) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.interruptState == SND && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.guardState == GUARD_NOTSTARTED && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9)  && ((NONE == NONE && (std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end() || std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), S0) !=shallow_final_choice2B_guard.end())) || (NONE == LEFT && std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end()) || (NONE == RIGHT && std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice2B_guard.autState) !=shallow_final_choice2B_guard.end())))) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.guardState == GUARD_STARTED && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == NONE && (std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end() || std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), S0) !=shallow_final_choice2B_guard.end())) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == LEFT && std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end()) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == RIGHT && std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice2B_guard.autState) !=shallow_final_choice2B_guard.end())))))) || KLEENE_NOTSTARTED == ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.kleeneState) && (FST == FST && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && S0 == S0))) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.interruptState == FST && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_pguardB.ts_C.autState == S0))))))))
					{
						ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.callState = CALLED;
						ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.right_clock_F1.reset_clock();
						ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.left_clock_F2.reset_clock();
						ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.callState = NOTCALLED;
						ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.callState = NOTCALLED;
						if(((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.callState == NOTCALLED && ((S0 == S0 && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.ts_E.h <= ts_J.avg - 3 * ts_J.stddev ) || (S0 == S0 && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.ts_E.h > ts_J.avg - 3 * ts_J.stddev ))) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.callState == CALLED && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.ts_E.autState == S0 && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.ts_E.h <= ts_J.avg - 3 * ts_J.stddev ) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.ts_E.autState == S0 && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.ts_E.h > ts_J.avg - 3 * ts_J.stddev )))))
						{
							if((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.callState == NOTCALLED && ((S0 == S0 && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.ts_E.h <= ts_J.avg - 3 * ts_J.stddev ) || (S0 == S0 && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.ts_E.h > ts_J.avg - 3 * ts_J.stddev ))))
							{
								ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.callState = CALLED;
								ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.ts_E.autState = S0;
								ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.ts_E.h.reset_clock();
								if((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.ts_E.autState == S0 && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.ts_E.h <= ts_J.avg - 3 * ts_J.stddev ))
								{
									Alert(1);ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.ts_E.autState = S0;
									exec = 1;
								
								}else if((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.ts_E.autState == S0 && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.ts_E.h > ts_J.avg - 3 * ts_J.stddev ))
								{
									ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.ts_E.h.reset_clock();ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.ts_E.autState = S0;
									exec = 1;
								
								}
								ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.left_clock_F2.reset_clock();
							}else if((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.callState == CALLED && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.ts_E.autState == S0 && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.ts_E.h <= ts_J.avg - 3 * ts_J.stddev ) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.ts_E.autState == S0 && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.ts_E.h > ts_J.avg - 3 * ts_J.stddev ))))
							{
								if((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.ts_E.autState == S0 && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.ts_E.h <= ts_J.avg - 3 * ts_J.stddev ))
								{
									Alert(1);ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.ts_E.autState = S0;
									exec = 1;
								
								}else if((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.ts_E.autState == S0 && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.ts_E.h > ts_J.avg - 3 * ts_J.stddev ))
								{
									ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.ts_E.h.reset_clock();ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.ts_E.autState = S0;
									exec = 1;
								
								}
								ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.left_clock_F2.reset_clock();
							}
						
						}
						if(((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.callState == NOTCALLED && (((((FST == FST && 0) || (FST == SND && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.guardState == GUARD_NOTSTARTED && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9)  && ((NONE == NONE && (std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end() || std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), S0) !=shallow_final_choice2B_guard.end())) || (NONE == LEFT && std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end()) || (NONE == RIGHT && std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice2B_guard.autState) !=shallow_final_choice2B_guard.end())))) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.guardState == GUARD_STARTED && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == NONE && (std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end() || std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), S0) !=shallow_final_choice2B_guard.end())) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == LEFT && std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end()) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == RIGHT && std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice2B_guard.autState) !=shallow_final_choice2B_guard.end())))))) || KLEENE_NOTSTARTED == ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.kleeneState) && (FST == FST && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && S0 == S0))) || (FST == FST && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && S0 == S0)))) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.callState == CALLED && (((((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.interruptState == FST && 0) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.interruptState == SND && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.guardState == GUARD_NOTSTARTED && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9)  && ((NONE == NONE && (std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end() || std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), S0) !=shallow_final_choice2B_guard.end())) || (NONE == LEFT && std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end()) || (NONE == RIGHT && std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice2B_guard.autState) !=shallow_final_choice2B_guard.end())))) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.guardState == GUARD_STARTED && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == NONE && (std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end() || std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), S0) !=shallow_final_choice2B_guard.end())) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == LEFT && std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end()) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == RIGHT && std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice2B_guard.autState) !=shallow_final_choice2B_guard.end())))))) || KLEENE_NOTSTARTED == ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.kleeneState) && (FST == FST && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && S0 == S0))) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.interruptState == FST && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_pguardB.ts_C.autState == S0))))))
						{
							if((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.callState == NOTCALLED && (((((FST == FST && 0) || (FST == SND && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.guardState == GUARD_NOTSTARTED && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9)  && ((NONE == NONE && (std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end() || std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), S0) !=shallow_final_choice2B_guard.end())) || (NONE == LEFT && std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end()) || (NONE == RIGHT && std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice2B_guard.autState) !=shallow_final_choice2B_guard.end())))) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.guardState == GUARD_STARTED && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == NONE && (std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end() || std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), S0) !=shallow_final_choice2B_guard.end())) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == LEFT && std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end()) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == RIGHT && std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice2B_guard.autState) !=shallow_final_choice2B_guard.end())))))) || KLEENE_NOTSTARTED == ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.kleeneState) && (FST == FST && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && S0 == S0))) || (FST == FST && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && S0 == S0)))))
							{
								ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.callState = CALLED;
								ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.kleeneState = KLEENE_NOTSTARTED;
								ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.interruptState = FST;
								ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_pguardB.ts_C.autState = S0;
								if(((((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.interruptState == FST && 0) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.interruptState == SND && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.guardState == GUARD_NOTSTARTED && (last_event_time.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9)  && ((NONE == NONE && (std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end() || std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), S0) !=shallow_final_choice2B_guard.end())) || (NONE == LEFT && std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end()) || (NONE == RIGHT && std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice2B_guard.autState) !=shallow_final_choice2B_guard.end())))) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.guardState == GUARD_STARTED && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == NONE && (std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end() || std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), S0) !=shallow_final_choice2B_guard.end())) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == LEFT && std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end()) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == RIGHT && std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice2B_guard.autState) !=shallow_final_choice2B_guard.end())))))) || KLEENE_NOTSTARTED == ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.kleeneState) && (FST == FST && (last_event_time.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && S0 == S0))))
								{
									ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.kleeneState = KLEENE_STARTED;
									ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.interruptState = FST;
									ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_pguardB.ts_C.autState = S0;
									if((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.interruptState == FST && (last_event_time.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_pguardB.ts_C.autState == S0)))
									{
										if((last_event_time.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_pguardB.ts_C.autState == S0))
										{
											if(ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_pguardB.ts_C.autState == S0)
											{
												ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_pguardB.ts_C.autState = S0;
												exec = 1;
											
											}
										
										}
									
									}
								
								}else if((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.interruptState == FST && (last_event_time.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_pguardB.ts_C.autState == S0)))
								{
									ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.kleeneState = KLEENE_STARTED;
									if((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.interruptState == FST && (last_event_time.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_pguardB.ts_C.autState == S0)))
									{
										if((last_event_time.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_pguardB.ts_C.autState == S0))
										{
											if(ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_pguardB.ts_C.autState == S0)
											{
												ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_pguardB.ts_C.autState = S0;
												exec = 1;
											
											}
										
										}
									
									}
								
								}
								ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.right_clock_F1.reset_clock();
							}else if((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.callState == CALLED && (((((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.interruptState == FST && 0) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.interruptState == SND && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.guardState == GUARD_NOTSTARTED && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9)  && ((NONE == NONE && (std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end() || std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), S0) !=shallow_final_choice2B_guard.end())) || (NONE == LEFT && std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end()) || (NONE == RIGHT && std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice2B_guard.autState) !=shallow_final_choice2B_guard.end())))) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.guardState == GUARD_STARTED && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == NONE && (std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end() || std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), S0) !=shallow_final_choice2B_guard.end())) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == LEFT && std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end()) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == RIGHT && std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice2B_guard.autState) !=shallow_final_choice2B_guard.end())))))) || KLEENE_NOTSTARTED == ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.kleeneState) && (FST == FST && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && S0 == S0))) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.interruptState == FST && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_pguardB.ts_C.autState == S0)))))
							{
								if(((((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.interruptState == FST && 0) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.interruptState == SND && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.guardState == GUARD_NOTSTARTED && (last_event_time.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9)  && ((NONE == NONE && (std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end() || std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), S0) !=shallow_final_choice2B_guard.end())) || (NONE == LEFT && std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end()) || (NONE == RIGHT && std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice2B_guard.autState) !=shallow_final_choice2B_guard.end())))) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.guardState == GUARD_STARTED && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == NONE && (std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end() || std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), S0) !=shallow_final_choice2B_guard.end())) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == LEFT && std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end()) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == RIGHT && std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice2B_guard.autState) !=shallow_final_choice2B_guard.end())))))) || KLEENE_NOTSTARTED == ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.kleeneState) && (FST == FST && (last_event_time.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && S0 == S0))))
								{
									ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.kleeneState = KLEENE_STARTED;
									ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.interruptState = FST;
									ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_pguardB.ts_C.autState = S0;
									if((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.interruptState == FST && (last_event_time.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_pguardB.ts_C.autState == S0)))
									{
										if((last_event_time.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_pguardB.ts_C.autState == S0))
										{
											if(ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_pguardB.ts_C.autState == S0)
											{
												ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_pguardB.ts_C.autState = S0;
												exec = 1;
											
											}
										
										}
									
									}
								
								}else if((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.interruptState == FST && (last_event_time.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_pguardB.ts_C.autState == S0)))
								{
									ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.kleeneState = KLEENE_STARTED;
									if((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.interruptState == FST && (last_event_time.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_pguardB.ts_C.autState == S0)))
									{
										if((last_event_time.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_pguardB.ts_C.autState == S0))
										{
											if(ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_pguardB.ts_C.autState == S0)
											{
												ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_pguardB.ts_C.autState = S0;
												exec = 1;
											
											}
										
										}
									
									}
								
								}
								ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.right_clock_F1.reset_clock();
							}
						
						}
					
					}else if((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.callState == CALLED && (((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.callState == NOTCALLED && ((S0 == S0 && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.ts_E.h <= ts_J.avg - 3 * ts_J.stddev ) || (S0 == S0 && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.ts_E.h > ts_J.avg - 3 * ts_J.stddev ))) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.callState == CALLED && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.ts_E.autState == S0 && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.ts_E.h <= ts_J.avg - 3 * ts_J.stddev ) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.ts_E.autState == S0 && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.ts_E.h > ts_J.avg - 3 * ts_J.stddev )))) || ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.callState == NOTCALLED && (((((FST == FST && 0) || (FST == SND && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.guardState == GUARD_NOTSTARTED && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9)  && ((NONE == NONE && (std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end() || std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), S0) !=shallow_final_choice2B_guard.end())) || (NONE == LEFT && std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end()) || (NONE == RIGHT && std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice2B_guard.autState) !=shallow_final_choice2B_guard.end())))) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.guardState == GUARD_STARTED && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == NONE && (std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end() || std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), S0) !=shallow_final_choice2B_guard.end())) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == LEFT && std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end()) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == RIGHT && std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice2B_guard.autState) !=shallow_final_choice2B_guard.end())))))) || KLEENE_NOTSTARTED == ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.kleeneState) && (FST == FST && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && S0 == S0))) || (FST == FST && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && S0 == S0)))) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.callState == CALLED && (((((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.interruptState == FST && 0) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.interruptState == SND && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.guardState == GUARD_NOTSTARTED && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9)  && ((NONE == NONE && (std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end() || std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), S0) !=shallow_final_choice2B_guard.end())) || (NONE == LEFT && std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end()) || (NONE == RIGHT && std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice2B_guard.autState) !=shallow_final_choice2B_guard.end())))) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.guardState == GUARD_STARTED && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == NONE && (std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end() || std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), S0) !=shallow_final_choice2B_guard.end())) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == LEFT && std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end()) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == RIGHT && std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice2B_guard.autState) !=shallow_final_choice2B_guard.end())))))) || KLEENE_NOTSTARTED == ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.kleeneState) && (FST == FST && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && S0 == S0))) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.interruptState == FST && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_pguardB.ts_C.autState == S0))))))))
					{
						if(((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.callState == NOTCALLED && ((S0 == S0 && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.ts_E.h <= ts_J.avg - 3 * ts_J.stddev ) || (S0 == S0 && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.ts_E.h > ts_J.avg - 3 * ts_J.stddev ))) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.callState == CALLED && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.ts_E.autState == S0 && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.ts_E.h <= ts_J.avg - 3 * ts_J.stddev ) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.ts_E.autState == S0 && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.ts_E.h > ts_J.avg - 3 * ts_J.stddev )))))
						{
							if((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.callState == NOTCALLED && ((S0 == S0 && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.ts_E.h <= ts_J.avg - 3 * ts_J.stddev ) || (S0 == S0 && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.ts_E.h > ts_J.avg - 3 * ts_J.stddev ))))
							{
								ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.callState = CALLED;
								ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.ts_E.autState = S0;
								ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.ts_E.h.reset_clock();
								if((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.ts_E.autState == S0 && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.ts_E.h <= ts_J.avg - 3 * ts_J.stddev ))
								{
									Alert(1);ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.ts_E.autState = S0;
									exec = 1;
								
								}else if((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.ts_E.autState == S0 && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.ts_E.h > ts_J.avg - 3 * ts_J.stddev ))
								{
									ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.ts_E.h.reset_clock();ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.ts_E.autState = S0;
									exec = 1;
								
								}
								ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.left_clock_F2.reset_clock();
							}else if((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.callState == CALLED && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.ts_E.autState == S0 && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.ts_E.h <= ts_J.avg - 3 * ts_J.stddev ) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.ts_E.autState == S0 && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.ts_E.h > ts_J.avg - 3 * ts_J.stddev ))))
							{
								if((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.ts_E.autState == S0 && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.ts_E.h <= ts_J.avg - 3 * ts_J.stddev ))
								{
									Alert(1);ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.ts_E.autState = S0;
									exec = 1;
								
								}else if((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.ts_E.autState == S0 && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.ts_E.h > ts_J.avg - 3 * ts_J.stddev ))
								{
									ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.ts_E.h.reset_clock();ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.ts_E.autState = S0;
									exec = 1;
								
								}
								ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.left_clock_F2.reset_clock();
							}
						
						}
						if(((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.callState == NOTCALLED && (((((FST == FST && 0) || (FST == SND && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.guardState == GUARD_NOTSTARTED && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9)  && ((NONE == NONE && (std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end() || std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), S0) !=shallow_final_choice2B_guard.end())) || (NONE == LEFT && std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end()) || (NONE == RIGHT && std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice2B_guard.autState) !=shallow_final_choice2B_guard.end())))) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.guardState == GUARD_STARTED && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == NONE && (std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end() || std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), S0) !=shallow_final_choice2B_guard.end())) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == LEFT && std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end()) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == RIGHT && std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice2B_guard.autState) !=shallow_final_choice2B_guard.end())))))) || KLEENE_NOTSTARTED == ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.kleeneState) && (FST == FST && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && S0 == S0))) || (FST == FST && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && S0 == S0)))) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.callState == CALLED && (((((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.interruptState == FST && 0) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.interruptState == SND && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.guardState == GUARD_NOTSTARTED && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9)  && ((NONE == NONE && (std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end() || std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), S0) !=shallow_final_choice2B_guard.end())) || (NONE == LEFT && std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end()) || (NONE == RIGHT && std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice2B_guard.autState) !=shallow_final_choice2B_guard.end())))) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.guardState == GUARD_STARTED && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == NONE && (std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end() || std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), S0) !=shallow_final_choice2B_guard.end())) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == LEFT && std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end()) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == RIGHT && std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice2B_guard.autState) !=shallow_final_choice2B_guard.end())))))) || KLEENE_NOTSTARTED == ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.kleeneState) && (FST == FST && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && S0 == S0))) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.interruptState == FST && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_pguardB.ts_C.autState == S0))))))
						{
							if((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.callState == NOTCALLED && (((((FST == FST && 0) || (FST == SND && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.guardState == GUARD_NOTSTARTED && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9)  && ((NONE == NONE && (std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end() || std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), S0) !=shallow_final_choice2B_guard.end())) || (NONE == LEFT && std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end()) || (NONE == RIGHT && std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice2B_guard.autState) !=shallow_final_choice2B_guard.end())))) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.guardState == GUARD_STARTED && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == NONE && (std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end() || std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), S0) !=shallow_final_choice2B_guard.end())) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == LEFT && std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end()) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == RIGHT && std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice2B_guard.autState) !=shallow_final_choice2B_guard.end())))))) || KLEENE_NOTSTARTED == ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.kleeneState) && (FST == FST && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && S0 == S0))) || (FST == FST && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && S0 == S0)))))
							{
								ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.callState = CALLED;
								ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.kleeneState = KLEENE_NOTSTARTED;
								ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.interruptState = FST;
								ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_pguardB.ts_C.autState = S0;
								if(((((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.interruptState == FST && 0) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.interruptState == SND && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.guardState == GUARD_NOTSTARTED && (last_event_time.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9)  && ((NONE == NONE && (std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end() || std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), S0) !=shallow_final_choice2B_guard.end())) || (NONE == LEFT && std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end()) || (NONE == RIGHT && std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice2B_guard.autState) !=shallow_final_choice2B_guard.end())))) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.guardState == GUARD_STARTED && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == NONE && (std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end() || std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), S0) !=shallow_final_choice2B_guard.end())) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == LEFT && std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end()) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == RIGHT && std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice2B_guard.autState) !=shallow_final_choice2B_guard.end())))))) || KLEENE_NOTSTARTED == ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.kleeneState) && (FST == FST && (last_event_time.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && S0 == S0))))
								{
									ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.kleeneState = KLEENE_STARTED;
									ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.interruptState = FST;
									ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_pguardB.ts_C.autState = S0;
									if((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.interruptState == FST && (last_event_time.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_pguardB.ts_C.autState == S0)))
									{
										if((last_event_time.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_pguardB.ts_C.autState == S0))
										{
											if(ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_pguardB.ts_C.autState == S0)
											{
												ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_pguardB.ts_C.autState = S0;
												exec = 1;
											
											}
										
										}
									
									}
								
								}else if((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.interruptState == FST && (last_event_time.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_pguardB.ts_C.autState == S0)))
								{
									ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.kleeneState = KLEENE_STARTED;
									if((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.interruptState == FST && (last_event_time.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_pguardB.ts_C.autState == S0)))
									{
										if((last_event_time.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_pguardB.ts_C.autState == S0))
										{
											if(ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_pguardB.ts_C.autState == S0)
											{
												ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_pguardB.ts_C.autState = S0;
												exec = 1;
											
											}
										
										}
									
									}
								
								}
								ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.right_clock_F1.reset_clock();
							}else if((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.callState == CALLED && (((((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.interruptState == FST && 0) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.interruptState == SND && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.guardState == GUARD_NOTSTARTED && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9)  && ((NONE == NONE && (std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end() || std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), S0) !=shallow_final_choice2B_guard.end())) || (NONE == LEFT && std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end()) || (NONE == RIGHT && std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice2B_guard.autState) !=shallow_final_choice2B_guard.end())))) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.guardState == GUARD_STARTED && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == NONE && (std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end() || std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), S0) !=shallow_final_choice2B_guard.end())) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == LEFT && std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end()) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == RIGHT && std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice2B_guard.autState) !=shallow_final_choice2B_guard.end())))))) || KLEENE_NOTSTARTED == ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.kleeneState) && (FST == FST && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && S0 == S0))) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.interruptState == FST && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_pguardB.ts_C.autState == S0)))))
							{
								if(((((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.interruptState == FST && 0) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.interruptState == SND && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.guardState == GUARD_NOTSTARTED && (last_event_time.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9)  && ((NONE == NONE && (std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end() || std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), S0) !=shallow_final_choice2B_guard.end())) || (NONE == LEFT && std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end()) || (NONE == RIGHT && std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice2B_guard.autState) !=shallow_final_choice2B_guard.end())))) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.guardState == GUARD_STARTED && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == NONE && (std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end() || std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), S0) !=shallow_final_choice2B_guard.end())) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == LEFT && std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end()) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == RIGHT && std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice2B_guard.autState) !=shallow_final_choice2B_guard.end())))))) || KLEENE_NOTSTARTED == ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.kleeneState) && (FST == FST && (last_event_time.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && S0 == S0))))
								{
									ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.kleeneState = KLEENE_STARTED;
									ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.interruptState = FST;
									ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_pguardB.ts_C.autState = S0;
									if((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.interruptState == FST && (last_event_time.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_pguardB.ts_C.autState == S0)))
									{
										if((last_event_time.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_pguardB.ts_C.autState == S0))
										{
											if(ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_pguardB.ts_C.autState == S0)
											{
												ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_pguardB.ts_C.autState = S0;
												exec = 1;
											
											}
										
										}
									
									}
								
								}else if((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.interruptState == FST && (last_event_time.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_pguardB.ts_C.autState == S0)))
								{
									ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.kleeneState = KLEENE_STARTED;
									if((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.interruptState == FST && (last_event_time.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_pguardB.ts_C.autState == S0)))
									{
										if((last_event_time.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_pguardB.ts_C.autState == S0))
										{
											if(ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_pguardB.ts_C.autState == S0)
											{
												ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_pguardB.ts_C.autState = S0;
												exec = 1;
											
											}
										
										}
									
									}
								
								}
								ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.right_clock_F1.reset_clock();
							}
						
						}
					
					}
				
				}
			
			}else if((ts_J.ts_guardJ.ts_choiceJ_guard.choiceState == LEFT && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.autState == J2 && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.callState == NOTCALLED && (((NOTCALLED == NOTCALLED && ((S0 == S0 && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.ts_E.h <= ts_J.avg - 3 * ts_J.stddev ) || (S0 == S0 && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.ts_E.h > ts_J.avg - 3 * ts_J.stddev ))) || (NOTCALLED == CALLED && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.ts_E.autState == S0 && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.ts_E.h <= ts_J.avg - 3 * ts_J.stddev ) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.ts_E.autState == S0 && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.ts_E.h > ts_J.avg - 3 * ts_J.stddev )))) || ((NOTCALLED == NOTCALLED && (((((FST == FST && 0) || (FST == SND && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.guardState == GUARD_NOTSTARTED && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9)  && ((NONE == NONE && (std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end() || std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), S0) !=shallow_final_choice2B_guard.end())) || (NONE == LEFT && std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end()) || (NONE == RIGHT && std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice2B_guard.autState) !=shallow_final_choice2B_guard.end())))) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.guardState == GUARD_STARTED && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == NONE && (std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end() || std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), S0) !=shallow_final_choice2B_guard.end())) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == LEFT && std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end()) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == RIGHT && std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice2B_guard.autState) !=shallow_final_choice2B_guard.end())))))) || KLEENE_NOTSTARTED == ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.kleeneState) && (FST == FST && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && S0 == S0))) || (FST == FST && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && S0 == S0)))) || (NOTCALLED == CALLED && (((((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.interruptState == FST && 0) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.interruptState == SND && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.guardState == GUARD_NOTSTARTED && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9)  && ((NONE == NONE && (std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end() || std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), S0) !=shallow_final_choice2B_guard.end())) || (NONE == LEFT && std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end()) || (NONE == RIGHT && std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice2B_guard.autState) !=shallow_final_choice2B_guard.end())))) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.guardState == GUARD_STARTED && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == NONE && (std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end() || std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), S0) !=shallow_final_choice2B_guard.end())) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == LEFT && std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end()) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == RIGHT && std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice2B_guard.autState) !=shallow_final_choice2B_guard.end())))))) || KLEENE_NOTSTARTED == ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.kleeneState) && (FST == FST && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && S0 == S0))) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.interruptState == FST && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_pguardB.ts_C.autState == S0))))))) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.callState == CALLED && (((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.callState == NOTCALLED && ((S0 == S0 && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.ts_E.h <= ts_J.avg - 3 * ts_J.stddev ) || (S0 == S0 && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.ts_E.h > ts_J.avg - 3 * ts_J.stddev ))) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.callState == CALLED && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.ts_E.autState == S0 && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.ts_E.h <= ts_J.avg - 3 * ts_J.stddev ) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.ts_E.autState == S0 && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.ts_E.h > ts_J.avg - 3 * ts_J.stddev )))) || ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.callState == NOTCALLED && (((((FST == FST && 0) || (FST == SND && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.guardState == GUARD_NOTSTARTED && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9)  && ((NONE == NONE && (std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end() || std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), S0) !=shallow_final_choice2B_guard.end())) || (NONE == LEFT && std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end()) || (NONE == RIGHT && std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice2B_guard.autState) !=shallow_final_choice2B_guard.end())))) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.guardState == GUARD_STARTED && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == NONE && (std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end() || std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), S0) !=shallow_final_choice2B_guard.end())) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == LEFT && std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end()) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == RIGHT && std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice2B_guard.autState) !=shallow_final_choice2B_guard.end())))))) || KLEENE_NOTSTARTED == ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.kleeneState) && (FST == FST && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && S0 == S0))) || (FST == FST && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && S0 == S0)))) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.callState == CALLED && (((((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.interruptState == FST && 0) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.interruptState == SND && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.guardState == GUARD_NOTSTARTED && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9)  && ((NONE == NONE && (std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end() || std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), S0) !=shallow_final_choice2B_guard.end())) || (NONE == LEFT && std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end()) || (NONE == RIGHT && std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice2B_guard.autState) !=shallow_final_choice2B_guard.end())))) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.guardState == GUARD_STARTED && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == NONE && (std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end() || std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), S0) !=shallow_final_choice2B_guard.end())) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == LEFT && std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end()) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == RIGHT && std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice2B_guard.autState) !=shallow_final_choice2B_guard.end())))))) || KLEENE_NOTSTARTED == ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.kleeneState) && (FST == FST && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && S0 == S0))) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.interruptState == FST && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_pguardB.ts_C.autState == S0)))))))))))
			{
				if((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.autState == J2 && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.callState == NOTCALLED && (((NOTCALLED == NOTCALLED && ((S0 == S0 && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.ts_E.h <= ts_J.avg - 3 * ts_J.stddev ) || (S0 == S0 && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.ts_E.h > ts_J.avg - 3 * ts_J.stddev ))) || (NOTCALLED == CALLED && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.ts_E.autState == S0 && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.ts_E.h <= ts_J.avg - 3 * ts_J.stddev ) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.ts_E.autState == S0 && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.ts_E.h > ts_J.avg - 3 * ts_J.stddev )))) || ((NOTCALLED == NOTCALLED && (((((FST == FST && 0) || (FST == SND && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.guardState == GUARD_NOTSTARTED && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9)  && ((NONE == NONE && (std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end() || std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), S0) !=shallow_final_choice2B_guard.end())) || (NONE == LEFT && std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end()) || (NONE == RIGHT && std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice2B_guard.autState) !=shallow_final_choice2B_guard.end())))) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.guardState == GUARD_STARTED && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == NONE && (std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end() || std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), S0) !=shallow_final_choice2B_guard.end())) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == LEFT && std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end()) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == RIGHT && std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice2B_guard.autState) !=shallow_final_choice2B_guard.end())))))) || KLEENE_NOTSTARTED == ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.kleeneState) && (FST == FST && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && S0 == S0))) || (FST == FST && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && S0 == S0)))) || (NOTCALLED == CALLED && (((((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.interruptState == FST && 0) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.interruptState == SND && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.guardState == GUARD_NOTSTARTED && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9)  && ((NONE == NONE && (std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end() || std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), S0) !=shallow_final_choice2B_guard.end())) || (NONE == LEFT && std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end()) || (NONE == RIGHT && std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice2B_guard.autState) !=shallow_final_choice2B_guard.end())))) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.guardState == GUARD_STARTED && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == NONE && (std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end() || std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), S0) !=shallow_final_choice2B_guard.end())) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == LEFT && std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end()) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == RIGHT && std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice2B_guard.autState) !=shallow_final_choice2B_guard.end())))))) || KLEENE_NOTSTARTED == ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.kleeneState) && (FST == FST && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && S0 == S0))) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.interruptState == FST && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_pguardB.ts_C.autState == S0))))))) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.callState == CALLED && (((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.callState == NOTCALLED && ((S0 == S0 && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.ts_E.h <= ts_J.avg - 3 * ts_J.stddev ) || (S0 == S0 && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.ts_E.h > ts_J.avg - 3 * ts_J.stddev ))) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.callState == CALLED && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.ts_E.autState == S0 && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.ts_E.h <= ts_J.avg - 3 * ts_J.stddev ) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.ts_E.autState == S0 && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.ts_E.h > ts_J.avg - 3 * ts_J.stddev )))) || ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.callState == NOTCALLED && (((((FST == FST && 0) || (FST == SND && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.guardState == GUARD_NOTSTARTED && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9)  && ((NONE == NONE && (std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end() || std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), S0) !=shallow_final_choice2B_guard.end())) || (NONE == LEFT && std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end()) || (NONE == RIGHT && std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice2B_guard.autState) !=shallow_final_choice2B_guard.end())))) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.guardState == GUARD_STARTED && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == NONE && (std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end() || std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), S0) !=shallow_final_choice2B_guard.end())) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == LEFT && std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end()) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == RIGHT && std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice2B_guard.autState) !=shallow_final_choice2B_guard.end())))))) || KLEENE_NOTSTARTED == ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.kleeneState) && (FST == FST && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && S0 == S0))) || (FST == FST && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && S0 == S0)))) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.callState == CALLED && (((((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.interruptState == FST && 0) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.interruptState == SND && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.guardState == GUARD_NOTSTARTED && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9)  && ((NONE == NONE && (std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end() || std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), S0) !=shallow_final_choice2B_guard.end())) || (NONE == LEFT && std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end()) || (NONE == RIGHT && std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice2B_guard.autState) !=shallow_final_choice2B_guard.end())))) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.guardState == GUARD_STARTED && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == NONE && (std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end() || std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), S0) !=shallow_final_choice2B_guard.end())) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == LEFT && std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end()) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == RIGHT && std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice2B_guard.autState) !=shallow_final_choice2B_guard.end())))))) || KLEENE_NOTSTARTED == ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.kleeneState) && (FST == FST && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && S0 == S0))) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.interruptState == FST && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_pguardB.ts_C.autState == S0))))))))))
				{
					if((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.callState == NOTCALLED && (((NOTCALLED == NOTCALLED && ((S0 == S0 && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.ts_E.h <= ts_J.avg - 3 * ts_J.stddev ) || (S0 == S0 && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.ts_E.h > ts_J.avg - 3 * ts_J.stddev ))) || (NOTCALLED == CALLED && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.ts_E.autState == S0 && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.ts_E.h <= ts_J.avg - 3 * ts_J.stddev ) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.ts_E.autState == S0 && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.ts_E.h > ts_J.avg - 3 * ts_J.stddev )))) || ((NOTCALLED == NOTCALLED && (((((FST == FST && 0) || (FST == SND && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.guardState == GUARD_NOTSTARTED && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9)  && ((NONE == NONE && (std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end() || std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), S0) !=shallow_final_choice2B_guard.end())) || (NONE == LEFT && std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end()) || (NONE == RIGHT && std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice2B_guard.autState) !=shallow_final_choice2B_guard.end())))) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.guardState == GUARD_STARTED && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == NONE && (std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end() || std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), S0) !=shallow_final_choice2B_guard.end())) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == LEFT && std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end()) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == RIGHT && std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice2B_guard.autState) !=shallow_final_choice2B_guard.end())))))) || KLEENE_NOTSTARTED == ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.kleeneState) && (FST == FST && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && S0 == S0))) || (FST == FST && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && S0 == S0)))) || (NOTCALLED == CALLED && (((((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.interruptState == FST && 0) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.interruptState == SND && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.guardState == GUARD_NOTSTARTED && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9)  && ((NONE == NONE && (std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end() || std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), S0) !=shallow_final_choice2B_guard.end())) || (NONE == LEFT && std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end()) || (NONE == RIGHT && std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice2B_guard.autState) !=shallow_final_choice2B_guard.end())))) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.guardState == GUARD_STARTED && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == NONE && (std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end() || std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), S0) !=shallow_final_choice2B_guard.end())) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == LEFT && std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end()) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == RIGHT && std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice2B_guard.autState) !=shallow_final_choice2B_guard.end())))))) || KLEENE_NOTSTARTED == ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.kleeneState) && (FST == FST && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && S0 == S0))) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.interruptState == FST && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_pguardB.ts_C.autState == S0))))))))
					{
						ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.callState = CALLED;
						ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.right_clock_F1.reset_clock();
						ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.left_clock_F2.reset_clock();
						ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.callState = NOTCALLED;
						ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.callState = NOTCALLED;
						if(((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.callState == NOTCALLED && ((S0 == S0 && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.ts_E.h <= ts_J.avg - 3 * ts_J.stddev ) || (S0 == S0 && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.ts_E.h > ts_J.avg - 3 * ts_J.stddev ))) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.callState == CALLED && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.ts_E.autState == S0 && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.ts_E.h <= ts_J.avg - 3 * ts_J.stddev ) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.ts_E.autState == S0 && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.ts_E.h > ts_J.avg - 3 * ts_J.stddev )))))
						{
							if((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.callState == NOTCALLED && ((S0 == S0 && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.ts_E.h <= ts_J.avg - 3 * ts_J.stddev ) || (S0 == S0 && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.ts_E.h > ts_J.avg - 3 * ts_J.stddev ))))
							{
								ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.callState = CALLED;
								ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.ts_E.autState = S0;
								ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.ts_E.h.reset_clock();
								if((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.ts_E.autState == S0 && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.ts_E.h <= ts_J.avg - 3 * ts_J.stddev ))
								{
									Alert(1);ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.ts_E.autState = S0;
									exec = 1;
								
								}else if((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.ts_E.autState == S0 && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.ts_E.h > ts_J.avg - 3 * ts_J.stddev ))
								{
									ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.ts_E.h.reset_clock();ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.ts_E.autState = S0;
									exec = 1;
								
								}
								ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.left_clock_F2.reset_clock();
							}else if((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.callState == CALLED && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.ts_E.autState == S0 && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.ts_E.h <= ts_J.avg - 3 * ts_J.stddev ) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.ts_E.autState == S0 && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.ts_E.h > ts_J.avg - 3 * ts_J.stddev ))))
							{
								if((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.ts_E.autState == S0 && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.ts_E.h <= ts_J.avg - 3 * ts_J.stddev ))
								{
									Alert(1);ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.ts_E.autState = S0;
									exec = 1;
								
								}else if((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.ts_E.autState == S0 && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.ts_E.h > ts_J.avg - 3 * ts_J.stddev ))
								{
									ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.ts_E.h.reset_clock();ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.ts_E.autState = S0;
									exec = 1;
								
								}
								ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.left_clock_F2.reset_clock();
							}
						
						}
						if(((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.callState == NOTCALLED && (((((FST == FST && 0) || (FST == SND && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.guardState == GUARD_NOTSTARTED && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9)  && ((NONE == NONE && (std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end() || std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), S0) !=shallow_final_choice2B_guard.end())) || (NONE == LEFT && std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end()) || (NONE == RIGHT && std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice2B_guard.autState) !=shallow_final_choice2B_guard.end())))) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.guardState == GUARD_STARTED && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == NONE && (std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end() || std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), S0) !=shallow_final_choice2B_guard.end())) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == LEFT && std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end()) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == RIGHT && std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice2B_guard.autState) !=shallow_final_choice2B_guard.end())))))) || KLEENE_NOTSTARTED == ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.kleeneState) && (FST == FST && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && S0 == S0))) || (FST == FST && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && S0 == S0)))) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.callState == CALLED && (((((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.interruptState == FST && 0) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.interruptState == SND && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.guardState == GUARD_NOTSTARTED && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9)  && ((NONE == NONE && (std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end() || std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), S0) !=shallow_final_choice2B_guard.end())) || (NONE == LEFT && std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end()) || (NONE == RIGHT && std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice2B_guard.autState) !=shallow_final_choice2B_guard.end())))) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.guardState == GUARD_STARTED && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == NONE && (std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end() || std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), S0) !=shallow_final_choice2B_guard.end())) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == LEFT && std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end()) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == RIGHT && std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice2B_guard.autState) !=shallow_final_choice2B_guard.end())))))) || KLEENE_NOTSTARTED == ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.kleeneState) && (FST == FST && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && S0 == S0))) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.interruptState == FST && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_pguardB.ts_C.autState == S0))))))
						{
							if((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.callState == NOTCALLED && (((((FST == FST && 0) || (FST == SND && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.guardState == GUARD_NOTSTARTED && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9)  && ((NONE == NONE && (std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end() || std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), S0) !=shallow_final_choice2B_guard.end())) || (NONE == LEFT && std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end()) || (NONE == RIGHT && std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice2B_guard.autState) !=shallow_final_choice2B_guard.end())))) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.guardState == GUARD_STARTED && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == NONE && (std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end() || std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), S0) !=shallow_final_choice2B_guard.end())) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == LEFT && std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end()) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == RIGHT && std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice2B_guard.autState) !=shallow_final_choice2B_guard.end())))))) || KLEENE_NOTSTARTED == ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.kleeneState) && (FST == FST && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && S0 == S0))) || (FST == FST && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && S0 == S0)))))
							{
								ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.callState = CALLED;
								ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.kleeneState = KLEENE_NOTSTARTED;
								ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.interruptState = FST;
								ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_pguardB.ts_C.autState = S0;
								if(((((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.interruptState == FST && 0) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.interruptState == SND && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.guardState == GUARD_NOTSTARTED && (last_event_time.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9)  && ((NONE == NONE && (std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end() || std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), S0) !=shallow_final_choice2B_guard.end())) || (NONE == LEFT && std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end()) || (NONE == RIGHT && std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice2B_guard.autState) !=shallow_final_choice2B_guard.end())))) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.guardState == GUARD_STARTED && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == NONE && (std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end() || std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), S0) !=shallow_final_choice2B_guard.end())) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == LEFT && std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end()) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == RIGHT && std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice2B_guard.autState) !=shallow_final_choice2B_guard.end())))))) || KLEENE_NOTSTARTED == ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.kleeneState) && (FST == FST && (last_event_time.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && S0 == S0))))
								{
									ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.kleeneState = KLEENE_STARTED;
									ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.interruptState = FST;
									ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_pguardB.ts_C.autState = S0;
									if((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.interruptState == FST && (last_event_time.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_pguardB.ts_C.autState == S0)))
									{
										if((last_event_time.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_pguardB.ts_C.autState == S0))
										{
											if(ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_pguardB.ts_C.autState == S0)
											{
												ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_pguardB.ts_C.autState = S0;
												exec = 1;
											
											}
										
										}
									
									}
								
								}else if((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.interruptState == FST && (last_event_time.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_pguardB.ts_C.autState == S0)))
								{
									ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.kleeneState = KLEENE_STARTED;
									if((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.interruptState == FST && (last_event_time.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_pguardB.ts_C.autState == S0)))
									{
										if((last_event_time.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_pguardB.ts_C.autState == S0))
										{
											if(ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_pguardB.ts_C.autState == S0)
											{
												ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_pguardB.ts_C.autState = S0;
												exec = 1;
											
											}
										
										}
									
									}
								
								}
								ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.right_clock_F1.reset_clock();
							}else if((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.callState == CALLED && (((((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.interruptState == FST && 0) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.interruptState == SND && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.guardState == GUARD_NOTSTARTED && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9)  && ((NONE == NONE && (std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end() || std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), S0) !=shallow_final_choice2B_guard.end())) || (NONE == LEFT && std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end()) || (NONE == RIGHT && std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice2B_guard.autState) !=shallow_final_choice2B_guard.end())))) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.guardState == GUARD_STARTED && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == NONE && (std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end() || std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), S0) !=shallow_final_choice2B_guard.end())) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == LEFT && std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end()) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == RIGHT && std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice2B_guard.autState) !=shallow_final_choice2B_guard.end())))))) || KLEENE_NOTSTARTED == ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.kleeneState) && (FST == FST && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && S0 == S0))) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.interruptState == FST && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_pguardB.ts_C.autState == S0)))))
							{
								if(((((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.interruptState == FST && 0) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.interruptState == SND && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.guardState == GUARD_NOTSTARTED && (last_event_time.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9)  && ((NONE == NONE && (std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end() || std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), S0) !=shallow_final_choice2B_guard.end())) || (NONE == LEFT && std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end()) || (NONE == RIGHT && std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice2B_guard.autState) !=shallow_final_choice2B_guard.end())))) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.guardState == GUARD_STARTED && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == NONE && (std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end() || std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), S0) !=shallow_final_choice2B_guard.end())) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == LEFT && std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end()) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == RIGHT && std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice2B_guard.autState) !=shallow_final_choice2B_guard.end())))))) || KLEENE_NOTSTARTED == ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.kleeneState) && (FST == FST && (last_event_time.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && S0 == S0))))
								{
									ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.kleeneState = KLEENE_STARTED;
									ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.interruptState = FST;
									ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_pguardB.ts_C.autState = S0;
									if((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.interruptState == FST && (last_event_time.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_pguardB.ts_C.autState == S0)))
									{
										if((last_event_time.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_pguardB.ts_C.autState == S0))
										{
											if(ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_pguardB.ts_C.autState == S0)
											{
												ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_pguardB.ts_C.autState = S0;
												exec = 1;
											
											}
										
										}
									
									}
								
								}else if((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.interruptState == FST && (last_event_time.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_pguardB.ts_C.autState == S0)))
								{
									ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.kleeneState = KLEENE_STARTED;
									if((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.interruptState == FST && (last_event_time.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_pguardB.ts_C.autState == S0)))
									{
										if((last_event_time.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_pguardB.ts_C.autState == S0))
										{
											if(ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_pguardB.ts_C.autState == S0)
											{
												ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_pguardB.ts_C.autState = S0;
												exec = 1;
											
											}
										
										}
									
									}
								
								}
								ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.right_clock_F1.reset_clock();
							}
						
						}
					
					}else if((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.callState == CALLED && (((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.callState == NOTCALLED && ((S0 == S0 && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.ts_E.h <= ts_J.avg - 3 * ts_J.stddev ) || (S0 == S0 && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.ts_E.h > ts_J.avg - 3 * ts_J.stddev ))) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.callState == CALLED && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.ts_E.autState == S0 && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.ts_E.h <= ts_J.avg - 3 * ts_J.stddev ) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.ts_E.autState == S0 && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.ts_E.h > ts_J.avg - 3 * ts_J.stddev )))) || ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.callState == NOTCALLED && (((((FST == FST && 0) || (FST == SND && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.guardState == GUARD_NOTSTARTED && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9)  && ((NONE == NONE && (std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end() || std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), S0) !=shallow_final_choice2B_guard.end())) || (NONE == LEFT && std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end()) || (NONE == RIGHT && std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice2B_guard.autState) !=shallow_final_choice2B_guard.end())))) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.guardState == GUARD_STARTED && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == NONE && (std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end() || std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), S0) !=shallow_final_choice2B_guard.end())) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == LEFT && std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end()) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == RIGHT && std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice2B_guard.autState) !=shallow_final_choice2B_guard.end())))))) || KLEENE_NOTSTARTED == ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.kleeneState) && (FST == FST && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && S0 == S0))) || (FST == FST && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && S0 == S0)))) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.callState == CALLED && (((((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.interruptState == FST && 0) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.interruptState == SND && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.guardState == GUARD_NOTSTARTED && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9)  && ((NONE == NONE && (std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end() || std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), S0) !=shallow_final_choice2B_guard.end())) || (NONE == LEFT && std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end()) || (NONE == RIGHT && std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice2B_guard.autState) !=shallow_final_choice2B_guard.end())))) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.guardState == GUARD_STARTED && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == NONE && (std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end() || std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), S0) !=shallow_final_choice2B_guard.end())) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == LEFT && std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end()) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == RIGHT && std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice2B_guard.autState) !=shallow_final_choice2B_guard.end())))))) || KLEENE_NOTSTARTED == ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.kleeneState) && (FST == FST && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && S0 == S0))) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.interruptState == FST && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_pguardB.ts_C.autState == S0))))))))
					{
						if(((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.callState == NOTCALLED && ((S0 == S0 && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.ts_E.h <= ts_J.avg - 3 * ts_J.stddev ) || (S0 == S0 && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.ts_E.h > ts_J.avg - 3 * ts_J.stddev ))) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.callState == CALLED && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.ts_E.autState == S0 && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.ts_E.h <= ts_J.avg - 3 * ts_J.stddev ) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.ts_E.autState == S0 && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.ts_E.h > ts_J.avg - 3 * ts_J.stddev )))))
						{
							if((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.callState == NOTCALLED && ((S0 == S0 && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.ts_E.h <= ts_J.avg - 3 * ts_J.stddev ) || (S0 == S0 && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.ts_E.h > ts_J.avg - 3 * ts_J.stddev ))))
							{
								ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.callState = CALLED;
								ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.ts_E.autState = S0;
								ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.ts_E.h.reset_clock();
								if((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.ts_E.autState == S0 && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.ts_E.h <= ts_J.avg - 3 * ts_J.stddev ))
								{
									Alert(1);ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.ts_E.autState = S0;
									exec = 1;
								
								}else if((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.ts_E.autState == S0 && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.ts_E.h > ts_J.avg - 3 * ts_J.stddev ))
								{
									ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.ts_E.h.reset_clock();ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.ts_E.autState = S0;
									exec = 1;
								
								}
								ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.left_clock_F2.reset_clock();
							}else if((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.callState == CALLED && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.ts_E.autState == S0 && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.ts_E.h <= ts_J.avg - 3 * ts_J.stddev ) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.ts_E.autState == S0 && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.ts_E.h > ts_J.avg - 3 * ts_J.stddev ))))
							{
								if((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.ts_E.autState == S0 && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.ts_E.h <= ts_J.avg - 3 * ts_J.stddev ))
								{
									Alert(1);ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.ts_E.autState = S0;
									exec = 1;
								
								}else if((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.ts_E.autState == S0 && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.ts_E.h > ts_J.avg - 3 * ts_J.stddev ))
								{
									ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.ts_E.h.reset_clock();ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.ts_E.autState = S0;
									exec = 1;
								
								}
								ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.left_clock_F2.reset_clock();
							}
						
						}
						if(((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.callState == NOTCALLED && (((((FST == FST && 0) || (FST == SND && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.guardState == GUARD_NOTSTARTED && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9)  && ((NONE == NONE && (std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end() || std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), S0) !=shallow_final_choice2B_guard.end())) || (NONE == LEFT && std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end()) || (NONE == RIGHT && std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice2B_guard.autState) !=shallow_final_choice2B_guard.end())))) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.guardState == GUARD_STARTED && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == NONE && (std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end() || std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), S0) !=shallow_final_choice2B_guard.end())) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == LEFT && std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end()) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == RIGHT && std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice2B_guard.autState) !=shallow_final_choice2B_guard.end())))))) || KLEENE_NOTSTARTED == ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.kleeneState) && (FST == FST && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && S0 == S0))) || (FST == FST && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && S0 == S0)))) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.callState == CALLED && (((((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.interruptState == FST && 0) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.interruptState == SND && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.guardState == GUARD_NOTSTARTED && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9)  && ((NONE == NONE && (std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end() || std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), S0) !=shallow_final_choice2B_guard.end())) || (NONE == LEFT && std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end()) || (NONE == RIGHT && std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice2B_guard.autState) !=shallow_final_choice2B_guard.end())))) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.guardState == GUARD_STARTED && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == NONE && (std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end() || std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), S0) !=shallow_final_choice2B_guard.end())) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == LEFT && std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end()) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == RIGHT && std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice2B_guard.autState) !=shallow_final_choice2B_guard.end())))))) || KLEENE_NOTSTARTED == ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.kleeneState) && (FST == FST && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && S0 == S0))) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.interruptState == FST && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_pguardB.ts_C.autState == S0))))))
						{
							if((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.callState == NOTCALLED && (((((FST == FST && 0) || (FST == SND && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.guardState == GUARD_NOTSTARTED && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9)  && ((NONE == NONE && (std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end() || std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), S0) !=shallow_final_choice2B_guard.end())) || (NONE == LEFT && std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end()) || (NONE == RIGHT && std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice2B_guard.autState) !=shallow_final_choice2B_guard.end())))) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.guardState == GUARD_STARTED && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == NONE && (std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end() || std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), S0) !=shallow_final_choice2B_guard.end())) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == LEFT && std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end()) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == RIGHT && std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice2B_guard.autState) !=shallow_final_choice2B_guard.end())))))) || KLEENE_NOTSTARTED == ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.kleeneState) && (FST == FST && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && S0 == S0))) || (FST == FST && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && S0 == S0)))))
							{
								ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.callState = CALLED;
								ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.kleeneState = KLEENE_NOTSTARTED;
								ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.interruptState = FST;
								ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_pguardB.ts_C.autState = S0;
								if(((((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.interruptState == FST && 0) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.interruptState == SND && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.guardState == GUARD_NOTSTARTED && (last_event_time.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9)  && ((NONE == NONE && (std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end() || std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), S0) !=shallow_final_choice2B_guard.end())) || (NONE == LEFT && std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end()) || (NONE == RIGHT && std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice2B_guard.autState) !=shallow_final_choice2B_guard.end())))) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.guardState == GUARD_STARTED && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == NONE && (std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end() || std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), S0) !=shallow_final_choice2B_guard.end())) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == LEFT && std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end()) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == RIGHT && std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice2B_guard.autState) !=shallow_final_choice2B_guard.end())))))) || KLEENE_NOTSTARTED == ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.kleeneState) && (FST == FST && (last_event_time.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && S0 == S0))))
								{
									ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.kleeneState = KLEENE_STARTED;
									ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.interruptState = FST;
									ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_pguardB.ts_C.autState = S0;
									if((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.interruptState == FST && (last_event_time.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_pguardB.ts_C.autState == S0)))
									{
										if((last_event_time.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_pguardB.ts_C.autState == S0))
										{
											if(ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_pguardB.ts_C.autState == S0)
											{
												ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_pguardB.ts_C.autState = S0;
												exec = 1;
											
											}
										
										}
									
									}
								
								}else if((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.interruptState == FST && (last_event_time.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_pguardB.ts_C.autState == S0)))
								{
									ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.kleeneState = KLEENE_STARTED;
									if((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.interruptState == FST && (last_event_time.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_pguardB.ts_C.autState == S0)))
									{
										if((last_event_time.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_pguardB.ts_C.autState == S0))
										{
											if(ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_pguardB.ts_C.autState == S0)
											{
												ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_pguardB.ts_C.autState = S0;
												exec = 1;
											
											}
										
										}
									
									}
								
								}
								ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.right_clock_F1.reset_clock();
							}else if((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.callState == CALLED && (((((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.interruptState == FST && 0) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.interruptState == SND && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.guardState == GUARD_NOTSTARTED && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9)  && ((NONE == NONE && (std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end() || std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), S0) !=shallow_final_choice2B_guard.end())) || (NONE == LEFT && std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end()) || (NONE == RIGHT && std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice2B_guard.autState) !=shallow_final_choice2B_guard.end())))) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.guardState == GUARD_STARTED && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == NONE && (std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end() || std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), S0) !=shallow_final_choice2B_guard.end())) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == LEFT && std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end()) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == RIGHT && std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice2B_guard.autState) !=shallow_final_choice2B_guard.end())))))) || KLEENE_NOTSTARTED == ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.kleeneState) && (FST == FST && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && S0 == S0))) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.interruptState == FST && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_pguardB.ts_C.autState == S0)))))
							{
								if(((((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.interruptState == FST && 0) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.interruptState == SND && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.guardState == GUARD_NOTSTARTED && (last_event_time.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9)  && ((NONE == NONE && (std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end() || std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), S0) !=shallow_final_choice2B_guard.end())) || (NONE == LEFT && std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end()) || (NONE == RIGHT && std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice2B_guard.autState) !=shallow_final_choice2B_guard.end())))) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.guardState == GUARD_STARTED && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == NONE && (std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end() || std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), S0) !=shallow_final_choice2B_guard.end())) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == LEFT && std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end()) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == RIGHT && std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice2B_guard.autState) !=shallow_final_choice2B_guard.end())))))) || KLEENE_NOTSTARTED == ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.kleeneState) && (FST == FST && (last_event_time.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && S0 == S0))))
								{
									ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.kleeneState = KLEENE_STARTED;
									ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.interruptState = FST;
									ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_pguardB.ts_C.autState = S0;
									if((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.interruptState == FST && (last_event_time.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_pguardB.ts_C.autState == S0)))
									{
										if((last_event_time.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_pguardB.ts_C.autState == S0))
										{
											if(ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_pguardB.ts_C.autState == S0)
											{
												ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_pguardB.ts_C.autState = S0;
												exec = 1;
											
											}
										
										}
									
									}
								
								}else if((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.interruptState == FST && (last_event_time.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_pguardB.ts_C.autState == S0)))
								{
									ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.kleeneState = KLEENE_STARTED;
									if((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.interruptState == FST && (last_event_time.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_pguardB.ts_C.autState == S0)))
									{
										if((last_event_time.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_pguardB.ts_C.autState == S0))
										{
											if(ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_pguardB.ts_C.autState == S0)
											{
												ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_pguardB.ts_C.autState = S0;
												exec = 1;
											
											}
										
										}
									
									}
								
								}
								ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.right_clock_F1.reset_clock();
							}
						
						}
					
					}
				
				}
			
			}else if((ts_J.ts_guardJ.ts_choiceJ_guard.choiceState == NONE && ((NOTCALLED == NOTCALLED && (((NOTCALLED == NOTCALLED && ((S0 == S0 && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F2.ts_E.h <= ts_J.avg - 3 * ts_J.stddev ) || (S0 == S0 && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F2.ts_E.h > ts_J.avg - 3 * ts_J.stddev ))) || (NOTCALLED == CALLED && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F2.ts_E.autState == S0 && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F2.ts_E.h <= ts_J.avg - 3 * ts_J.stddev ) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F2.ts_E.autState == S0 && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F2.ts_E.h > ts_J.avg - 3 * ts_J.stddev )))) || ((NOTCALLED == NOTCALLED && (((((FST == FST && 0) || (FST == SND && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.guardState == GUARD_NOTSTARTED && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9)  && ((NONE == NONE && (std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end() || std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), S0) !=shallow_final_choice2B_guard.end())) || (NONE == LEFT && std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end()) || (NONE == RIGHT && std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice2B_guard.autState) !=shallow_final_choice2B_guard.end())))) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.guardState == GUARD_STARTED && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == NONE && (std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end() || std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), S0) !=shallow_final_choice2B_guard.end())) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == LEFT && std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end()) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == RIGHT && std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice2B_guard.autState) !=shallow_final_choice2B_guard.end())))))) || KLEENE_NOTSTARTED == ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.kleeneState) && (FST == FST && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && S0 == S0))) || (FST == FST && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && S0 == S0)))) || (NOTCALLED == CALLED && (((((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.interruptState == FST && 0) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.interruptState == SND && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.guardState == GUARD_NOTSTARTED && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9)  && ((NONE == NONE && (std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end() || std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), S0) !=shallow_final_choice2B_guard.end())) || (NONE == LEFT && std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end()) || (NONE == RIGHT && std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice2B_guard.autState) !=shallow_final_choice2B_guard.end())))) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.guardState == GUARD_STARTED && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == NONE && (std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end() || std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), S0) !=shallow_final_choice2B_guard.end())) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == LEFT && std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end()) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == RIGHT && std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice2B_guard.autState) !=shallow_final_choice2B_guard.end())))))) || KLEENE_NOTSTARTED == ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.kleeneState) && (FST == FST && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && S0 == S0))) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.interruptState == FST && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_pguardB.ts_C.autState == S0))))))) || (NOTCALLED == CALLED && (((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F2.callState == NOTCALLED && ((S0 == S0 && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F2.ts_E.h <= ts_J.avg - 3 * ts_J.stddev ) || (S0 == S0 && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F2.ts_E.h > ts_J.avg - 3 * ts_J.stddev ))) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F2.callState == CALLED && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F2.ts_E.autState == S0 && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F2.ts_E.h <= ts_J.avg - 3 * ts_J.stddev ) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F2.ts_E.autState == S0 && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F2.ts_E.h > ts_J.avg - 3 * ts_J.stddev )))) || ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.callState == NOTCALLED && (((((FST == FST && 0) || (FST == SND && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.guardState == GUARD_NOTSTARTED && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9)  && ((NONE == NONE && (std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end() || std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), S0) !=shallow_final_choice2B_guard.end())) || (NONE == LEFT && std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end()) || (NONE == RIGHT && std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice2B_guard.autState) !=shallow_final_choice2B_guard.end())))) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.guardState == GUARD_STARTED && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == NONE && (std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end() || std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), S0) !=shallow_final_choice2B_guard.end())) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == LEFT && std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end()) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == RIGHT && std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice2B_guard.autState) !=shallow_final_choice2B_guard.end())))))) || KLEENE_NOTSTARTED == ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.kleeneState) && (FST == FST && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && S0 == S0))) || (FST == FST && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && S0 == S0)))) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.callState == CALLED && (((((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.interruptState == FST && 0) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.interruptState == SND && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.guardState == GUARD_NOTSTARTED && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9)  && ((NONE == NONE && (std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end() || std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), S0) !=shallow_final_choice2B_guard.end())) || (NONE == LEFT && std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end()) || (NONE == RIGHT && std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice2B_guard.autState) !=shallow_final_choice2B_guard.end())))) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.guardState == GUARD_STARTED && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == NONE && (std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end() || std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), S0) !=shallow_final_choice2B_guard.end())) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == LEFT && std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end()) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == RIGHT && std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice2B_guard.autState) !=shallow_final_choice2B_guard.end())))))) || KLEENE_NOTSTARTED == ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.kleeneState) && (FST == FST && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && S0 == S0))) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.interruptState == FST && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_pguardB.ts_C.autState == S0))))))))))
			{
				ts_J.ts_guardJ.ts_choiceJ_guard.choiceState = RIGHT;
				ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.callState = NOTCALLED;
				if((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.callState == NOTCALLED && (((NOTCALLED == NOTCALLED && ((S0 == S0 && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F2.ts_E.h <= ts_J.avg - 3 * ts_J.stddev ) || (S0 == S0 && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F2.ts_E.h > ts_J.avg - 3 * ts_J.stddev ))) || (NOTCALLED == CALLED && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F2.ts_E.autState == S0 && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F2.ts_E.h <= ts_J.avg - 3 * ts_J.stddev ) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F2.ts_E.autState == S0 && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F2.ts_E.h > ts_J.avg - 3 * ts_J.stddev )))) || ((NOTCALLED == NOTCALLED && (((((FST == FST && 0) || (FST == SND && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.guardState == GUARD_NOTSTARTED && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9)  && ((NONE == NONE && (std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end() || std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), S0) !=shallow_final_choice2B_guard.end())) || (NONE == LEFT && std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end()) || (NONE == RIGHT && std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice2B_guard.autState) !=shallow_final_choice2B_guard.end())))) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.guardState == GUARD_STARTED && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == NONE && (std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end() || std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), S0) !=shallow_final_choice2B_guard.end())) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == LEFT && std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end()) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == RIGHT && std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice2B_guard.autState) !=shallow_final_choice2B_guard.end())))))) || KLEENE_NOTSTARTED == ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.kleeneState) && (FST == FST && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && S0 == S0))) || (FST == FST && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && S0 == S0)))) || (NOTCALLED == CALLED && (((((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.interruptState == FST && 0) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.interruptState == SND && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.guardState == GUARD_NOTSTARTED && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9)  && ((NONE == NONE && (std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end() || std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), S0) !=shallow_final_choice2B_guard.end())) || (NONE == LEFT && std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end()) || (NONE == RIGHT && std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice2B_guard.autState) !=shallow_final_choice2B_guard.end())))) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.guardState == GUARD_STARTED && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == NONE && (std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end() || std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), S0) !=shallow_final_choice2B_guard.end())) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == LEFT && std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end()) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == RIGHT && std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice2B_guard.autState) !=shallow_final_choice2B_guard.end())))))) || KLEENE_NOTSTARTED == ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.kleeneState) && (FST == FST && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && S0 == S0))) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.interruptState == FST && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_pguardB.ts_C.autState == S0))))))))
				{
					ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.callState = CALLED;
					ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.right_clock_F1.reset_clock();
					ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.left_clock_F2.reset_clock();
					ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F2.callState = NOTCALLED;
					ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.callState = NOTCALLED;
					if(((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F2.callState == NOTCALLED && ((S0 == S0 && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F2.ts_E.h <= ts_J.avg - 3 * ts_J.stddev ) || (S0 == S0 && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F2.ts_E.h > ts_J.avg - 3 * ts_J.stddev ))) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F2.callState == CALLED && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F2.ts_E.autState == S0 && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F2.ts_E.h <= ts_J.avg - 3 * ts_J.stddev ) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F2.ts_E.autState == S0 && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F2.ts_E.h > ts_J.avg - 3 * ts_J.stddev )))))
					{
						if((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F2.callState == NOTCALLED && ((S0 == S0 && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F2.ts_E.h <= ts_J.avg - 3 * ts_J.stddev ) || (S0 == S0 && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F2.ts_E.h > ts_J.avg - 3 * ts_J.stddev ))))
						{
							ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F2.callState = CALLED;
							ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F2.ts_E.autState = S0;
							ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F2.ts_E.h.reset_clock();
							if((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F2.ts_E.autState == S0 && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F2.ts_E.h <= ts_J.avg - 3 * ts_J.stddev ))
							{
								Alert(1);ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F2.ts_E.autState = S0;
								exec = 1;
							
							}else if((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F2.ts_E.autState == S0 && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F2.ts_E.h > ts_J.avg - 3 * ts_J.stddev ))
							{
								ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F2.ts_E.h.reset_clock();ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F2.ts_E.autState = S0;
								exec = 1;
							
							}
							ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.left_clock_F2.reset_clock();
						}else if((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F2.callState == CALLED && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F2.ts_E.autState == S0 && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F2.ts_E.h <= ts_J.avg - 3 * ts_J.stddev ) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F2.ts_E.autState == S0 && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F2.ts_E.h > ts_J.avg - 3 * ts_J.stddev ))))
						{
							if((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F2.ts_E.autState == S0 && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F2.ts_E.h <= ts_J.avg - 3 * ts_J.stddev ))
							{
								Alert(1);ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F2.ts_E.autState = S0;
								exec = 1;
							
							}else if((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F2.ts_E.autState == S0 && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F2.ts_E.h > ts_J.avg - 3 * ts_J.stddev ))
							{
								ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F2.ts_E.h.reset_clock();ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F2.ts_E.autState = S0;
								exec = 1;
							
							}
							ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.left_clock_F2.reset_clock();
						}
					
					}
					if(((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.callState == NOTCALLED && (((((FST == FST && 0) || (FST == SND && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.guardState == GUARD_NOTSTARTED && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9)  && ((NONE == NONE && (std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end() || std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), S0) !=shallow_final_choice2B_guard.end())) || (NONE == LEFT && std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end()) || (NONE == RIGHT && std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice2B_guard.autState) !=shallow_final_choice2B_guard.end())))) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.guardState == GUARD_STARTED && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == NONE && (std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end() || std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), S0) !=shallow_final_choice2B_guard.end())) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == LEFT && std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end()) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == RIGHT && std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice2B_guard.autState) !=shallow_final_choice2B_guard.end())))))) || KLEENE_NOTSTARTED == ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.kleeneState) && (FST == FST && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && S0 == S0))) || (FST == FST && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && S0 == S0)))) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.callState == CALLED && (((((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.interruptState == FST && 0) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.interruptState == SND && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.guardState == GUARD_NOTSTARTED && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9)  && ((NONE == NONE && (std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end() || std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), S0) !=shallow_final_choice2B_guard.end())) || (NONE == LEFT && std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end()) || (NONE == RIGHT && std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice2B_guard.autState) !=shallow_final_choice2B_guard.end())))) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.guardState == GUARD_STARTED && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == NONE && (std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end() || std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), S0) !=shallow_final_choice2B_guard.end())) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == LEFT && std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end()) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == RIGHT && std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice2B_guard.autState) !=shallow_final_choice2B_guard.end())))))) || KLEENE_NOTSTARTED == ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.kleeneState) && (FST == FST && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && S0 == S0))) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.interruptState == FST && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_pguardB.ts_C.autState == S0))))))
					{
						if((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.callState == NOTCALLED && (((((FST == FST && 0) || (FST == SND && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.guardState == GUARD_NOTSTARTED && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9)  && ((NONE == NONE && (std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end() || std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), S0) !=shallow_final_choice2B_guard.end())) || (NONE == LEFT && std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end()) || (NONE == RIGHT && std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice2B_guard.autState) !=shallow_final_choice2B_guard.end())))) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.guardState == GUARD_STARTED && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == NONE && (std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end() || std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), S0) !=shallow_final_choice2B_guard.end())) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == LEFT && std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end()) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == RIGHT && std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice2B_guard.autState) !=shallow_final_choice2B_guard.end())))))) || KLEENE_NOTSTARTED == ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.kleeneState) && (FST == FST && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && S0 == S0))) || (FST == FST && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && S0 == S0)))))
						{
							ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.callState = CALLED;
							ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.kleeneState = KLEENE_NOTSTARTED;
							ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.interruptState = FST;
							ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_pguardB.ts_C.autState = S0;
							if(((((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.interruptState == FST && 0) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.interruptState == SND && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.guardState == GUARD_NOTSTARTED && (last_event_time.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9)  && ((NONE == NONE && (std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end() || std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), S0) !=shallow_final_choice2B_guard.end())) || (NONE == LEFT && std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end()) || (NONE == RIGHT && std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice2B_guard.autState) !=shallow_final_choice2B_guard.end())))) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.guardState == GUARD_STARTED && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == NONE && (std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end() || std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), S0) !=shallow_final_choice2B_guard.end())) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == LEFT && std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end()) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == RIGHT && std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice2B_guard.autState) !=shallow_final_choice2B_guard.end())))))) || KLEENE_NOTSTARTED == ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.kleeneState) && (FST == FST && (last_event_time.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && S0 == S0))))
							{
								ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.kleeneState = KLEENE_STARTED;
								ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.interruptState = FST;
								ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_pguardB.ts_C.autState = S0;
								if((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.interruptState == FST && (last_event_time.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_pguardB.ts_C.autState == S0)))
								{
									if((last_event_time.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_pguardB.ts_C.autState == S0))
									{
										if(ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_pguardB.ts_C.autState == S0)
										{
											ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_pguardB.ts_C.autState = S0;
											exec = 1;
										
										}
									
									}
								
								}
							
							}else if((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.interruptState == FST && (last_event_time.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_pguardB.ts_C.autState == S0)))
							{
								ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.kleeneState = KLEENE_STARTED;
								if((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.interruptState == FST && (last_event_time.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_pguardB.ts_C.autState == S0)))
								{
									if((last_event_time.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_pguardB.ts_C.autState == S0))
									{
										if(ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_pguardB.ts_C.autState == S0)
										{
											ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_pguardB.ts_C.autState = S0;
											exec = 1;
										
										}
									
									}
								
								}
							
							}
							ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.right_clock_F1.reset_clock();
						}else if((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.callState == CALLED && (((((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.interruptState == FST && 0) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.interruptState == SND && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.guardState == GUARD_NOTSTARTED && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9)  && ((NONE == NONE && (std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end() || std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), S0) !=shallow_final_choice2B_guard.end())) || (NONE == LEFT && std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end()) || (NONE == RIGHT && std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice2B_guard.autState) !=shallow_final_choice2B_guard.end())))) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.guardState == GUARD_STARTED && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == NONE && (std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end() || std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), S0) !=shallow_final_choice2B_guard.end())) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == LEFT && std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end()) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == RIGHT && std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice2B_guard.autState) !=shallow_final_choice2B_guard.end())))))) || KLEENE_NOTSTARTED == ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.kleeneState) && (FST == FST && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && S0 == S0))) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.interruptState == FST && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_pguardB.ts_C.autState == S0)))))
						{
							if(((((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.interruptState == FST && 0) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.interruptState == SND && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.guardState == GUARD_NOTSTARTED && (last_event_time.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9)  && ((NONE == NONE && (std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end() || std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), S0) !=shallow_final_choice2B_guard.end())) || (NONE == LEFT && std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end()) || (NONE == RIGHT && std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice2B_guard.autState) !=shallow_final_choice2B_guard.end())))) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.guardState == GUARD_STARTED && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == NONE && (std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end() || std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), S0) !=shallow_final_choice2B_guard.end())) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == LEFT && std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end()) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == RIGHT && std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice2B_guard.autState) !=shallow_final_choice2B_guard.end())))))) || KLEENE_NOTSTARTED == ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.kleeneState) && (FST == FST && (last_event_time.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && S0 == S0))))
							{
								ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.kleeneState = KLEENE_STARTED;
								ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.interruptState = FST;
								ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_pguardB.ts_C.autState = S0;
								if((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.interruptState == FST && (last_event_time.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_pguardB.ts_C.autState == S0)))
								{
									if((last_event_time.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_pguardB.ts_C.autState == S0))
									{
										if(ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_pguardB.ts_C.autState == S0)
										{
											ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_pguardB.ts_C.autState = S0;
											exec = 1;
										
										}
									
									}
								
								}
							
							}else if((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.interruptState == FST && (last_event_time.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_pguardB.ts_C.autState == S0)))
							{
								ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.kleeneState = KLEENE_STARTED;
								if((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.interruptState == FST && (last_event_time.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_pguardB.ts_C.autState == S0)))
								{
									if((last_event_time.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_pguardB.ts_C.autState == S0))
									{
										if(ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_pguardB.ts_C.autState == S0)
										{
											ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_pguardB.ts_C.autState = S0;
											exec = 1;
										
										}
									
									}
								
								}
							
							}
							ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.right_clock_F1.reset_clock();
						}
					
					}
				
				}else if((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.callState == CALLED && (((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F2.callState == NOTCALLED && ((S0 == S0 && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F2.ts_E.h <= ts_J.avg - 3 * ts_J.stddev ) || (S0 == S0 && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F2.ts_E.h > ts_J.avg - 3 * ts_J.stddev ))) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F2.callState == CALLED && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F2.ts_E.autState == S0 && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F2.ts_E.h <= ts_J.avg - 3 * ts_J.stddev ) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F2.ts_E.autState == S0 && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F2.ts_E.h > ts_J.avg - 3 * ts_J.stddev )))) || ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.callState == NOTCALLED && (((((FST == FST && 0) || (FST == SND && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.guardState == GUARD_NOTSTARTED && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9)  && ((NONE == NONE && (std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end() || std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), S0) !=shallow_final_choice2B_guard.end())) || (NONE == LEFT && std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end()) || (NONE == RIGHT && std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice2B_guard.autState) !=shallow_final_choice2B_guard.end())))) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.guardState == GUARD_STARTED && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == NONE && (std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end() || std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), S0) !=shallow_final_choice2B_guard.end())) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == LEFT && std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end()) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == RIGHT && std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice2B_guard.autState) !=shallow_final_choice2B_guard.end())))))) || KLEENE_NOTSTARTED == ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.kleeneState) && (FST == FST && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && S0 == S0))) || (FST == FST && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && S0 == S0)))) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.callState == CALLED && (((((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.interruptState == FST && 0) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.interruptState == SND && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.guardState == GUARD_NOTSTARTED && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9)  && ((NONE == NONE && (std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end() || std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), S0) !=shallow_final_choice2B_guard.end())) || (NONE == LEFT && std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end()) || (NONE == RIGHT && std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice2B_guard.autState) !=shallow_final_choice2B_guard.end())))) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.guardState == GUARD_STARTED && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == NONE && (std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end() || std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), S0) !=shallow_final_choice2B_guard.end())) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == LEFT && std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end()) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == RIGHT && std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice2B_guard.autState) !=shallow_final_choice2B_guard.end())))))) || KLEENE_NOTSTARTED == ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.kleeneState) && (FST == FST && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && S0 == S0))) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.interruptState == FST && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_pguardB.ts_C.autState == S0))))))))
				{
					if(((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F2.callState == NOTCALLED && ((S0 == S0 && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F2.ts_E.h <= ts_J.avg - 3 * ts_J.stddev ) || (S0 == S0 && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F2.ts_E.h > ts_J.avg - 3 * ts_J.stddev ))) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F2.callState == CALLED && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F2.ts_E.autState == S0 && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F2.ts_E.h <= ts_J.avg - 3 * ts_J.stddev ) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F2.ts_E.autState == S0 && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F2.ts_E.h > ts_J.avg - 3 * ts_J.stddev )))))
					{
						if((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F2.callState == NOTCALLED && ((S0 == S0 && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F2.ts_E.h <= ts_J.avg - 3 * ts_J.stddev ) || (S0 == S0 && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F2.ts_E.h > ts_J.avg - 3 * ts_J.stddev ))))
						{
							ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F2.callState = CALLED;
							ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F2.ts_E.autState = S0;
							ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F2.ts_E.h.reset_clock();
							if((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F2.ts_E.autState == S0 && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F2.ts_E.h <= ts_J.avg - 3 * ts_J.stddev ))
							{
								Alert(1);ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F2.ts_E.autState = S0;
								exec = 1;
							
							}else if((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F2.ts_E.autState == S0 && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F2.ts_E.h > ts_J.avg - 3 * ts_J.stddev ))
							{
								ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F2.ts_E.h.reset_clock();ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F2.ts_E.autState = S0;
								exec = 1;
							
							}
							ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.left_clock_F2.reset_clock();
						}else if((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F2.callState == CALLED && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F2.ts_E.autState == S0 && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F2.ts_E.h <= ts_J.avg - 3 * ts_J.stddev ) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F2.ts_E.autState == S0 && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F2.ts_E.h > ts_J.avg - 3 * ts_J.stddev ))))
						{
							if((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F2.ts_E.autState == S0 && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F2.ts_E.h <= ts_J.avg - 3 * ts_J.stddev ))
							{
								Alert(1);ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F2.ts_E.autState = S0;
								exec = 1;
							
							}else if((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F2.ts_E.autState == S0 && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F2.ts_E.h > ts_J.avg - 3 * ts_J.stddev ))
							{
								ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F2.ts_E.h.reset_clock();ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F2.ts_E.autState = S0;
								exec = 1;
							
							}
							ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.left_clock_F2.reset_clock();
						}
					
					}
					if(((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.callState == NOTCALLED && (((((FST == FST && 0) || (FST == SND && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.guardState == GUARD_NOTSTARTED && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9)  && ((NONE == NONE && (std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end() || std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), S0) !=shallow_final_choice2B_guard.end())) || (NONE == LEFT && std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end()) || (NONE == RIGHT && std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice2B_guard.autState) !=shallow_final_choice2B_guard.end())))) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.guardState == GUARD_STARTED && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == NONE && (std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end() || std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), S0) !=shallow_final_choice2B_guard.end())) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == LEFT && std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end()) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == RIGHT && std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice2B_guard.autState) !=shallow_final_choice2B_guard.end())))))) || KLEENE_NOTSTARTED == ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.kleeneState) && (FST == FST && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && S0 == S0))) || (FST == FST && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && S0 == S0)))) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.callState == CALLED && (((((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.interruptState == FST && 0) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.interruptState == SND && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.guardState == GUARD_NOTSTARTED && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9)  && ((NONE == NONE && (std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end() || std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), S0) !=shallow_final_choice2B_guard.end())) || (NONE == LEFT && std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end()) || (NONE == RIGHT && std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice2B_guard.autState) !=shallow_final_choice2B_guard.end())))) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.guardState == GUARD_STARTED && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == NONE && (std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end() || std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), S0) !=shallow_final_choice2B_guard.end())) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == LEFT && std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end()) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == RIGHT && std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice2B_guard.autState) !=shallow_final_choice2B_guard.end())))))) || KLEENE_NOTSTARTED == ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.kleeneState) && (FST == FST && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && S0 == S0))) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.interruptState == FST && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_pguardB.ts_C.autState == S0))))))
					{
						if((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.callState == NOTCALLED && (((((FST == FST && 0) || (FST == SND && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.guardState == GUARD_NOTSTARTED && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9)  && ((NONE == NONE && (std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end() || std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), S0) !=shallow_final_choice2B_guard.end())) || (NONE == LEFT && std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end()) || (NONE == RIGHT && std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice2B_guard.autState) !=shallow_final_choice2B_guard.end())))) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.guardState == GUARD_STARTED && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == NONE && (std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end() || std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), S0) !=shallow_final_choice2B_guard.end())) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == LEFT && std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end()) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == RIGHT && std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice2B_guard.autState) !=shallow_final_choice2B_guard.end())))))) || KLEENE_NOTSTARTED == ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.kleeneState) && (FST == FST && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && S0 == S0))) || (FST == FST && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && S0 == S0)))))
						{
							ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.callState = CALLED;
							ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.kleeneState = KLEENE_NOTSTARTED;
							ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.interruptState = FST;
							ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_pguardB.ts_C.autState = S0;
							if(((((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.interruptState == FST && 0) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.interruptState == SND && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.guardState == GUARD_NOTSTARTED && (last_event_time.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9)  && ((NONE == NONE && (std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end() || std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), S0) !=shallow_final_choice2B_guard.end())) || (NONE == LEFT && std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end()) || (NONE == RIGHT && std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice2B_guard.autState) !=shallow_final_choice2B_guard.end())))) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.guardState == GUARD_STARTED && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == NONE && (std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end() || std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), S0) !=shallow_final_choice2B_guard.end())) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == LEFT && std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end()) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == RIGHT && std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice2B_guard.autState) !=shallow_final_choice2B_guard.end())))))) || KLEENE_NOTSTARTED == ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.kleeneState) && (FST == FST && (last_event_time.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && S0 == S0))))
							{
								ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.kleeneState = KLEENE_STARTED;
								ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.interruptState = FST;
								ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_pguardB.ts_C.autState = S0;
								if((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.interruptState == FST && (last_event_time.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_pguardB.ts_C.autState == S0)))
								{
									if((last_event_time.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_pguardB.ts_C.autState == S0))
									{
										if(ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_pguardB.ts_C.autState == S0)
										{
											ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_pguardB.ts_C.autState = S0;
											exec = 1;
										
										}
									
									}
								
								}
							
							}else if((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.interruptState == FST && (last_event_time.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_pguardB.ts_C.autState == S0)))
							{
								ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.kleeneState = KLEENE_STARTED;
								if((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.interruptState == FST && (last_event_time.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_pguardB.ts_C.autState == S0)))
								{
									if((last_event_time.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_pguardB.ts_C.autState == S0))
									{
										if(ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_pguardB.ts_C.autState == S0)
										{
											ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_pguardB.ts_C.autState = S0;
											exec = 1;
										
										}
									
									}
								
								}
							
							}
							ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.right_clock_F1.reset_clock();
						}else if((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.callState == CALLED && (((((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.interruptState == FST && 0) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.interruptState == SND && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.guardState == GUARD_NOTSTARTED && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9)  && ((NONE == NONE && (std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end() || std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), S0) !=shallow_final_choice2B_guard.end())) || (NONE == LEFT && std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end()) || (NONE == RIGHT && std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice2B_guard.autState) !=shallow_final_choice2B_guard.end())))) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.guardState == GUARD_STARTED && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == NONE && (std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end() || std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), S0) !=shallow_final_choice2B_guard.end())) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == LEFT && std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end()) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == RIGHT && std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice2B_guard.autState) !=shallow_final_choice2B_guard.end())))))) || KLEENE_NOTSTARTED == ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.kleeneState) && (FST == FST && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && S0 == S0))) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.interruptState == FST && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_pguardB.ts_C.autState == S0)))))
						{
							if(((((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.interruptState == FST && 0) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.interruptState == SND && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.guardState == GUARD_NOTSTARTED && (last_event_time.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9)  && ((NONE == NONE && (std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end() || std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), S0) !=shallow_final_choice2B_guard.end())) || (NONE == LEFT && std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end()) || (NONE == RIGHT && std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice2B_guard.autState) !=shallow_final_choice2B_guard.end())))) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.guardState == GUARD_STARTED && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == NONE && (std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end() || std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), S0) !=shallow_final_choice2B_guard.end())) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == LEFT && std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end()) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == RIGHT && std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice2B_guard.autState) !=shallow_final_choice2B_guard.end())))))) || KLEENE_NOTSTARTED == ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.kleeneState) && (FST == FST && (last_event_time.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && S0 == S0))))
							{
								ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.kleeneState = KLEENE_STARTED;
								ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.interruptState = FST;
								ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_pguardB.ts_C.autState = S0;
								if((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.interruptState == FST && (last_event_time.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_pguardB.ts_C.autState == S0)))
								{
									if((last_event_time.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_pguardB.ts_C.autState == S0))
									{
										if(ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_pguardB.ts_C.autState == S0)
										{
											ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_pguardB.ts_C.autState = S0;
											exec = 1;
										
										}
									
									}
								
								}
							
							}else if((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.interruptState == FST && (last_event_time.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_pguardB.ts_C.autState == S0)))
							{
								ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.kleeneState = KLEENE_STARTED;
								if((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.interruptState == FST && (last_event_time.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_pguardB.ts_C.autState == S0)))
								{
									if((last_event_time.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_pguardB.ts_C.autState == S0))
									{
										if(ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_pguardB.ts_C.autState == S0)
										{
											ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_pguardB.ts_C.autState = S0;
											exec = 1;
										
										}
									
									}
								
								}
							
							}
							ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.right_clock_F1.reset_clock();
						}
					
					}
				
				}
			
			}else if((ts_J.ts_guardJ.ts_choiceJ_guard.choiceState == RIGHT && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.callState == NOTCALLED && (((NOTCALLED == NOTCALLED && ((S0 == S0 && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F2.ts_E.h <= ts_J.avg - 3 * ts_J.stddev ) || (S0 == S0 && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F2.ts_E.h > ts_J.avg - 3 * ts_J.stddev ))) || (NOTCALLED == CALLED && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F2.ts_E.autState == S0 && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F2.ts_E.h <= ts_J.avg - 3 * ts_J.stddev ) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F2.ts_E.autState == S0 && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F2.ts_E.h > ts_J.avg - 3 * ts_J.stddev )))) || ((NOTCALLED == NOTCALLED && (((((FST == FST && 0) || (FST == SND && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.guardState == GUARD_NOTSTARTED && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9)  && ((NONE == NONE && (std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end() || std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), S0) !=shallow_final_choice2B_guard.end())) || (NONE == LEFT && std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end()) || (NONE == RIGHT && std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice2B_guard.autState) !=shallow_final_choice2B_guard.end())))) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.guardState == GUARD_STARTED && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == NONE && (std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end() || std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), S0) !=shallow_final_choice2B_guard.end())) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == LEFT && std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end()) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == RIGHT && std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice2B_guard.autState) !=shallow_final_choice2B_guard.end())))))) || KLEENE_NOTSTARTED == ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.kleeneState) && (FST == FST && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && S0 == S0))) || (FST == FST && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && S0 == S0)))) || (NOTCALLED == CALLED && (((((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.interruptState == FST && 0) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.interruptState == SND && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.guardState == GUARD_NOTSTARTED && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9)  && ((NONE == NONE && (std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end() || std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), S0) !=shallow_final_choice2B_guard.end())) || (NONE == LEFT && std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end()) || (NONE == RIGHT && std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice2B_guard.autState) !=shallow_final_choice2B_guard.end())))) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.guardState == GUARD_STARTED && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == NONE && (std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end() || std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), S0) !=shallow_final_choice2B_guard.end())) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == LEFT && std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end()) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == RIGHT && std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice2B_guard.autState) !=shallow_final_choice2B_guard.end())))))) || KLEENE_NOTSTARTED == ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.kleeneState) && (FST == FST && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && S0 == S0))) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.interruptState == FST && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_pguardB.ts_C.autState == S0))))))) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.callState == CALLED && (((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F2.callState == NOTCALLED && ((S0 == S0 && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F2.ts_E.h <= ts_J.avg - 3 * ts_J.stddev ) || (S0 == S0 && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F2.ts_E.h > ts_J.avg - 3 * ts_J.stddev ))) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F2.callState == CALLED && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F2.ts_E.autState == S0 && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F2.ts_E.h <= ts_J.avg - 3 * ts_J.stddev ) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F2.ts_E.autState == S0 && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F2.ts_E.h > ts_J.avg - 3 * ts_J.stddev )))) || ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.callState == NOTCALLED && (((((FST == FST && 0) || (FST == SND && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.guardState == GUARD_NOTSTARTED && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9)  && ((NONE == NONE && (std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end() || std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), S0) !=shallow_final_choice2B_guard.end())) || (NONE == LEFT && std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end()) || (NONE == RIGHT && std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice2B_guard.autState) !=shallow_final_choice2B_guard.end())))) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.guardState == GUARD_STARTED && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == NONE && (std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end() || std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), S0) !=shallow_final_choice2B_guard.end())) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == LEFT && std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end()) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == RIGHT && std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice2B_guard.autState) !=shallow_final_choice2B_guard.end())))))) || KLEENE_NOTSTARTED == ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.kleeneState) && (FST == FST && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && S0 == S0))) || (FST == FST && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && S0 == S0)))) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.callState == CALLED && (((((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.interruptState == FST && 0) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.interruptState == SND && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.guardState == GUARD_NOTSTARTED && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9)  && ((NONE == NONE && (std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end() || std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), S0) !=shallow_final_choice2B_guard.end())) || (NONE == LEFT && std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end()) || (NONE == RIGHT && std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice2B_guard.autState) !=shallow_final_choice2B_guard.end())))) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.guardState == GUARD_STARTED && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == NONE && (std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end() || std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), S0) !=shallow_final_choice2B_guard.end())) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == LEFT && std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end()) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == RIGHT && std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice2B_guard.autState) !=shallow_final_choice2B_guard.end())))))) || KLEENE_NOTSTARTED == ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.kleeneState) && (FST == FST && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && S0 == S0))) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.interruptState == FST && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_pguardB.ts_C.autState == S0))))))))))
			{
				if((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.callState == NOTCALLED && (((NOTCALLED == NOTCALLED && ((S0 == S0 && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F2.ts_E.h <= ts_J.avg - 3 * ts_J.stddev ) || (S0 == S0 && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F2.ts_E.h > ts_J.avg - 3 * ts_J.stddev ))) || (NOTCALLED == CALLED && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F2.ts_E.autState == S0 && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F2.ts_E.h <= ts_J.avg - 3 * ts_J.stddev ) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F2.ts_E.autState == S0 && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F2.ts_E.h > ts_J.avg - 3 * ts_J.stddev )))) || ((NOTCALLED == NOTCALLED && (((((FST == FST && 0) || (FST == SND && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.guardState == GUARD_NOTSTARTED && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9)  && ((NONE == NONE && (std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end() || std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), S0) !=shallow_final_choice2B_guard.end())) || (NONE == LEFT && std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end()) || (NONE == RIGHT && std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice2B_guard.autState) !=shallow_final_choice2B_guard.end())))) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.guardState == GUARD_STARTED && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == NONE && (std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end() || std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), S0) !=shallow_final_choice2B_guard.end())) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == LEFT && std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end()) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == RIGHT && std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice2B_guard.autState) !=shallow_final_choice2B_guard.end())))))) || KLEENE_NOTSTARTED == ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.kleeneState) && (FST == FST && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && S0 == S0))) || (FST == FST && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && S0 == S0)))) || (NOTCALLED == CALLED && (((((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.interruptState == FST && 0) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.interruptState == SND && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.guardState == GUARD_NOTSTARTED && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9)  && ((NONE == NONE && (std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end() || std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), S0) !=shallow_final_choice2B_guard.end())) || (NONE == LEFT && std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end()) || (NONE == RIGHT && std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice2B_guard.autState) !=shallow_final_choice2B_guard.end())))) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.guardState == GUARD_STARTED && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == NONE && (std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end() || std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), S0) !=shallow_final_choice2B_guard.end())) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == LEFT && std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end()) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == RIGHT && std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice2B_guard.autState) !=shallow_final_choice2B_guard.end())))))) || KLEENE_NOTSTARTED == ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.kleeneState) && (FST == FST && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && S0 == S0))) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.interruptState == FST && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_pguardB.ts_C.autState == S0))))))))
				{
					ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.callState = CALLED;
					ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.right_clock_F1.reset_clock();
					ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.left_clock_F2.reset_clock();
					ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F2.callState = NOTCALLED;
					ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.callState = NOTCALLED;
					if(((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F2.callState == NOTCALLED && ((S0 == S0 && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F2.ts_E.h <= ts_J.avg - 3 * ts_J.stddev ) || (S0 == S0 && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F2.ts_E.h > ts_J.avg - 3 * ts_J.stddev ))) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F2.callState == CALLED && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F2.ts_E.autState == S0 && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F2.ts_E.h <= ts_J.avg - 3 * ts_J.stddev ) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F2.ts_E.autState == S0 && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F2.ts_E.h > ts_J.avg - 3 * ts_J.stddev )))))
					{
						if((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F2.callState == NOTCALLED && ((S0 == S0 && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F2.ts_E.h <= ts_J.avg - 3 * ts_J.stddev ) || (S0 == S0 && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F2.ts_E.h > ts_J.avg - 3 * ts_J.stddev ))))
						{
							ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F2.callState = CALLED;
							ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F2.ts_E.autState = S0;
							ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F2.ts_E.h.reset_clock();
							if((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F2.ts_E.autState == S0 && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F2.ts_E.h <= ts_J.avg - 3 * ts_J.stddev ))
							{
								Alert(1);ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F2.ts_E.autState = S0;
								exec = 1;
							
							}else if((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F2.ts_E.autState == S0 && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F2.ts_E.h > ts_J.avg - 3 * ts_J.stddev ))
							{
								ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F2.ts_E.h.reset_clock();ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F2.ts_E.autState = S0;
								exec = 1;
							
							}
							ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.left_clock_F2.reset_clock();
						}else if((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F2.callState == CALLED && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F2.ts_E.autState == S0 && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F2.ts_E.h <= ts_J.avg - 3 * ts_J.stddev ) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F2.ts_E.autState == S0 && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F2.ts_E.h > ts_J.avg - 3 * ts_J.stddev ))))
						{
							if((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F2.ts_E.autState == S0 && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F2.ts_E.h <= ts_J.avg - 3 * ts_J.stddev ))
							{
								Alert(1);ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F2.ts_E.autState = S0;
								exec = 1;
							
							}else if((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F2.ts_E.autState == S0 && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F2.ts_E.h > ts_J.avg - 3 * ts_J.stddev ))
							{
								ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F2.ts_E.h.reset_clock();ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F2.ts_E.autState = S0;
								exec = 1;
							
							}
							ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.left_clock_F2.reset_clock();
						}
					
					}
					if(((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.callState == NOTCALLED && (((((FST == FST && 0) || (FST == SND && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.guardState == GUARD_NOTSTARTED && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9)  && ((NONE == NONE && (std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end() || std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), S0) !=shallow_final_choice2B_guard.end())) || (NONE == LEFT && std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end()) || (NONE == RIGHT && std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice2B_guard.autState) !=shallow_final_choice2B_guard.end())))) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.guardState == GUARD_STARTED && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == NONE && (std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end() || std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), S0) !=shallow_final_choice2B_guard.end())) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == LEFT && std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end()) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == RIGHT && std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice2B_guard.autState) !=shallow_final_choice2B_guard.end())))))) || KLEENE_NOTSTARTED == ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.kleeneState) && (FST == FST && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && S0 == S0))) || (FST == FST && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && S0 == S0)))) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.callState == CALLED && (((((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.interruptState == FST && 0) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.interruptState == SND && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.guardState == GUARD_NOTSTARTED && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9)  && ((NONE == NONE && (std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end() || std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), S0) !=shallow_final_choice2B_guard.end())) || (NONE == LEFT && std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end()) || (NONE == RIGHT && std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice2B_guard.autState) !=shallow_final_choice2B_guard.end())))) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.guardState == GUARD_STARTED && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == NONE && (std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end() || std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), S0) !=shallow_final_choice2B_guard.end())) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == LEFT && std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end()) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == RIGHT && std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice2B_guard.autState) !=shallow_final_choice2B_guard.end())))))) || KLEENE_NOTSTARTED == ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.kleeneState) && (FST == FST && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && S0 == S0))) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.interruptState == FST && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_pguardB.ts_C.autState == S0))))))
					{
						if((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.callState == NOTCALLED && (((((FST == FST && 0) || (FST == SND && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.guardState == GUARD_NOTSTARTED && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9)  && ((NONE == NONE && (std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end() || std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), S0) !=shallow_final_choice2B_guard.end())) || (NONE == LEFT && std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end()) || (NONE == RIGHT && std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice2B_guard.autState) !=shallow_final_choice2B_guard.end())))) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.guardState == GUARD_STARTED && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == NONE && (std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end() || std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), S0) !=shallow_final_choice2B_guard.end())) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == LEFT && std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end()) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == RIGHT && std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice2B_guard.autState) !=shallow_final_choice2B_guard.end())))))) || KLEENE_NOTSTARTED == ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.kleeneState) && (FST == FST && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && S0 == S0))) || (FST == FST && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && S0 == S0)))))
						{
							ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.callState = CALLED;
							ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.kleeneState = KLEENE_NOTSTARTED;
							ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.interruptState = FST;
							ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_pguardB.ts_C.autState = S0;
							if(((((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.interruptState == FST && 0) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.interruptState == SND && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.guardState == GUARD_NOTSTARTED && (last_event_time.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9)  && ((NONE == NONE && (std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end() || std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), S0) !=shallow_final_choice2B_guard.end())) || (NONE == LEFT && std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end()) || (NONE == RIGHT && std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice2B_guard.autState) !=shallow_final_choice2B_guard.end())))) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.guardState == GUARD_STARTED && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == NONE && (std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end() || std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), S0) !=shallow_final_choice2B_guard.end())) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == LEFT && std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end()) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == RIGHT && std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice2B_guard.autState) !=shallow_final_choice2B_guard.end())))))) || KLEENE_NOTSTARTED == ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.kleeneState) && (FST == FST && (last_event_time.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && S0 == S0))))
							{
								ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.kleeneState = KLEENE_STARTED;
								ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.interruptState = FST;
								ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_pguardB.ts_C.autState = S0;
								if((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.interruptState == FST && (last_event_time.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_pguardB.ts_C.autState == S0)))
								{
									if((last_event_time.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_pguardB.ts_C.autState == S0))
									{
										if(ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_pguardB.ts_C.autState == S0)
										{
											ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_pguardB.ts_C.autState = S0;
											exec = 1;
										
										}
									
									}
								
								}
							
							}else if((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.interruptState == FST && (last_event_time.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_pguardB.ts_C.autState == S0)))
							{
								ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.kleeneState = KLEENE_STARTED;
								if((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.interruptState == FST && (last_event_time.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_pguardB.ts_C.autState == S0)))
								{
									if((last_event_time.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_pguardB.ts_C.autState == S0))
									{
										if(ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_pguardB.ts_C.autState == S0)
										{
											ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_pguardB.ts_C.autState = S0;
											exec = 1;
										
										}
									
									}
								
								}
							
							}
							ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.right_clock_F1.reset_clock();
						}else if((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.callState == CALLED && (((((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.interruptState == FST && 0) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.interruptState == SND && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.guardState == GUARD_NOTSTARTED && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9)  && ((NONE == NONE && (std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end() || std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), S0) !=shallow_final_choice2B_guard.end())) || (NONE == LEFT && std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end()) || (NONE == RIGHT && std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice2B_guard.autState) !=shallow_final_choice2B_guard.end())))) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.guardState == GUARD_STARTED && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == NONE && (std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end() || std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), S0) !=shallow_final_choice2B_guard.end())) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == LEFT && std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end()) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == RIGHT && std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice2B_guard.autState) !=shallow_final_choice2B_guard.end())))))) || KLEENE_NOTSTARTED == ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.kleeneState) && (FST == FST && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && S0 == S0))) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.interruptState == FST && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_pguardB.ts_C.autState == S0)))))
						{
							if(((((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.interruptState == FST && 0) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.interruptState == SND && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.guardState == GUARD_NOTSTARTED && (last_event_time.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9)  && ((NONE == NONE && (std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end() || std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), S0) !=shallow_final_choice2B_guard.end())) || (NONE == LEFT && std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end()) || (NONE == RIGHT && std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice2B_guard.autState) !=shallow_final_choice2B_guard.end())))) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.guardState == GUARD_STARTED && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == NONE && (std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end() || std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), S0) !=shallow_final_choice2B_guard.end())) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == LEFT && std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end()) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == RIGHT && std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice2B_guard.autState) !=shallow_final_choice2B_guard.end())))))) || KLEENE_NOTSTARTED == ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.kleeneState) && (FST == FST && (last_event_time.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && S0 == S0))))
							{
								ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.kleeneState = KLEENE_STARTED;
								ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.interruptState = FST;
								ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_pguardB.ts_C.autState = S0;
								if((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.interruptState == FST && (last_event_time.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_pguardB.ts_C.autState == S0)))
								{
									if((last_event_time.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_pguardB.ts_C.autState == S0))
									{
										if(ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_pguardB.ts_C.autState == S0)
										{
											ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_pguardB.ts_C.autState = S0;
											exec = 1;
										
										}
									
									}
								
								}
							
							}else if((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.interruptState == FST && (last_event_time.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_pguardB.ts_C.autState == S0)))
							{
								ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.kleeneState = KLEENE_STARTED;
								if((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.interruptState == FST && (last_event_time.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_pguardB.ts_C.autState == S0)))
								{
									if((last_event_time.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_pguardB.ts_C.autState == S0))
									{
										if(ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_pguardB.ts_C.autState == S0)
										{
											ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_pguardB.ts_C.autState = S0;
											exec = 1;
										
										}
									
									}
								
								}
							
							}
							ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.right_clock_F1.reset_clock();
						}
					
					}
				
				}else if((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.callState == CALLED && (((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F2.callState == NOTCALLED && ((S0 == S0 && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F2.ts_E.h <= ts_J.avg - 3 * ts_J.stddev ) || (S0 == S0 && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F2.ts_E.h > ts_J.avg - 3 * ts_J.stddev ))) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F2.callState == CALLED && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F2.ts_E.autState == S0 && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F2.ts_E.h <= ts_J.avg - 3 * ts_J.stddev ) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F2.ts_E.autState == S0 && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F2.ts_E.h > ts_J.avg - 3 * ts_J.stddev )))) || ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.callState == NOTCALLED && (((((FST == FST && 0) || (FST == SND && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.guardState == GUARD_NOTSTARTED && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9)  && ((NONE == NONE && (std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end() || std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), S0) !=shallow_final_choice2B_guard.end())) || (NONE == LEFT && std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end()) || (NONE == RIGHT && std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice2B_guard.autState) !=shallow_final_choice2B_guard.end())))) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.guardState == GUARD_STARTED && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == NONE && (std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end() || std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), S0) !=shallow_final_choice2B_guard.end())) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == LEFT && std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end()) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == RIGHT && std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice2B_guard.autState) !=shallow_final_choice2B_guard.end())))))) || KLEENE_NOTSTARTED == ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.kleeneState) && (FST == FST && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && S0 == S0))) || (FST == FST && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && S0 == S0)))) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.callState == CALLED && (((((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.interruptState == FST && 0) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.interruptState == SND && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.guardState == GUARD_NOTSTARTED && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9)  && ((NONE == NONE && (std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end() || std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), S0) !=shallow_final_choice2B_guard.end())) || (NONE == LEFT && std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end()) || (NONE == RIGHT && std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice2B_guard.autState) !=shallow_final_choice2B_guard.end())))) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.guardState == GUARD_STARTED && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == NONE && (std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end() || std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), S0) !=shallow_final_choice2B_guard.end())) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == LEFT && std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end()) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == RIGHT && std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice2B_guard.autState) !=shallow_final_choice2B_guard.end())))))) || KLEENE_NOTSTARTED == ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.kleeneState) && (FST == FST && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && S0 == S0))) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.interruptState == FST && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_pguardB.ts_C.autState == S0))))))))
				{
					if(((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F2.callState == NOTCALLED && ((S0 == S0 && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F2.ts_E.h <= ts_J.avg - 3 * ts_J.stddev ) || (S0 == S0 && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F2.ts_E.h > ts_J.avg - 3 * ts_J.stddev ))) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F2.callState == CALLED && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F2.ts_E.autState == S0 && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F2.ts_E.h <= ts_J.avg - 3 * ts_J.stddev ) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F2.ts_E.autState == S0 && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F2.ts_E.h > ts_J.avg - 3 * ts_J.stddev )))))
					{
						if((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F2.callState == NOTCALLED && ((S0 == S0 && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F2.ts_E.h <= ts_J.avg - 3 * ts_J.stddev ) || (S0 == S0 && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F2.ts_E.h > ts_J.avg - 3 * ts_J.stddev ))))
						{
							ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F2.callState = CALLED;
							ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F2.ts_E.autState = S0;
							ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F2.ts_E.h.reset_clock();
							if((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F2.ts_E.autState == S0 && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F2.ts_E.h <= ts_J.avg - 3 * ts_J.stddev ))
							{
								Alert(1);ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F2.ts_E.autState = S0;
								exec = 1;
							
							}else if((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F2.ts_E.autState == S0 && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F2.ts_E.h > ts_J.avg - 3 * ts_J.stddev ))
							{
								ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F2.ts_E.h.reset_clock();ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F2.ts_E.autState = S0;
								exec = 1;
							
							}
							ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.left_clock_F2.reset_clock();
						}else if((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F2.callState == CALLED && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F2.ts_E.autState == S0 && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F2.ts_E.h <= ts_J.avg - 3 * ts_J.stddev ) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F2.ts_E.autState == S0 && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F2.ts_E.h > ts_J.avg - 3 * ts_J.stddev ))))
						{
							if((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F2.ts_E.autState == S0 && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F2.ts_E.h <= ts_J.avg - 3 * ts_J.stddev ))
							{
								Alert(1);ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F2.ts_E.autState = S0;
								exec = 1;
							
							}else if((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F2.ts_E.autState == S0 && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F2.ts_E.h > ts_J.avg - 3 * ts_J.stddev ))
							{
								ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F2.ts_E.h.reset_clock();ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F2.ts_E.autState = S0;
								exec = 1;
							
							}
							ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.left_clock_F2.reset_clock();
						}
					
					}
					if(((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.callState == NOTCALLED && (((((FST == FST && 0) || (FST == SND && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.guardState == GUARD_NOTSTARTED && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9)  && ((NONE == NONE && (std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end() || std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), S0) !=shallow_final_choice2B_guard.end())) || (NONE == LEFT && std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end()) || (NONE == RIGHT && std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice2B_guard.autState) !=shallow_final_choice2B_guard.end())))) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.guardState == GUARD_STARTED && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == NONE && (std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end() || std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), S0) !=shallow_final_choice2B_guard.end())) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == LEFT && std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end()) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == RIGHT && std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice2B_guard.autState) !=shallow_final_choice2B_guard.end())))))) || KLEENE_NOTSTARTED == ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.kleeneState) && (FST == FST && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && S0 == S0))) || (FST == FST && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && S0 == S0)))) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.callState == CALLED && (((((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.interruptState == FST && 0) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.interruptState == SND && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.guardState == GUARD_NOTSTARTED && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9)  && ((NONE == NONE && (std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end() || std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), S0) !=shallow_final_choice2B_guard.end())) || (NONE == LEFT && std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end()) || (NONE == RIGHT && std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice2B_guard.autState) !=shallow_final_choice2B_guard.end())))) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.guardState == GUARD_STARTED && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == NONE && (std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end() || std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), S0) !=shallow_final_choice2B_guard.end())) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == LEFT && std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end()) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == RIGHT && std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice2B_guard.autState) !=shallow_final_choice2B_guard.end())))))) || KLEENE_NOTSTARTED == ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.kleeneState) && (FST == FST && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && S0 == S0))) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.interruptState == FST && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_pguardB.ts_C.autState == S0))))))
					{
						if((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.callState == NOTCALLED && (((((FST == FST && 0) || (FST == SND && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.guardState == GUARD_NOTSTARTED && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9)  && ((NONE == NONE && (std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end() || std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), S0) !=shallow_final_choice2B_guard.end())) || (NONE == LEFT && std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end()) || (NONE == RIGHT && std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice2B_guard.autState) !=shallow_final_choice2B_guard.end())))) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.guardState == GUARD_STARTED && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == NONE && (std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end() || std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), S0) !=shallow_final_choice2B_guard.end())) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == LEFT && std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end()) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == RIGHT && std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice2B_guard.autState) !=shallow_final_choice2B_guard.end())))))) || KLEENE_NOTSTARTED == ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.kleeneState) && (FST == FST && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && S0 == S0))) || (FST == FST && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && S0 == S0)))))
						{
							ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.callState = CALLED;
							ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.kleeneState = KLEENE_NOTSTARTED;
							ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.interruptState = FST;
							ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_pguardB.ts_C.autState = S0;
							if(((((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.interruptState == FST && 0) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.interruptState == SND && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.guardState == GUARD_NOTSTARTED && (last_event_time.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9)  && ((NONE == NONE && (std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end() || std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), S0) !=shallow_final_choice2B_guard.end())) || (NONE == LEFT && std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end()) || (NONE == RIGHT && std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice2B_guard.autState) !=shallow_final_choice2B_guard.end())))) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.guardState == GUARD_STARTED && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == NONE && (std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end() || std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), S0) !=shallow_final_choice2B_guard.end())) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == LEFT && std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end()) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == RIGHT && std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice2B_guard.autState) !=shallow_final_choice2B_guard.end())))))) || KLEENE_NOTSTARTED == ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.kleeneState) && (FST == FST && (last_event_time.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && S0 == S0))))
							{
								ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.kleeneState = KLEENE_STARTED;
								ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.interruptState = FST;
								ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_pguardB.ts_C.autState = S0;
								if((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.interruptState == FST && (last_event_time.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_pguardB.ts_C.autState == S0)))
								{
									if((last_event_time.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_pguardB.ts_C.autState == S0))
									{
										if(ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_pguardB.ts_C.autState == S0)
										{
											ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_pguardB.ts_C.autState = S0;
											exec = 1;
										
										}
									
									}
								
								}
							
							}else if((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.interruptState == FST && (last_event_time.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_pguardB.ts_C.autState == S0)))
							{
								ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.kleeneState = KLEENE_STARTED;
								if((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.interruptState == FST && (last_event_time.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_pguardB.ts_C.autState == S0)))
								{
									if((last_event_time.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_pguardB.ts_C.autState == S0))
									{
										if(ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_pguardB.ts_C.autState == S0)
										{
											ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_pguardB.ts_C.autState = S0;
											exec = 1;
										
										}
									
									}
								
								}
							
							}
							ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.right_clock_F1.reset_clock();
						}else if((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.callState == CALLED && (((((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.interruptState == FST && 0) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.interruptState == SND && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.guardState == GUARD_NOTSTARTED && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9)  && ((NONE == NONE && (std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end() || std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), S0) !=shallow_final_choice2B_guard.end())) || (NONE == LEFT && std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end()) || (NONE == RIGHT && std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice2B_guard.autState) !=shallow_final_choice2B_guard.end())))) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.guardState == GUARD_STARTED && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == NONE && (std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end() || std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), S0) !=shallow_final_choice2B_guard.end())) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == LEFT && std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end()) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == RIGHT && std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice2B_guard.autState) !=shallow_final_choice2B_guard.end())))))) || KLEENE_NOTSTARTED == ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.kleeneState) && (FST == FST && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && S0 == S0))) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.interruptState == FST && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_pguardB.ts_C.autState == S0)))))
						{
							if(((((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.interruptState == FST && 0) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.interruptState == SND && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.guardState == GUARD_NOTSTARTED && (last_event_time.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9)  && ((NONE == NONE && (std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end() || std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), S0) !=shallow_final_choice2B_guard.end())) || (NONE == LEFT && std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end()) || (NONE == RIGHT && std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice2B_guard.autState) !=shallow_final_choice2B_guard.end())))) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.guardState == GUARD_STARTED && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == NONE && (std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end() || std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), S0) !=shallow_final_choice2B_guard.end())) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == LEFT && std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end()) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == RIGHT && std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice2B_guard.autState) !=shallow_final_choice2B_guard.end())))))) || KLEENE_NOTSTARTED == ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.kleeneState) && (FST == FST && (last_event_time.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && S0 == S0))))
							{
								ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.kleeneState = KLEENE_STARTED;
								ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.interruptState = FST;
								ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_pguardB.ts_C.autState = S0;
								if((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.interruptState == FST && (last_event_time.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_pguardB.ts_C.autState == S0)))
								{
									if((last_event_time.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_pguardB.ts_C.autState == S0))
									{
										if(ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_pguardB.ts_C.autState == S0)
										{
											ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_pguardB.ts_C.autState = S0;
											exec = 1;
										
										}
									
									}
								
								}
							
							}else if((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.interruptState == FST && (last_event_time.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_pguardB.ts_C.autState == S0)))
							{
								ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.kleeneState = KLEENE_STARTED;
								if((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.interruptState == FST && (last_event_time.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_pguardB.ts_C.autState == S0)))
								{
									if((last_event_time.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_pguardB.ts_C.autState == S0))
									{
										if(ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_pguardB.ts_C.autState == S0)
										{
											ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_pguardB.ts_C.autState = S0;
											exec = 1;
										
										}
									
									}
								
								}
							
							}
							ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.right_clock_F1.reset_clock();
						}
					
					}
				
				}
			
			}
		
		}else if((ts_J.ts_guardJ.guardState == GUARD_STARTED && ((ts_J.ts_guardJ.ts_choiceJ_guard.choiceState == NONE && (S0 == J2 && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.callState == NOTCALLED && (((NOTCALLED == NOTCALLED && ((S0 == S0 && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.ts_E.h <= ts_J.avg - 3 * ts_J.stddev ) || (S0 == S0 && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.ts_E.h > ts_J.avg - 3 * ts_J.stddev ))) || (NOTCALLED == CALLED && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.ts_E.autState == S0 && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.ts_E.h <= ts_J.avg - 3 * ts_J.stddev ) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.ts_E.autState == S0 && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.ts_E.h > ts_J.avg - 3 * ts_J.stddev )))) || ((NOTCALLED == NOTCALLED && (((((FST == FST && 0) || (FST == SND && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.guardState == GUARD_NOTSTARTED && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9)  && ((NONE == NONE && (std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end() || std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), S0) !=shallow_final_choice2B_guard.end())) || (NONE == LEFT && std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end()) || (NONE == RIGHT && std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice2B_guard.autState) !=shallow_final_choice2B_guard.end())))) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.guardState == GUARD_STARTED && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == NONE && (std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end() || std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), S0) !=shallow_final_choice2B_guard.end())) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == LEFT && std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end()) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == RIGHT && std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice2B_guard.autState) !=shallow_final_choice2B_guard.end())))))) || KLEENE_NOTSTARTED == ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.kleeneState) && (FST == FST && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && S0 == S0))) || (FST == FST && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && S0 == S0)))) || (NOTCALLED == CALLED && (((((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.interruptState == FST && 0) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.interruptState == SND && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.guardState == GUARD_NOTSTARTED && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9)  && ((NONE == NONE && (std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end() || std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), S0) !=shallow_final_choice2B_guard.end())) || (NONE == LEFT && std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end()) || (NONE == RIGHT && std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice2B_guard.autState) !=shallow_final_choice2B_guard.end())))) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.guardState == GUARD_STARTED && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == NONE && (std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end() || std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), S0) !=shallow_final_choice2B_guard.end())) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == LEFT && std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end()) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == RIGHT && std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice2B_guard.autState) !=shallow_final_choice2B_guard.end())))))) || KLEENE_NOTSTARTED == ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.kleeneState) && (FST == FST && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && S0 == S0))) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.interruptState == FST && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_pguardB.ts_C.autState == S0))))))) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.callState == CALLED && (((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.callState == NOTCALLED && ((S0 == S0 && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.ts_E.h <= ts_J.avg - 3 * ts_J.stddev ) || (S0 == S0 && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.ts_E.h > ts_J.avg - 3 * ts_J.stddev ))) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.callState == CALLED && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.ts_E.autState == S0 && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.ts_E.h <= ts_J.avg - 3 * ts_J.stddev ) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.ts_E.autState == S0 && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.ts_E.h > ts_J.avg - 3 * ts_J.stddev )))) || ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.callState == NOTCALLED && (((((FST == FST && 0) || (FST == SND && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.guardState == GUARD_NOTSTARTED && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9)  && ((NONE == NONE && (std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end() || std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), S0) !=shallow_final_choice2B_guard.end())) || (NONE == LEFT && std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end()) || (NONE == RIGHT && std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice2B_guard.autState) !=shallow_final_choice2B_guard.end())))) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.guardState == GUARD_STARTED && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == NONE && (std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end() || std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), S0) !=shallow_final_choice2B_guard.end())) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == LEFT && std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end()) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == RIGHT && std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice2B_guard.autState) !=shallow_final_choice2B_guard.end())))))) || KLEENE_NOTSTARTED == ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.kleeneState) && (FST == FST && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && S0 == S0))) || (FST == FST && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && S0 == S0)))) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.callState == CALLED && (((((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.interruptState == FST && 0) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.interruptState == SND && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.guardState == GUARD_NOTSTARTED && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9)  && ((NONE == NONE && (std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end() || std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), S0) !=shallow_final_choice2B_guard.end())) || (NONE == LEFT && std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end()) || (NONE == RIGHT && std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice2B_guard.autState) !=shallow_final_choice2B_guard.end())))) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.guardState == GUARD_STARTED && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == NONE && (std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end() || std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), S0) !=shallow_final_choice2B_guard.end())) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == LEFT && std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end()) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == RIGHT && std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice2B_guard.autState) !=shallow_final_choice2B_guard.end())))))) || KLEENE_NOTSTARTED == ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.kleeneState) && (FST == FST && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && S0 == S0))) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.interruptState == FST && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_pguardB.ts_C.autState == S0)))))))))) || (ts_J.ts_guardJ.ts_choiceJ_guard.choiceState == LEFT && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.autState == J2 && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.callState == NOTCALLED && (((NOTCALLED == NOTCALLED && ((S0 == S0 && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.ts_E.h <= ts_J.avg - 3 * ts_J.stddev ) || (S0 == S0 && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.ts_E.h > ts_J.avg - 3 * ts_J.stddev ))) || (NOTCALLED == CALLED && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.ts_E.autState == S0 && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.ts_E.h <= ts_J.avg - 3 * ts_J.stddev ) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.ts_E.autState == S0 && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.ts_E.h > ts_J.avg - 3 * ts_J.stddev )))) || ((NOTCALLED == NOTCALLED && (((((FST == FST && 0) || (FST == SND && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.guardState == GUARD_NOTSTARTED && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9)  && ((NONE == NONE && (std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end() || std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), S0) !=shallow_final_choice2B_guard.end())) || (NONE == LEFT && std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end()) || (NONE == RIGHT && std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice2B_guard.autState) !=shallow_final_choice2B_guard.end())))) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.guardState == GUARD_STARTED && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == NONE && (std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end() || std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), S0) !=shallow_final_choice2B_guard.end())) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == LEFT && std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end()) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == RIGHT && std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice2B_guard.autState) !=shallow_final_choice2B_guard.end())))))) || KLEENE_NOTSTARTED == ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.kleeneState) && (FST == FST && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && S0 == S0))) || (FST == FST && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && S0 == S0)))) || (NOTCALLED == CALLED && (((((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.interruptState == FST && 0) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.interruptState == SND && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.guardState == GUARD_NOTSTARTED && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9)  && ((NONE == NONE && (std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end() || std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), S0) !=shallow_final_choice2B_guard.end())) || (NONE == LEFT && std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end()) || (NONE == RIGHT && std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice2B_guard.autState) !=shallow_final_choice2B_guard.end())))) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.guardState == GUARD_STARTED && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == NONE && (std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end() || std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), S0) !=shallow_final_choice2B_guard.end())) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == LEFT && std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end()) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == RIGHT && std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice2B_guard.autState) !=shallow_final_choice2B_guard.end())))))) || KLEENE_NOTSTARTED == ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.kleeneState) && (FST == FST && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && S0 == S0))) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.interruptState == FST && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_pguardB.ts_C.autState == S0))))))) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.callState == CALLED && (((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.callState == NOTCALLED && ((S0 == S0 && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.ts_E.h <= ts_J.avg - 3 * ts_J.stddev ) || (S0 == S0 && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.ts_E.h > ts_J.avg - 3 * ts_J.stddev ))) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.callState == CALLED && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.ts_E.autState == S0 && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.ts_E.h <= ts_J.avg - 3 * ts_J.stddev ) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.ts_E.autState == S0 && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.ts_E.h > ts_J.avg - 3 * ts_J.stddev )))) || ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.callState == NOTCALLED && (((((FST == FST && 0) || (FST == SND && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.guardState == GUARD_NOTSTARTED && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9)  && ((NONE == NONE && (std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end() || std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), S0) !=shallow_final_choice2B_guard.end())) || (NONE == LEFT && std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end()) || (NONE == RIGHT && std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice2B_guard.autState) !=shallow_final_choice2B_guard.end())))) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.guardState == GUARD_STARTED && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == NONE && (std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end() || std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), S0) !=shallow_final_choice2B_guard.end())) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == LEFT && std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end()) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == RIGHT && std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice2B_guard.autState) !=shallow_final_choice2B_guard.end())))))) || KLEENE_NOTSTARTED == ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.kleeneState) && (FST == FST && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && S0 == S0))) || (FST == FST && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && S0 == S0)))) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.callState == CALLED && (((((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.interruptState == FST && 0) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.interruptState == SND && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.guardState == GUARD_NOTSTARTED && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9)  && ((NONE == NONE && (std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end() || std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), S0) !=shallow_final_choice2B_guard.end())) || (NONE == LEFT && std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end()) || (NONE == RIGHT && std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice2B_guard.autState) !=shallow_final_choice2B_guard.end())))) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.guardState == GUARD_STARTED && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == NONE && (std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end() || std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), S0) !=shallow_final_choice2B_guard.end())) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == LEFT && std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end()) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == RIGHT && std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice2B_guard.autState) !=shallow_final_choice2B_guard.end())))))) || KLEENE_NOTSTARTED == ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.kleeneState) && (FST == FST && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && S0 == S0))) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.interruptState == FST && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_pguardB.ts_C.autState == S0)))))))))) || (ts_J.ts_guardJ.ts_choiceJ_guard.choiceState == NONE && ((NOTCALLED == NOTCALLED && (((NOTCALLED == NOTCALLED && ((S0 == S0 && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F2.ts_E.h <= ts_J.avg - 3 * ts_J.stddev ) || (S0 == S0 && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F2.ts_E.h > ts_J.avg - 3 * ts_J.stddev ))) || (NOTCALLED == CALLED && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F2.ts_E.autState == S0 && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F2.ts_E.h <= ts_J.avg - 3 * ts_J.stddev ) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F2.ts_E.autState == S0 && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F2.ts_E.h > ts_J.avg - 3 * ts_J.stddev )))) || ((NOTCALLED == NOTCALLED && (((((FST == FST && 0) || (FST == SND && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.guardState == GUARD_NOTSTARTED && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9)  && ((NONE == NONE && (std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end() || std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), S0) !=shallow_final_choice2B_guard.end())) || (NONE == LEFT && std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end()) || (NONE == RIGHT && std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice2B_guard.autState) !=shallow_final_choice2B_guard.end())))) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.guardState == GUARD_STARTED && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == NONE && (std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end() || std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), S0) !=shallow_final_choice2B_guard.end())) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == LEFT && std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end()) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == RIGHT && std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice2B_guard.autState) !=shallow_final_choice2B_guard.end())))))) || KLEENE_NOTSTARTED == ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.kleeneState) && (FST == FST && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && S0 == S0))) || (FST == FST && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && S0 == S0)))) || (NOTCALLED == CALLED && (((((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.interruptState == FST && 0) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.interruptState == SND && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.guardState == GUARD_NOTSTARTED && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9)  && ((NONE == NONE && (std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end() || std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), S0) !=shallow_final_choice2B_guard.end())) || (NONE == LEFT && std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end()) || (NONE == RIGHT && std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice2B_guard.autState) !=shallow_final_choice2B_guard.end())))) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.guardState == GUARD_STARTED && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == NONE && (std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end() || std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), S0) !=shallow_final_choice2B_guard.end())) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == LEFT && std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end()) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == RIGHT && std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice2B_guard.autState) !=shallow_final_choice2B_guard.end())))))) || KLEENE_NOTSTARTED == ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.kleeneState) && (FST == FST && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && S0 == S0))) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.interruptState == FST && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_pguardB.ts_C.autState == S0))))))) || (NOTCALLED == CALLED && (((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F2.callState == NOTCALLED && ((S0 == S0 && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F2.ts_E.h <= ts_J.avg - 3 * ts_J.stddev ) || (S0 == S0 && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F2.ts_E.h > ts_J.avg - 3 * ts_J.stddev ))) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F2.callState == CALLED && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F2.ts_E.autState == S0 && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F2.ts_E.h <= ts_J.avg - 3 * ts_J.stddev ) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F2.ts_E.autState == S0 && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F2.ts_E.h > ts_J.avg - 3 * ts_J.stddev )))) || ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.callState == NOTCALLED && (((((FST == FST && 0) || (FST == SND && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.guardState == GUARD_NOTSTARTED && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9)  && ((NONE == NONE && (std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end() || std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), S0) !=shallow_final_choice2B_guard.end())) || (NONE == LEFT && std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end()) || (NONE == RIGHT && std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice2B_guard.autState) !=shallow_final_choice2B_guard.end())))) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.guardState == GUARD_STARTED && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == NONE && (std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end() || std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), S0) !=shallow_final_choice2B_guard.end())) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == LEFT && std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end()) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == RIGHT && std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice2B_guard.autState) !=shallow_final_choice2B_guard.end())))))) || KLEENE_NOTSTARTED == ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.kleeneState) && (FST == FST && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && S0 == S0))) || (FST == FST && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && S0 == S0)))) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.callState == CALLED && (((((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.interruptState == FST && 0) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.interruptState == SND && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.guardState == GUARD_NOTSTARTED && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9)  && ((NONE == NONE && (std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end() || std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), S0) !=shallow_final_choice2B_guard.end())) || (NONE == LEFT && std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end()) || (NONE == RIGHT && std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice2B_guard.autState) !=shallow_final_choice2B_guard.end())))) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.guardState == GUARD_STARTED && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == NONE && (std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end() || std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), S0) !=shallow_final_choice2B_guard.end())) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == LEFT && std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end()) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == RIGHT && std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice2B_guard.autState) !=shallow_final_choice2B_guard.end())))))) || KLEENE_NOTSTARTED == ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.kleeneState) && (FST == FST && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && S0 == S0))) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.interruptState == FST && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_pguardB.ts_C.autState == S0))))))))) || (ts_J.ts_guardJ.ts_choiceJ_guard.choiceState == RIGHT && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.callState == NOTCALLED && (((NOTCALLED == NOTCALLED && ((S0 == S0 && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F2.ts_E.h <= ts_J.avg - 3 * ts_J.stddev ) || (S0 == S0 && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F2.ts_E.h > ts_J.avg - 3 * ts_J.stddev ))) || (NOTCALLED == CALLED && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F2.ts_E.autState == S0 && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F2.ts_E.h <= ts_J.avg - 3 * ts_J.stddev ) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F2.ts_E.autState == S0 && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F2.ts_E.h > ts_J.avg - 3 * ts_J.stddev )))) || ((NOTCALLED == NOTCALLED && (((((FST == FST && 0) || (FST == SND && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.guardState == GUARD_NOTSTARTED && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9)  && ((NONE == NONE && (std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end() || std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), S0) !=shallow_final_choice2B_guard.end())) || (NONE == LEFT && std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end()) || (NONE == RIGHT && std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice2B_guard.autState) !=shallow_final_choice2B_guard.end())))) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.guardState == GUARD_STARTED && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == NONE && (std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end() || std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), S0) !=shallow_final_choice2B_guard.end())) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == LEFT && std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end()) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == RIGHT && std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice2B_guard.autState) !=shallow_final_choice2B_guard.end())))))) || KLEENE_NOTSTARTED == ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.kleeneState) && (FST == FST && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && S0 == S0))) || (FST == FST && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && S0 == S0)))) || (NOTCALLED == CALLED && (((((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.interruptState == FST && 0) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.interruptState == SND && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.guardState == GUARD_NOTSTARTED && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9)  && ((NONE == NONE && (std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end() || std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), S0) !=shallow_final_choice2B_guard.end())) || (NONE == LEFT && std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end()) || (NONE == RIGHT && std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice2B_guard.autState) !=shallow_final_choice2B_guard.end())))) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.guardState == GUARD_STARTED && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == NONE && (std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end() || std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), S0) !=shallow_final_choice2B_guard.end())) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == LEFT && std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end()) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == RIGHT && std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice2B_guard.autState) !=shallow_final_choice2B_guard.end())))))) || KLEENE_NOTSTARTED == ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.kleeneState) && (FST == FST && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && S0 == S0))) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.interruptState == FST && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_pguardB.ts_C.autState == S0))))))) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.callState == CALLED && (((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F2.callState == NOTCALLED && ((S0 == S0 && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F2.ts_E.h <= ts_J.avg - 3 * ts_J.stddev ) || (S0 == S0 && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F2.ts_E.h > ts_J.avg - 3 * ts_J.stddev ))) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F2.callState == CALLED && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F2.ts_E.autState == S0 && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F2.ts_E.h <= ts_J.avg - 3 * ts_J.stddev ) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F2.ts_E.autState == S0 && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F2.ts_E.h > ts_J.avg - 3 * ts_J.stddev )))) || ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.callState == NOTCALLED && (((((FST == FST && 0) || (FST == SND && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.guardState == GUARD_NOTSTARTED && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9)  && ((NONE == NONE && (std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end() || std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), S0) !=shallow_final_choice2B_guard.end())) || (NONE == LEFT && std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end()) || (NONE == RIGHT && std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice2B_guard.autState) !=shallow_final_choice2B_guard.end())))) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.guardState == GUARD_STARTED && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == NONE && (std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end() || std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), S0) !=shallow_final_choice2B_guard.end())) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == LEFT && std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end()) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == RIGHT && std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice2B_guard.autState) !=shallow_final_choice2B_guard.end())))))) || KLEENE_NOTSTARTED == ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.kleeneState) && (FST == FST && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && S0 == S0))) || (FST == FST && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && S0 == S0)))) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.callState == CALLED && (((((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.interruptState == FST && 0) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.interruptState == SND && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.guardState == GUARD_NOTSTARTED && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9)  && ((NONE == NONE && (std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end() || std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), S0) !=shallow_final_choice2B_guard.end())) || (NONE == LEFT && std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end()) || (NONE == RIGHT && std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice2B_guard.autState) !=shallow_final_choice2B_guard.end())))) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.guardState == GUARD_STARTED && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == NONE && (std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end() || std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), S0) !=shallow_final_choice2B_guard.end())) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == LEFT && std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end()) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == RIGHT && std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice2B_guard.autState) !=shallow_final_choice2B_guard.end())))))) || KLEENE_NOTSTARTED == ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.kleeneState) && (FST == FST && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && S0 == S0))) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.interruptState == FST && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_pguardB.ts_C.autState == S0))))))))))))
		{
			if((ts_J.ts_guardJ.ts_choiceJ_guard.choiceState == NONE && (S0 == J2 && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.callState == NOTCALLED && (((NOTCALLED == NOTCALLED && ((S0 == S0 && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.ts_E.h <= ts_J.avg - 3 * ts_J.stddev ) || (S0 == S0 && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.ts_E.h > ts_J.avg - 3 * ts_J.stddev ))) || (NOTCALLED == CALLED && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.ts_E.autState == S0 && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.ts_E.h <= ts_J.avg - 3 * ts_J.stddev ) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.ts_E.autState == S0 && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.ts_E.h > ts_J.avg - 3 * ts_J.stddev )))) || ((NOTCALLED == NOTCALLED && (((((FST == FST && 0) || (FST == SND && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.guardState == GUARD_NOTSTARTED && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9)  && ((NONE == NONE && (std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end() || std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), S0) !=shallow_final_choice2B_guard.end())) || (NONE == LEFT && std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end()) || (NONE == RIGHT && std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice2B_guard.autState) !=shallow_final_choice2B_guard.end())))) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.guardState == GUARD_STARTED && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == NONE && (std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end() || std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), S0) !=shallow_final_choice2B_guard.end())) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == LEFT && std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end()) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == RIGHT && std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice2B_guard.autState) !=shallow_final_choice2B_guard.end())))))) || KLEENE_NOTSTARTED == ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.kleeneState) && (FST == FST && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && S0 == S0))) || (FST == FST && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && S0 == S0)))) || (NOTCALLED == CALLED && (((((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.interruptState == FST && 0) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.interruptState == SND && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.guardState == GUARD_NOTSTARTED && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9)  && ((NONE == NONE && (std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end() || std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), S0) !=shallow_final_choice2B_guard.end())) || (NONE == LEFT && std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end()) || (NONE == RIGHT && std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice2B_guard.autState) !=shallow_final_choice2B_guard.end())))) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.guardState == GUARD_STARTED && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == NONE && (std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end() || std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), S0) !=shallow_final_choice2B_guard.end())) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == LEFT && std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end()) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == RIGHT && std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice2B_guard.autState) !=shallow_final_choice2B_guard.end())))))) || KLEENE_NOTSTARTED == ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.kleeneState) && (FST == FST && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && S0 == S0))) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.interruptState == FST && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_pguardB.ts_C.autState == S0))))))) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.callState == CALLED && (((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.callState == NOTCALLED && ((S0 == S0 && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.ts_E.h <= ts_J.avg - 3 * ts_J.stddev ) || (S0 == S0 && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.ts_E.h > ts_J.avg - 3 * ts_J.stddev ))) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.callState == CALLED && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.ts_E.autState == S0 && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.ts_E.h <= ts_J.avg - 3 * ts_J.stddev ) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.ts_E.autState == S0 && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.ts_E.h > ts_J.avg - 3 * ts_J.stddev )))) || ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.callState == NOTCALLED && (((((FST == FST && 0) || (FST == SND && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.guardState == GUARD_NOTSTARTED && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9)  && ((NONE == NONE && (std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end() || std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), S0) !=shallow_final_choice2B_guard.end())) || (NONE == LEFT && std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end()) || (NONE == RIGHT && std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice2B_guard.autState) !=shallow_final_choice2B_guard.end())))) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.guardState == GUARD_STARTED && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == NONE && (std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end() || std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), S0) !=shallow_final_choice2B_guard.end())) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == LEFT && std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end()) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == RIGHT && std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice2B_guard.autState) !=shallow_final_choice2B_guard.end())))))) || KLEENE_NOTSTARTED == ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.kleeneState) && (FST == FST && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && S0 == S0))) || (FST == FST && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && S0 == S0)))) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.callState == CALLED && (((((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.interruptState == FST && 0) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.interruptState == SND && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.guardState == GUARD_NOTSTARTED && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9)  && ((NONE == NONE && (std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end() || std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), S0) !=shallow_final_choice2B_guard.end())) || (NONE == LEFT && std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end()) || (NONE == RIGHT && std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice2B_guard.autState) !=shallow_final_choice2B_guard.end())))) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.guardState == GUARD_STARTED && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == NONE && (std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end() || std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), S0) !=shallow_final_choice2B_guard.end())) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == LEFT && std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end()) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == RIGHT && std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice2B_guard.autState) !=shallow_final_choice2B_guard.end())))))) || KLEENE_NOTSTARTED == ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.kleeneState) && (FST == FST && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && S0 == S0))) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.interruptState == FST && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_pguardB.ts_C.autState == S0)))))))))))
			{
				ts_J.ts_guardJ.ts_choiceJ_guard.choiceState = LEFT;
				ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.autState = S0;
				if((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.autState == J2 && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.callState == NOTCALLED && (((NOTCALLED == NOTCALLED && ((S0 == S0 && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.ts_E.h <= ts_J.avg - 3 * ts_J.stddev ) || (S0 == S0 && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.ts_E.h > ts_J.avg - 3 * ts_J.stddev ))) || (NOTCALLED == CALLED && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.ts_E.autState == S0 && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.ts_E.h <= ts_J.avg - 3 * ts_J.stddev ) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.ts_E.autState == S0 && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.ts_E.h > ts_J.avg - 3 * ts_J.stddev )))) || ((NOTCALLED == NOTCALLED && (((((FST == FST && 0) || (FST == SND && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.guardState == GUARD_NOTSTARTED && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9)  && ((NONE == NONE && (std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end() || std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), S0) !=shallow_final_choice2B_guard.end())) || (NONE == LEFT && std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end()) || (NONE == RIGHT && std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice2B_guard.autState) !=shallow_final_choice2B_guard.end())))) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.guardState == GUARD_STARTED && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == NONE && (std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end() || std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), S0) !=shallow_final_choice2B_guard.end())) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == LEFT && std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end()) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == RIGHT && std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice2B_guard.autState) !=shallow_final_choice2B_guard.end())))))) || KLEENE_NOTSTARTED == ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.kleeneState) && (FST == FST && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && S0 == S0))) || (FST == FST && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && S0 == S0)))) || (NOTCALLED == CALLED && (((((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.interruptState == FST && 0) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.interruptState == SND && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.guardState == GUARD_NOTSTARTED && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9)  && ((NONE == NONE && (std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end() || std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), S0) !=shallow_final_choice2B_guard.end())) || (NONE == LEFT && std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end()) || (NONE == RIGHT && std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice2B_guard.autState) !=shallow_final_choice2B_guard.end())))) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.guardState == GUARD_STARTED && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == NONE && (std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end() || std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), S0) !=shallow_final_choice2B_guard.end())) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == LEFT && std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end()) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == RIGHT && std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice2B_guard.autState) !=shallow_final_choice2B_guard.end())))))) || KLEENE_NOTSTARTED == ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.kleeneState) && (FST == FST && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && S0 == S0))) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.interruptState == FST && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_pguardB.ts_C.autState == S0))))))) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.callState == CALLED && (((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.callState == NOTCALLED && ((S0 == S0 && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.ts_E.h <= ts_J.avg - 3 * ts_J.stddev ) || (S0 == S0 && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.ts_E.h > ts_J.avg - 3 * ts_J.stddev ))) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.callState == CALLED && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.ts_E.autState == S0 && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.ts_E.h <= ts_J.avg - 3 * ts_J.stddev ) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.ts_E.autState == S0 && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.ts_E.h > ts_J.avg - 3 * ts_J.stddev )))) || ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.callState == NOTCALLED && (((((FST == FST && 0) || (FST == SND && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.guardState == GUARD_NOTSTARTED && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9)  && ((NONE == NONE && (std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end() || std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), S0) !=shallow_final_choice2B_guard.end())) || (NONE == LEFT && std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end()) || (NONE == RIGHT && std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice2B_guard.autState) !=shallow_final_choice2B_guard.end())))) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.guardState == GUARD_STARTED && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == NONE && (std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end() || std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), S0) !=shallow_final_choice2B_guard.end())) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == LEFT && std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end()) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == RIGHT && std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice2B_guard.autState) !=shallow_final_choice2B_guard.end())))))) || KLEENE_NOTSTARTED == ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.kleeneState) && (FST == FST && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && S0 == S0))) || (FST == FST && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && S0 == S0)))) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.callState == CALLED && (((((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.interruptState == FST && 0) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.interruptState == SND && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.guardState == GUARD_NOTSTARTED && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9)  && ((NONE == NONE && (std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end() || std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), S0) !=shallow_final_choice2B_guard.end())) || (NONE == LEFT && std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end()) || (NONE == RIGHT && std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice2B_guard.autState) !=shallow_final_choice2B_guard.end())))) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.guardState == GUARD_STARTED && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == NONE && (std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end() || std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), S0) !=shallow_final_choice2B_guard.end())) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == LEFT && std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end()) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == RIGHT && std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice2B_guard.autState) !=shallow_final_choice2B_guard.end())))))) || KLEENE_NOTSTARTED == ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.kleeneState) && (FST == FST && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && S0 == S0))) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.interruptState == FST && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_pguardB.ts_C.autState == S0))))))))))
				{
					if((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.callState == NOTCALLED && (((NOTCALLED == NOTCALLED && ((S0 == S0 && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.ts_E.h <= ts_J.avg - 3 * ts_J.stddev ) || (S0 == S0 && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.ts_E.h > ts_J.avg - 3 * ts_J.stddev ))) || (NOTCALLED == CALLED && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.ts_E.autState == S0 && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.ts_E.h <= ts_J.avg - 3 * ts_J.stddev ) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.ts_E.autState == S0 && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.ts_E.h > ts_J.avg - 3 * ts_J.stddev )))) || ((NOTCALLED == NOTCALLED && (((((FST == FST && 0) || (FST == SND && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.guardState == GUARD_NOTSTARTED && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9)  && ((NONE == NONE && (std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end() || std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), S0) !=shallow_final_choice2B_guard.end())) || (NONE == LEFT && std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end()) || (NONE == RIGHT && std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice2B_guard.autState) !=shallow_final_choice2B_guard.end())))) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.guardState == GUARD_STARTED && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == NONE && (std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end() || std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), S0) !=shallow_final_choice2B_guard.end())) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == LEFT && std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end()) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == RIGHT && std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice2B_guard.autState) !=shallow_final_choice2B_guard.end())))))) || KLEENE_NOTSTARTED == ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.kleeneState) && (FST == FST && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && S0 == S0))) || (FST == FST && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && S0 == S0)))) || (NOTCALLED == CALLED && (((((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.interruptState == FST && 0) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.interruptState == SND && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.guardState == GUARD_NOTSTARTED && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9)  && ((NONE == NONE && (std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end() || std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), S0) !=shallow_final_choice2B_guard.end())) || (NONE == LEFT && std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end()) || (NONE == RIGHT && std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice2B_guard.autState) !=shallow_final_choice2B_guard.end())))) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.guardState == GUARD_STARTED && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == NONE && (std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end() || std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), S0) !=shallow_final_choice2B_guard.end())) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == LEFT && std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end()) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == RIGHT && std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice2B_guard.autState) !=shallow_final_choice2B_guard.end())))))) || KLEENE_NOTSTARTED == ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.kleeneState) && (FST == FST && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && S0 == S0))) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.interruptState == FST && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_pguardB.ts_C.autState == S0))))))))
					{
						ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.callState = CALLED;
						ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.right_clock_F1.reset_clock();
						ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.left_clock_F2.reset_clock();
						ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.callState = NOTCALLED;
						ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.callState = NOTCALLED;
						if(((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.callState == NOTCALLED && ((S0 == S0 && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.ts_E.h <= ts_J.avg - 3 * ts_J.stddev ) || (S0 == S0 && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.ts_E.h > ts_J.avg - 3 * ts_J.stddev ))) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.callState == CALLED && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.ts_E.autState == S0 && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.ts_E.h <= ts_J.avg - 3 * ts_J.stddev ) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.ts_E.autState == S0 && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.ts_E.h > ts_J.avg - 3 * ts_J.stddev )))))
						{
							if((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.callState == NOTCALLED && ((S0 == S0 && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.ts_E.h <= ts_J.avg - 3 * ts_J.stddev ) || (S0 == S0 && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.ts_E.h > ts_J.avg - 3 * ts_J.stddev ))))
							{
								ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.callState = CALLED;
								ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.ts_E.autState = S0;
								ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.ts_E.h.reset_clock();
								if((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.ts_E.autState == S0 && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.ts_E.h <= ts_J.avg - 3 * ts_J.stddev ))
								{
									Alert(1);ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.ts_E.autState = S0;
									exec = 1;
								
								}else if((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.ts_E.autState == S0 && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.ts_E.h > ts_J.avg - 3 * ts_J.stddev ))
								{
									ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.ts_E.h.reset_clock();ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.ts_E.autState = S0;
									exec = 1;
								
								}
								ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.left_clock_F2.reset_clock();
							}else if((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.callState == CALLED && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.ts_E.autState == S0 && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.ts_E.h <= ts_J.avg - 3 * ts_J.stddev ) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.ts_E.autState == S0 && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.ts_E.h > ts_J.avg - 3 * ts_J.stddev ))))
							{
								if((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.ts_E.autState == S0 && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.ts_E.h <= ts_J.avg - 3 * ts_J.stddev ))
								{
									Alert(1);ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.ts_E.autState = S0;
									exec = 1;
								
								}else if((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.ts_E.autState == S0 && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.ts_E.h > ts_J.avg - 3 * ts_J.stddev ))
								{
									ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.ts_E.h.reset_clock();ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.ts_E.autState = S0;
									exec = 1;
								
								}
								ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.left_clock_F2.reset_clock();
							}
						
						}
						if(((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.callState == NOTCALLED && (((((FST == FST && 0) || (FST == SND && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.guardState == GUARD_NOTSTARTED && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9)  && ((NONE == NONE && (std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end() || std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), S0) !=shallow_final_choice2B_guard.end())) || (NONE == LEFT && std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end()) || (NONE == RIGHT && std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice2B_guard.autState) !=shallow_final_choice2B_guard.end())))) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.guardState == GUARD_STARTED && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == NONE && (std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end() || std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), S0) !=shallow_final_choice2B_guard.end())) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == LEFT && std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end()) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == RIGHT && std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice2B_guard.autState) !=shallow_final_choice2B_guard.end())))))) || KLEENE_NOTSTARTED == ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.kleeneState) && (FST == FST && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && S0 == S0))) || (FST == FST && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && S0 == S0)))) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.callState == CALLED && (((((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.interruptState == FST && 0) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.interruptState == SND && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.guardState == GUARD_NOTSTARTED && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9)  && ((NONE == NONE && (std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end() || std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), S0) !=shallow_final_choice2B_guard.end())) || (NONE == LEFT && std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end()) || (NONE == RIGHT && std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice2B_guard.autState) !=shallow_final_choice2B_guard.end())))) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.guardState == GUARD_STARTED && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == NONE && (std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end() || std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), S0) !=shallow_final_choice2B_guard.end())) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == LEFT && std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end()) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == RIGHT && std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice2B_guard.autState) !=shallow_final_choice2B_guard.end())))))) || KLEENE_NOTSTARTED == ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.kleeneState) && (FST == FST && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && S0 == S0))) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.interruptState == FST && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_pguardB.ts_C.autState == S0))))))
						{
							if((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.callState == NOTCALLED && (((((FST == FST && 0) || (FST == SND && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.guardState == GUARD_NOTSTARTED && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9)  && ((NONE == NONE && (std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end() || std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), S0) !=shallow_final_choice2B_guard.end())) || (NONE == LEFT && std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end()) || (NONE == RIGHT && std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice2B_guard.autState) !=shallow_final_choice2B_guard.end())))) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.guardState == GUARD_STARTED && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == NONE && (std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end() || std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), S0) !=shallow_final_choice2B_guard.end())) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == LEFT && std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end()) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == RIGHT && std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice2B_guard.autState) !=shallow_final_choice2B_guard.end())))))) || KLEENE_NOTSTARTED == ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.kleeneState) && (FST == FST && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && S0 == S0))) || (FST == FST && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && S0 == S0)))))
							{
								ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.callState = CALLED;
								ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.kleeneState = KLEENE_NOTSTARTED;
								ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.interruptState = FST;
								ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_pguardB.ts_C.autState = S0;
								if(((((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.interruptState == FST && 0) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.interruptState == SND && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.guardState == GUARD_NOTSTARTED && (last_event_time.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9)  && ((NONE == NONE && (std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end() || std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), S0) !=shallow_final_choice2B_guard.end())) || (NONE == LEFT && std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end()) || (NONE == RIGHT && std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice2B_guard.autState) !=shallow_final_choice2B_guard.end())))) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.guardState == GUARD_STARTED && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == NONE && (std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end() || std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), S0) !=shallow_final_choice2B_guard.end())) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == LEFT && std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end()) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == RIGHT && std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice2B_guard.autState) !=shallow_final_choice2B_guard.end())))))) || KLEENE_NOTSTARTED == ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.kleeneState) && (FST == FST && (last_event_time.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && S0 == S0))))
								{
									ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.kleeneState = KLEENE_STARTED;
									ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.interruptState = FST;
									ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_pguardB.ts_C.autState = S0;
									if((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.interruptState == FST && (last_event_time.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_pguardB.ts_C.autState == S0)))
									{
										if((last_event_time.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_pguardB.ts_C.autState == S0))
										{
											if(ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_pguardB.ts_C.autState == S0)
											{
												ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_pguardB.ts_C.autState = S0;
												exec = 1;
											
											}
										
										}
									
									}
								
								}else if((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.interruptState == FST && (last_event_time.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_pguardB.ts_C.autState == S0)))
								{
									ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.kleeneState = KLEENE_STARTED;
									if((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.interruptState == FST && (last_event_time.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_pguardB.ts_C.autState == S0)))
									{
										if((last_event_time.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_pguardB.ts_C.autState == S0))
										{
											if(ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_pguardB.ts_C.autState == S0)
											{
												ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_pguardB.ts_C.autState = S0;
												exec = 1;
											
											}
										
										}
									
									}
								
								}
								ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.right_clock_F1.reset_clock();
							}else if((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.callState == CALLED && (((((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.interruptState == FST && 0) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.interruptState == SND && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.guardState == GUARD_NOTSTARTED && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9)  && ((NONE == NONE && (std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end() || std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), S0) !=shallow_final_choice2B_guard.end())) || (NONE == LEFT && std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end()) || (NONE == RIGHT && std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice2B_guard.autState) !=shallow_final_choice2B_guard.end())))) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.guardState == GUARD_STARTED && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == NONE && (std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end() || std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), S0) !=shallow_final_choice2B_guard.end())) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == LEFT && std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end()) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == RIGHT && std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice2B_guard.autState) !=shallow_final_choice2B_guard.end())))))) || KLEENE_NOTSTARTED == ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.kleeneState) && (FST == FST && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && S0 == S0))) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.interruptState == FST && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_pguardB.ts_C.autState == S0)))))
							{
								if(((((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.interruptState == FST && 0) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.interruptState == SND && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.guardState == GUARD_NOTSTARTED && (last_event_time.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9)  && ((NONE == NONE && (std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end() || std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), S0) !=shallow_final_choice2B_guard.end())) || (NONE == LEFT && std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end()) || (NONE == RIGHT && std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice2B_guard.autState) !=shallow_final_choice2B_guard.end())))) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.guardState == GUARD_STARTED && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == NONE && (std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end() || std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), S0) !=shallow_final_choice2B_guard.end())) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == LEFT && std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end()) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == RIGHT && std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice2B_guard.autState) !=shallow_final_choice2B_guard.end())))))) || KLEENE_NOTSTARTED == ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.kleeneState) && (FST == FST && (last_event_time.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && S0 == S0))))
								{
									ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.kleeneState = KLEENE_STARTED;
									ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.interruptState = FST;
									ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_pguardB.ts_C.autState = S0;
									if((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.interruptState == FST && (last_event_time.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_pguardB.ts_C.autState == S0)))
									{
										if((last_event_time.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_pguardB.ts_C.autState == S0))
										{
											if(ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_pguardB.ts_C.autState == S0)
											{
												ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_pguardB.ts_C.autState = S0;
												exec = 1;
											
											}
										
										}
									
									}
								
								}else if((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.interruptState == FST && (last_event_time.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_pguardB.ts_C.autState == S0)))
								{
									ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.kleeneState = KLEENE_STARTED;
									if((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.interruptState == FST && (last_event_time.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_pguardB.ts_C.autState == S0)))
									{
										if((last_event_time.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_pguardB.ts_C.autState == S0))
										{
											if(ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_pguardB.ts_C.autState == S0)
											{
												ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_pguardB.ts_C.autState = S0;
												exec = 1;
											
											}
										
										}
									
									}
								
								}
								ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.right_clock_F1.reset_clock();
							}
						
						}
					
					}else if((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.callState == CALLED && (((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.callState == NOTCALLED && ((S0 == S0 && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.ts_E.h <= ts_J.avg - 3 * ts_J.stddev ) || (S0 == S0 && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.ts_E.h > ts_J.avg - 3 * ts_J.stddev ))) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.callState == CALLED && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.ts_E.autState == S0 && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.ts_E.h <= ts_J.avg - 3 * ts_J.stddev ) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.ts_E.autState == S0 && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.ts_E.h > ts_J.avg - 3 * ts_J.stddev )))) || ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.callState == NOTCALLED && (((((FST == FST && 0) || (FST == SND && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.guardState == GUARD_NOTSTARTED && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9)  && ((NONE == NONE && (std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end() || std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), S0) !=shallow_final_choice2B_guard.end())) || (NONE == LEFT && std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end()) || (NONE == RIGHT && std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice2B_guard.autState) !=shallow_final_choice2B_guard.end())))) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.guardState == GUARD_STARTED && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == NONE && (std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end() || std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), S0) !=shallow_final_choice2B_guard.end())) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == LEFT && std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end()) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == RIGHT && std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice2B_guard.autState) !=shallow_final_choice2B_guard.end())))))) || KLEENE_NOTSTARTED == ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.kleeneState) && (FST == FST && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && S0 == S0))) || (FST == FST && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && S0 == S0)))) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.callState == CALLED && (((((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.interruptState == FST && 0) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.interruptState == SND && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.guardState == GUARD_NOTSTARTED && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9)  && ((NONE == NONE && (std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end() || std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), S0) !=shallow_final_choice2B_guard.end())) || (NONE == LEFT && std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end()) || (NONE == RIGHT && std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice2B_guard.autState) !=shallow_final_choice2B_guard.end())))) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.guardState == GUARD_STARTED && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == NONE && (std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end() || std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), S0) !=shallow_final_choice2B_guard.end())) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == LEFT && std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end()) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == RIGHT && std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice2B_guard.autState) !=shallow_final_choice2B_guard.end())))))) || KLEENE_NOTSTARTED == ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.kleeneState) && (FST == FST && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && S0 == S0))) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.interruptState == FST && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_pguardB.ts_C.autState == S0))))))))
					{
						if(((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.callState == NOTCALLED && ((S0 == S0 && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.ts_E.h <= ts_J.avg - 3 * ts_J.stddev ) || (S0 == S0 && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.ts_E.h > ts_J.avg - 3 * ts_J.stddev ))) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.callState == CALLED && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.ts_E.autState == S0 && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.ts_E.h <= ts_J.avg - 3 * ts_J.stddev ) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.ts_E.autState == S0 && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.ts_E.h > ts_J.avg - 3 * ts_J.stddev )))))
						{
							if((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.callState == NOTCALLED && ((S0 == S0 && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.ts_E.h <= ts_J.avg - 3 * ts_J.stddev ) || (S0 == S0 && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.ts_E.h > ts_J.avg - 3 * ts_J.stddev ))))
							{
								ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.callState = CALLED;
								ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.ts_E.autState = S0;
								ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.ts_E.h.reset_clock();
								if((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.ts_E.autState == S0 && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.ts_E.h <= ts_J.avg - 3 * ts_J.stddev ))
								{
									Alert(1);ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.ts_E.autState = S0;
									exec = 1;
								
								}else if((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.ts_E.autState == S0 && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.ts_E.h > ts_J.avg - 3 * ts_J.stddev ))
								{
									ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.ts_E.h.reset_clock();ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.ts_E.autState = S0;
									exec = 1;
								
								}
								ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.left_clock_F2.reset_clock();
							}else if((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.callState == CALLED && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.ts_E.autState == S0 && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.ts_E.h <= ts_J.avg - 3 * ts_J.stddev ) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.ts_E.autState == S0 && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.ts_E.h > ts_J.avg - 3 * ts_J.stddev ))))
							{
								if((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.ts_E.autState == S0 && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.ts_E.h <= ts_J.avg - 3 * ts_J.stddev ))
								{
									Alert(1);ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.ts_E.autState = S0;
									exec = 1;
								
								}else if((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.ts_E.autState == S0 && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.ts_E.h > ts_J.avg - 3 * ts_J.stddev ))
								{
									ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.ts_E.h.reset_clock();ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.ts_E.autState = S0;
									exec = 1;
								
								}
								ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.left_clock_F2.reset_clock();
							}
						
						}
						if(((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.callState == NOTCALLED && (((((FST == FST && 0) || (FST == SND && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.guardState == GUARD_NOTSTARTED && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9)  && ((NONE == NONE && (std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end() || std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), S0) !=shallow_final_choice2B_guard.end())) || (NONE == LEFT && std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end()) || (NONE == RIGHT && std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice2B_guard.autState) !=shallow_final_choice2B_guard.end())))) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.guardState == GUARD_STARTED && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == NONE && (std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end() || std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), S0) !=shallow_final_choice2B_guard.end())) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == LEFT && std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end()) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == RIGHT && std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice2B_guard.autState) !=shallow_final_choice2B_guard.end())))))) || KLEENE_NOTSTARTED == ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.kleeneState) && (FST == FST && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && S0 == S0))) || (FST == FST && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && S0 == S0)))) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.callState == CALLED && (((((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.interruptState == FST && 0) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.interruptState == SND && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.guardState == GUARD_NOTSTARTED && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9)  && ((NONE == NONE && (std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end() || std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), S0) !=shallow_final_choice2B_guard.end())) || (NONE == LEFT && std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end()) || (NONE == RIGHT && std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice2B_guard.autState) !=shallow_final_choice2B_guard.end())))) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.guardState == GUARD_STARTED && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == NONE && (std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end() || std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), S0) !=shallow_final_choice2B_guard.end())) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == LEFT && std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end()) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == RIGHT && std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice2B_guard.autState) !=shallow_final_choice2B_guard.end())))))) || KLEENE_NOTSTARTED == ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.kleeneState) && (FST == FST && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && S0 == S0))) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.interruptState == FST && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_pguardB.ts_C.autState == S0))))))
						{
							if((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.callState == NOTCALLED && (((((FST == FST && 0) || (FST == SND && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.guardState == GUARD_NOTSTARTED && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9)  && ((NONE == NONE && (std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end() || std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), S0) !=shallow_final_choice2B_guard.end())) || (NONE == LEFT && std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end()) || (NONE == RIGHT && std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice2B_guard.autState) !=shallow_final_choice2B_guard.end())))) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.guardState == GUARD_STARTED && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == NONE && (std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end() || std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), S0) !=shallow_final_choice2B_guard.end())) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == LEFT && std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end()) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == RIGHT && std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice2B_guard.autState) !=shallow_final_choice2B_guard.end())))))) || KLEENE_NOTSTARTED == ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.kleeneState) && (FST == FST && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && S0 == S0))) || (FST == FST && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && S0 == S0)))))
							{
								ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.callState = CALLED;
								ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.kleeneState = KLEENE_NOTSTARTED;
								ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.interruptState = FST;
								ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_pguardB.ts_C.autState = S0;
								if(((((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.interruptState == FST && 0) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.interruptState == SND && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.guardState == GUARD_NOTSTARTED && (last_event_time.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9)  && ((NONE == NONE && (std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end() || std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), S0) !=shallow_final_choice2B_guard.end())) || (NONE == LEFT && std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end()) || (NONE == RIGHT && std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice2B_guard.autState) !=shallow_final_choice2B_guard.end())))) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.guardState == GUARD_STARTED && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == NONE && (std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end() || std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), S0) !=shallow_final_choice2B_guard.end())) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == LEFT && std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end()) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == RIGHT && std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice2B_guard.autState) !=shallow_final_choice2B_guard.end())))))) || KLEENE_NOTSTARTED == ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.kleeneState) && (FST == FST && (last_event_time.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && S0 == S0))))
								{
									ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.kleeneState = KLEENE_STARTED;
									ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.interruptState = FST;
									ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_pguardB.ts_C.autState = S0;
									if((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.interruptState == FST && (last_event_time.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_pguardB.ts_C.autState == S0)))
									{
										if((last_event_time.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_pguardB.ts_C.autState == S0))
										{
											if(ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_pguardB.ts_C.autState == S0)
											{
												ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_pguardB.ts_C.autState = S0;
												exec = 1;
											
											}
										
										}
									
									}
								
								}else if((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.interruptState == FST && (last_event_time.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_pguardB.ts_C.autState == S0)))
								{
									ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.kleeneState = KLEENE_STARTED;
									if((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.interruptState == FST && (last_event_time.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_pguardB.ts_C.autState == S0)))
									{
										if((last_event_time.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_pguardB.ts_C.autState == S0))
										{
											if(ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_pguardB.ts_C.autState == S0)
											{
												ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_pguardB.ts_C.autState = S0;
												exec = 1;
											
											}
										
										}
									
									}
								
								}
								ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.right_clock_F1.reset_clock();
							}else if((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.callState == CALLED && (((((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.interruptState == FST && 0) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.interruptState == SND && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.guardState == GUARD_NOTSTARTED && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9)  && ((NONE == NONE && (std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end() || std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), S0) !=shallow_final_choice2B_guard.end())) || (NONE == LEFT && std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end()) || (NONE == RIGHT && std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice2B_guard.autState) !=shallow_final_choice2B_guard.end())))) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.guardState == GUARD_STARTED && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == NONE && (std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end() || std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), S0) !=shallow_final_choice2B_guard.end())) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == LEFT && std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end()) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == RIGHT && std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice2B_guard.autState) !=shallow_final_choice2B_guard.end())))))) || KLEENE_NOTSTARTED == ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.kleeneState) && (FST == FST && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && S0 == S0))) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.interruptState == FST && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_pguardB.ts_C.autState == S0)))))
							{
								if(((((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.interruptState == FST && 0) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.interruptState == SND && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.guardState == GUARD_NOTSTARTED && (last_event_time.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9)  && ((NONE == NONE && (std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end() || std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), S0) !=shallow_final_choice2B_guard.end())) || (NONE == LEFT && std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end()) || (NONE == RIGHT && std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice2B_guard.autState) !=shallow_final_choice2B_guard.end())))) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.guardState == GUARD_STARTED && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == NONE && (std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end() || std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), S0) !=shallow_final_choice2B_guard.end())) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == LEFT && std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end()) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == RIGHT && std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice2B_guard.autState) !=shallow_final_choice2B_guard.end())))))) || KLEENE_NOTSTARTED == ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.kleeneState) && (FST == FST && (last_event_time.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && S0 == S0))))
								{
									ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.kleeneState = KLEENE_STARTED;
									ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.interruptState = FST;
									ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_pguardB.ts_C.autState = S0;
									if((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.interruptState == FST && (last_event_time.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_pguardB.ts_C.autState == S0)))
									{
										if((last_event_time.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_pguardB.ts_C.autState == S0))
										{
											if(ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_pguardB.ts_C.autState == S0)
											{
												ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_pguardB.ts_C.autState = S0;
												exec = 1;
											
											}
										
										}
									
									}
								
								}else if((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.interruptState == FST && (last_event_time.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_pguardB.ts_C.autState == S0)))
								{
									ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.kleeneState = KLEENE_STARTED;
									if((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.interruptState == FST && (last_event_time.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_pguardB.ts_C.autState == S0)))
									{
										if((last_event_time.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_pguardB.ts_C.autState == S0))
										{
											if(ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_pguardB.ts_C.autState == S0)
											{
												ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_pguardB.ts_C.autState = S0;
												exec = 1;
											
											}
										
										}
									
									}
								
								}
								ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.right_clock_F1.reset_clock();
							}
						
						}
					
					}
				
				}
			
			}else if((ts_J.ts_guardJ.ts_choiceJ_guard.choiceState == LEFT && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.autState == J2 && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.callState == NOTCALLED && (((NOTCALLED == NOTCALLED && ((S0 == S0 && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.ts_E.h <= ts_J.avg - 3 * ts_J.stddev ) || (S0 == S0 && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.ts_E.h > ts_J.avg - 3 * ts_J.stddev ))) || (NOTCALLED == CALLED && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.ts_E.autState == S0 && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.ts_E.h <= ts_J.avg - 3 * ts_J.stddev ) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.ts_E.autState == S0 && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.ts_E.h > ts_J.avg - 3 * ts_J.stddev )))) || ((NOTCALLED == NOTCALLED && (((((FST == FST && 0) || (FST == SND && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.guardState == GUARD_NOTSTARTED && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9)  && ((NONE == NONE && (std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end() || std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), S0) !=shallow_final_choice2B_guard.end())) || (NONE == LEFT && std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end()) || (NONE == RIGHT && std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice2B_guard.autState) !=shallow_final_choice2B_guard.end())))) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.guardState == GUARD_STARTED && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == NONE && (std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end() || std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), S0) !=shallow_final_choice2B_guard.end())) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == LEFT && std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end()) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == RIGHT && std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice2B_guard.autState) !=shallow_final_choice2B_guard.end())))))) || KLEENE_NOTSTARTED == ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.kleeneState) && (FST == FST && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && S0 == S0))) || (FST == FST && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && S0 == S0)))) || (NOTCALLED == CALLED && (((((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.interruptState == FST && 0) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.interruptState == SND && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.guardState == GUARD_NOTSTARTED && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9)  && ((NONE == NONE && (std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end() || std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), S0) !=shallow_final_choice2B_guard.end())) || (NONE == LEFT && std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end()) || (NONE == RIGHT && std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice2B_guard.autState) !=shallow_final_choice2B_guard.end())))) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.guardState == GUARD_STARTED && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == NONE && (std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end() || std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), S0) !=shallow_final_choice2B_guard.end())) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == LEFT && std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end()) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == RIGHT && std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice2B_guard.autState) !=shallow_final_choice2B_guard.end())))))) || KLEENE_NOTSTARTED == ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.kleeneState) && (FST == FST && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && S0 == S0))) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.interruptState == FST && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_pguardB.ts_C.autState == S0))))))) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.callState == CALLED && (((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.callState == NOTCALLED && ((S0 == S0 && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.ts_E.h <= ts_J.avg - 3 * ts_J.stddev ) || (S0 == S0 && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.ts_E.h > ts_J.avg - 3 * ts_J.stddev ))) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.callState == CALLED && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.ts_E.autState == S0 && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.ts_E.h <= ts_J.avg - 3 * ts_J.stddev ) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.ts_E.autState == S0 && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.ts_E.h > ts_J.avg - 3 * ts_J.stddev )))) || ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.callState == NOTCALLED && (((((FST == FST && 0) || (FST == SND && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.guardState == GUARD_NOTSTARTED && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9)  && ((NONE == NONE && (std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end() || std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), S0) !=shallow_final_choice2B_guard.end())) || (NONE == LEFT && std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end()) || (NONE == RIGHT && std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice2B_guard.autState) !=shallow_final_choice2B_guard.end())))) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.guardState == GUARD_STARTED && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == NONE && (std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end() || std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), S0) !=shallow_final_choice2B_guard.end())) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == LEFT && std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end()) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == RIGHT && std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice2B_guard.autState) !=shallow_final_choice2B_guard.end())))))) || KLEENE_NOTSTARTED == ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.kleeneState) && (FST == FST && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && S0 == S0))) || (FST == FST && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && S0 == S0)))) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.callState == CALLED && (((((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.interruptState == FST && 0) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.interruptState == SND && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.guardState == GUARD_NOTSTARTED && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9)  && ((NONE == NONE && (std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end() || std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), S0) !=shallow_final_choice2B_guard.end())) || (NONE == LEFT && std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end()) || (NONE == RIGHT && std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice2B_guard.autState) !=shallow_final_choice2B_guard.end())))) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.guardState == GUARD_STARTED && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == NONE && (std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end() || std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), S0) !=shallow_final_choice2B_guard.end())) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == LEFT && std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end()) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == RIGHT && std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice2B_guard.autState) !=shallow_final_choice2B_guard.end())))))) || KLEENE_NOTSTARTED == ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.kleeneState) && (FST == FST && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && S0 == S0))) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.interruptState == FST && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_pguardB.ts_C.autState == S0)))))))))))
			{
				if((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.autState == J2 && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.callState == NOTCALLED && (((NOTCALLED == NOTCALLED && ((S0 == S0 && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.ts_E.h <= ts_J.avg - 3 * ts_J.stddev ) || (S0 == S0 && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.ts_E.h > ts_J.avg - 3 * ts_J.stddev ))) || (NOTCALLED == CALLED && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.ts_E.autState == S0 && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.ts_E.h <= ts_J.avg - 3 * ts_J.stddev ) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.ts_E.autState == S0 && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.ts_E.h > ts_J.avg - 3 * ts_J.stddev )))) || ((NOTCALLED == NOTCALLED && (((((FST == FST && 0) || (FST == SND && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.guardState == GUARD_NOTSTARTED && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9)  && ((NONE == NONE && (std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end() || std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), S0) !=shallow_final_choice2B_guard.end())) || (NONE == LEFT && std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end()) || (NONE == RIGHT && std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice2B_guard.autState) !=shallow_final_choice2B_guard.end())))) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.guardState == GUARD_STARTED && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == NONE && (std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end() || std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), S0) !=shallow_final_choice2B_guard.end())) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == LEFT && std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end()) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == RIGHT && std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice2B_guard.autState) !=shallow_final_choice2B_guard.end())))))) || KLEENE_NOTSTARTED == ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.kleeneState) && (FST == FST && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && S0 == S0))) || (FST == FST && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && S0 == S0)))) || (NOTCALLED == CALLED && (((((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.interruptState == FST && 0) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.interruptState == SND && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.guardState == GUARD_NOTSTARTED && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9)  && ((NONE == NONE && (std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end() || std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), S0) !=shallow_final_choice2B_guard.end())) || (NONE == LEFT && std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end()) || (NONE == RIGHT && std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice2B_guard.autState) !=shallow_final_choice2B_guard.end())))) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.guardState == GUARD_STARTED && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == NONE && (std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end() || std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), S0) !=shallow_final_choice2B_guard.end())) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == LEFT && std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end()) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == RIGHT && std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice2B_guard.autState) !=shallow_final_choice2B_guard.end())))))) || KLEENE_NOTSTARTED == ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.kleeneState) && (FST == FST && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && S0 == S0))) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.interruptState == FST && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_pguardB.ts_C.autState == S0))))))) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.callState == CALLED && (((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.callState == NOTCALLED && ((S0 == S0 && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.ts_E.h <= ts_J.avg - 3 * ts_J.stddev ) || (S0 == S0 && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.ts_E.h > ts_J.avg - 3 * ts_J.stddev ))) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.callState == CALLED && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.ts_E.autState == S0 && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.ts_E.h <= ts_J.avg - 3 * ts_J.stddev ) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.ts_E.autState == S0 && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.ts_E.h > ts_J.avg - 3 * ts_J.stddev )))) || ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.callState == NOTCALLED && (((((FST == FST && 0) || (FST == SND && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.guardState == GUARD_NOTSTARTED && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9)  && ((NONE == NONE && (std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end() || std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), S0) !=shallow_final_choice2B_guard.end())) || (NONE == LEFT && std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end()) || (NONE == RIGHT && std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice2B_guard.autState) !=shallow_final_choice2B_guard.end())))) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.guardState == GUARD_STARTED && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == NONE && (std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end() || std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), S0) !=shallow_final_choice2B_guard.end())) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == LEFT && std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end()) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == RIGHT && std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice2B_guard.autState) !=shallow_final_choice2B_guard.end())))))) || KLEENE_NOTSTARTED == ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.kleeneState) && (FST == FST && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && S0 == S0))) || (FST == FST && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && S0 == S0)))) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.callState == CALLED && (((((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.interruptState == FST && 0) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.interruptState == SND && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.guardState == GUARD_NOTSTARTED && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9)  && ((NONE == NONE && (std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end() || std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), S0) !=shallow_final_choice2B_guard.end())) || (NONE == LEFT && std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end()) || (NONE == RIGHT && std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice2B_guard.autState) !=shallow_final_choice2B_guard.end())))) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.guardState == GUARD_STARTED && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == NONE && (std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end() || std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), S0) !=shallow_final_choice2B_guard.end())) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == LEFT && std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end()) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == RIGHT && std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice2B_guard.autState) !=shallow_final_choice2B_guard.end())))))) || KLEENE_NOTSTARTED == ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.kleeneState) && (FST == FST && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && S0 == S0))) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.interruptState == FST && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_pguardB.ts_C.autState == S0))))))))))
				{
					if((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.callState == NOTCALLED && (((NOTCALLED == NOTCALLED && ((S0 == S0 && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.ts_E.h <= ts_J.avg - 3 * ts_J.stddev ) || (S0 == S0 && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.ts_E.h > ts_J.avg - 3 * ts_J.stddev ))) || (NOTCALLED == CALLED && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.ts_E.autState == S0 && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.ts_E.h <= ts_J.avg - 3 * ts_J.stddev ) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.ts_E.autState == S0 && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.ts_E.h > ts_J.avg - 3 * ts_J.stddev )))) || ((NOTCALLED == NOTCALLED && (((((FST == FST && 0) || (FST == SND && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.guardState == GUARD_NOTSTARTED && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9)  && ((NONE == NONE && (std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end() || std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), S0) !=shallow_final_choice2B_guard.end())) || (NONE == LEFT && std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end()) || (NONE == RIGHT && std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice2B_guard.autState) !=shallow_final_choice2B_guard.end())))) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.guardState == GUARD_STARTED && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == NONE && (std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end() || std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), S0) !=shallow_final_choice2B_guard.end())) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == LEFT && std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end()) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == RIGHT && std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice2B_guard.autState) !=shallow_final_choice2B_guard.end())))))) || KLEENE_NOTSTARTED == ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.kleeneState) && (FST == FST && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && S0 == S0))) || (FST == FST && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && S0 == S0)))) || (NOTCALLED == CALLED && (((((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.interruptState == FST && 0) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.interruptState == SND && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.guardState == GUARD_NOTSTARTED && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9)  && ((NONE == NONE && (std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end() || std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), S0) !=shallow_final_choice2B_guard.end())) || (NONE == LEFT && std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end()) || (NONE == RIGHT && std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice2B_guard.autState) !=shallow_final_choice2B_guard.end())))) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.guardState == GUARD_STARTED && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == NONE && (std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end() || std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), S0) !=shallow_final_choice2B_guard.end())) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == LEFT && std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end()) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == RIGHT && std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice2B_guard.autState) !=shallow_final_choice2B_guard.end())))))) || KLEENE_NOTSTARTED == ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.kleeneState) && (FST == FST && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && S0 == S0))) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.interruptState == FST && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_pguardB.ts_C.autState == S0))))))))
					{
						ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.callState = CALLED;
						ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.right_clock_F1.reset_clock();
						ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.left_clock_F2.reset_clock();
						ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.callState = NOTCALLED;
						ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.callState = NOTCALLED;
						if(((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.callState == NOTCALLED && ((S0 == S0 && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.ts_E.h <= ts_J.avg - 3 * ts_J.stddev ) || (S0 == S0 && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.ts_E.h > ts_J.avg - 3 * ts_J.stddev ))) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.callState == CALLED && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.ts_E.autState == S0 && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.ts_E.h <= ts_J.avg - 3 * ts_J.stddev ) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.ts_E.autState == S0 && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.ts_E.h > ts_J.avg - 3 * ts_J.stddev )))))
						{
							if((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.callState == NOTCALLED && ((S0 == S0 && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.ts_E.h <= ts_J.avg - 3 * ts_J.stddev ) || (S0 == S0 && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.ts_E.h > ts_J.avg - 3 * ts_J.stddev ))))
							{
								ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.callState = CALLED;
								ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.ts_E.autState = S0;
								ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.ts_E.h.reset_clock();
								if((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.ts_E.autState == S0 && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.ts_E.h <= ts_J.avg - 3 * ts_J.stddev ))
								{
									Alert(1);ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.ts_E.autState = S0;
									exec = 1;
								
								}else if((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.ts_E.autState == S0 && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.ts_E.h > ts_J.avg - 3 * ts_J.stddev ))
								{
									ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.ts_E.h.reset_clock();ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.ts_E.autState = S0;
									exec = 1;
								
								}
								ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.left_clock_F2.reset_clock();
							}else if((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.callState == CALLED && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.ts_E.autState == S0 && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.ts_E.h <= ts_J.avg - 3 * ts_J.stddev ) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.ts_E.autState == S0 && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.ts_E.h > ts_J.avg - 3 * ts_J.stddev ))))
							{
								if((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.ts_E.autState == S0 && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.ts_E.h <= ts_J.avg - 3 * ts_J.stddev ))
								{
									Alert(1);ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.ts_E.autState = S0;
									exec = 1;
								
								}else if((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.ts_E.autState == S0 && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.ts_E.h > ts_J.avg - 3 * ts_J.stddev ))
								{
									ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.ts_E.h.reset_clock();ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.ts_E.autState = S0;
									exec = 1;
								
								}
								ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.left_clock_F2.reset_clock();
							}
						
						}
						if(((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.callState == NOTCALLED && (((((FST == FST && 0) || (FST == SND && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.guardState == GUARD_NOTSTARTED && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9)  && ((NONE == NONE && (std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end() || std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), S0) !=shallow_final_choice2B_guard.end())) || (NONE == LEFT && std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end()) || (NONE == RIGHT && std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice2B_guard.autState) !=shallow_final_choice2B_guard.end())))) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.guardState == GUARD_STARTED && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == NONE && (std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end() || std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), S0) !=shallow_final_choice2B_guard.end())) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == LEFT && std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end()) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == RIGHT && std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice2B_guard.autState) !=shallow_final_choice2B_guard.end())))))) || KLEENE_NOTSTARTED == ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.kleeneState) && (FST == FST && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && S0 == S0))) || (FST == FST && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && S0 == S0)))) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.callState == CALLED && (((((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.interruptState == FST && 0) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.interruptState == SND && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.guardState == GUARD_NOTSTARTED && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9)  && ((NONE == NONE && (std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end() || std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), S0) !=shallow_final_choice2B_guard.end())) || (NONE == LEFT && std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end()) || (NONE == RIGHT && std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice2B_guard.autState) !=shallow_final_choice2B_guard.end())))) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.guardState == GUARD_STARTED && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == NONE && (std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end() || std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), S0) !=shallow_final_choice2B_guard.end())) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == LEFT && std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end()) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == RIGHT && std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice2B_guard.autState) !=shallow_final_choice2B_guard.end())))))) || KLEENE_NOTSTARTED == ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.kleeneState) && (FST == FST && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && S0 == S0))) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.interruptState == FST && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_pguardB.ts_C.autState == S0))))))
						{
							if((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.callState == NOTCALLED && (((((FST == FST && 0) || (FST == SND && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.guardState == GUARD_NOTSTARTED && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9)  && ((NONE == NONE && (std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end() || std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), S0) !=shallow_final_choice2B_guard.end())) || (NONE == LEFT && std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end()) || (NONE == RIGHT && std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice2B_guard.autState) !=shallow_final_choice2B_guard.end())))) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.guardState == GUARD_STARTED && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == NONE && (std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end() || std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), S0) !=shallow_final_choice2B_guard.end())) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == LEFT && std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end()) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == RIGHT && std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice2B_guard.autState) !=shallow_final_choice2B_guard.end())))))) || KLEENE_NOTSTARTED == ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.kleeneState) && (FST == FST && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && S0 == S0))) || (FST == FST && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && S0 == S0)))))
							{
								ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.callState = CALLED;
								ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.kleeneState = KLEENE_NOTSTARTED;
								ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.interruptState = FST;
								ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_pguardB.ts_C.autState = S0;
								if(((((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.interruptState == FST && 0) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.interruptState == SND && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.guardState == GUARD_NOTSTARTED && (last_event_time.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9)  && ((NONE == NONE && (std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end() || std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), S0) !=shallow_final_choice2B_guard.end())) || (NONE == LEFT && std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end()) || (NONE == RIGHT && std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice2B_guard.autState) !=shallow_final_choice2B_guard.end())))) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.guardState == GUARD_STARTED && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == NONE && (std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end() || std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), S0) !=shallow_final_choice2B_guard.end())) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == LEFT && std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end()) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == RIGHT && std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice2B_guard.autState) !=shallow_final_choice2B_guard.end())))))) || KLEENE_NOTSTARTED == ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.kleeneState) && (FST == FST && (last_event_time.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && S0 == S0))))
								{
									ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.kleeneState = KLEENE_STARTED;
									ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.interruptState = FST;
									ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_pguardB.ts_C.autState = S0;
									if((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.interruptState == FST && (last_event_time.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_pguardB.ts_C.autState == S0)))
									{
										if((last_event_time.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_pguardB.ts_C.autState == S0))
										{
											if(ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_pguardB.ts_C.autState == S0)
											{
												ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_pguardB.ts_C.autState = S0;
												exec = 1;
											
											}
										
										}
									
									}
								
								}else if((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.interruptState == FST && (last_event_time.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_pguardB.ts_C.autState == S0)))
								{
									ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.kleeneState = KLEENE_STARTED;
									if((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.interruptState == FST && (last_event_time.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_pguardB.ts_C.autState == S0)))
									{
										if((last_event_time.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_pguardB.ts_C.autState == S0))
										{
											if(ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_pguardB.ts_C.autState == S0)
											{
												ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_pguardB.ts_C.autState = S0;
												exec = 1;
											
											}
										
										}
									
									}
								
								}
								ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.right_clock_F1.reset_clock();
							}else if((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.callState == CALLED && (((((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.interruptState == FST && 0) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.interruptState == SND && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.guardState == GUARD_NOTSTARTED && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9)  && ((NONE == NONE && (std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end() || std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), S0) !=shallow_final_choice2B_guard.end())) || (NONE == LEFT && std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end()) || (NONE == RIGHT && std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice2B_guard.autState) !=shallow_final_choice2B_guard.end())))) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.guardState == GUARD_STARTED && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == NONE && (std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end() || std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), S0) !=shallow_final_choice2B_guard.end())) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == LEFT && std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end()) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == RIGHT && std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice2B_guard.autState) !=shallow_final_choice2B_guard.end())))))) || KLEENE_NOTSTARTED == ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.kleeneState) && (FST == FST && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && S0 == S0))) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.interruptState == FST && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_pguardB.ts_C.autState == S0)))))
							{
								if(((((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.interruptState == FST && 0) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.interruptState == SND && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.guardState == GUARD_NOTSTARTED && (last_event_time.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9)  && ((NONE == NONE && (std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end() || std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), S0) !=shallow_final_choice2B_guard.end())) || (NONE == LEFT && std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end()) || (NONE == RIGHT && std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice2B_guard.autState) !=shallow_final_choice2B_guard.end())))) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.guardState == GUARD_STARTED && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == NONE && (std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end() || std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), S0) !=shallow_final_choice2B_guard.end())) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == LEFT && std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end()) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == RIGHT && std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice2B_guard.autState) !=shallow_final_choice2B_guard.end())))))) || KLEENE_NOTSTARTED == ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.kleeneState) && (FST == FST && (last_event_time.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && S0 == S0))))
								{
									ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.kleeneState = KLEENE_STARTED;
									ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.interruptState = FST;
									ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_pguardB.ts_C.autState = S0;
									if((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.interruptState == FST && (last_event_time.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_pguardB.ts_C.autState == S0)))
									{
										if((last_event_time.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_pguardB.ts_C.autState == S0))
										{
											if(ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_pguardB.ts_C.autState == S0)
											{
												ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_pguardB.ts_C.autState = S0;
												exec = 1;
											
											}
										
										}
									
									}
								
								}else if((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.interruptState == FST && (last_event_time.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_pguardB.ts_C.autState == S0)))
								{
									ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.kleeneState = KLEENE_STARTED;
									if((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.interruptState == FST && (last_event_time.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_pguardB.ts_C.autState == S0)))
									{
										if((last_event_time.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_pguardB.ts_C.autState == S0))
										{
											if(ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_pguardB.ts_C.autState == S0)
											{
												ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_pguardB.ts_C.autState = S0;
												exec = 1;
											
											}
										
										}
									
									}
								
								}
								ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.right_clock_F1.reset_clock();
							}
						
						}
					
					}else if((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.callState == CALLED && (((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.callState == NOTCALLED && ((S0 == S0 && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.ts_E.h <= ts_J.avg - 3 * ts_J.stddev ) || (S0 == S0 && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.ts_E.h > ts_J.avg - 3 * ts_J.stddev ))) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.callState == CALLED && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.ts_E.autState == S0 && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.ts_E.h <= ts_J.avg - 3 * ts_J.stddev ) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.ts_E.autState == S0 && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.ts_E.h > ts_J.avg - 3 * ts_J.stddev )))) || ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.callState == NOTCALLED && (((((FST == FST && 0) || (FST == SND && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.guardState == GUARD_NOTSTARTED && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9)  && ((NONE == NONE && (std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end() || std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), S0) !=shallow_final_choice2B_guard.end())) || (NONE == LEFT && std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end()) || (NONE == RIGHT && std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice2B_guard.autState) !=shallow_final_choice2B_guard.end())))) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.guardState == GUARD_STARTED && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == NONE && (std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end() || std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), S0) !=shallow_final_choice2B_guard.end())) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == LEFT && std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end()) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == RIGHT && std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice2B_guard.autState) !=shallow_final_choice2B_guard.end())))))) || KLEENE_NOTSTARTED == ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.kleeneState) && (FST == FST && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && S0 == S0))) || (FST == FST && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && S0 == S0)))) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.callState == CALLED && (((((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.interruptState == FST && 0) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.interruptState == SND && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.guardState == GUARD_NOTSTARTED && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9)  && ((NONE == NONE && (std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end() || std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), S0) !=shallow_final_choice2B_guard.end())) || (NONE == LEFT && std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end()) || (NONE == RIGHT && std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice2B_guard.autState) !=shallow_final_choice2B_guard.end())))) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.guardState == GUARD_STARTED && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == NONE && (std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end() || std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), S0) !=shallow_final_choice2B_guard.end())) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == LEFT && std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end()) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == RIGHT && std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice2B_guard.autState) !=shallow_final_choice2B_guard.end())))))) || KLEENE_NOTSTARTED == ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.kleeneState) && (FST == FST && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && S0 == S0))) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.interruptState == FST && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_pguardB.ts_C.autState == S0))))))))
					{
						if(((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.callState == NOTCALLED && ((S0 == S0 && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.ts_E.h <= ts_J.avg - 3 * ts_J.stddev ) || (S0 == S0 && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.ts_E.h > ts_J.avg - 3 * ts_J.stddev ))) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.callState == CALLED && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.ts_E.autState == S0 && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.ts_E.h <= ts_J.avg - 3 * ts_J.stddev ) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.ts_E.autState == S0 && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.ts_E.h > ts_J.avg - 3 * ts_J.stddev )))))
						{
							if((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.callState == NOTCALLED && ((S0 == S0 && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.ts_E.h <= ts_J.avg - 3 * ts_J.stddev ) || (S0 == S0 && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.ts_E.h > ts_J.avg - 3 * ts_J.stddev ))))
							{
								ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.callState = CALLED;
								ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.ts_E.autState = S0;
								ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.ts_E.h.reset_clock();
								if((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.ts_E.autState == S0 && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.ts_E.h <= ts_J.avg - 3 * ts_J.stddev ))
								{
									Alert(1);ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.ts_E.autState = S0;
									exec = 1;
								
								}else if((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.ts_E.autState == S0 && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.ts_E.h > ts_J.avg - 3 * ts_J.stddev ))
								{
									ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.ts_E.h.reset_clock();ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.ts_E.autState = S0;
									exec = 1;
								
								}
								ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.left_clock_F2.reset_clock();
							}else if((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.callState == CALLED && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.ts_E.autState == S0 && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.ts_E.h <= ts_J.avg - 3 * ts_J.stddev ) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.ts_E.autState == S0 && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.ts_E.h > ts_J.avg - 3 * ts_J.stddev ))))
							{
								if((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.ts_E.autState == S0 && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.ts_E.h <= ts_J.avg - 3 * ts_J.stddev ))
								{
									Alert(1);ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.ts_E.autState = S0;
									exec = 1;
								
								}else if((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.ts_E.autState == S0 && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.ts_E.h > ts_J.avg - 3 * ts_J.stddev ))
								{
									ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.ts_E.h.reset_clock();ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.ts_E.autState = S0;
									exec = 1;
								
								}
								ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.left_clock_F2.reset_clock();
							}
						
						}
						if(((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.callState == NOTCALLED && (((((FST == FST && 0) || (FST == SND && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.guardState == GUARD_NOTSTARTED && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9)  && ((NONE == NONE && (std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end() || std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), S0) !=shallow_final_choice2B_guard.end())) || (NONE == LEFT && std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end()) || (NONE == RIGHT && std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice2B_guard.autState) !=shallow_final_choice2B_guard.end())))) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.guardState == GUARD_STARTED && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == NONE && (std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end() || std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), S0) !=shallow_final_choice2B_guard.end())) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == LEFT && std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end()) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == RIGHT && std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice2B_guard.autState) !=shallow_final_choice2B_guard.end())))))) || KLEENE_NOTSTARTED == ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.kleeneState) && (FST == FST && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && S0 == S0))) || (FST == FST && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && S0 == S0)))) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.callState == CALLED && (((((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.interruptState == FST && 0) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.interruptState == SND && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.guardState == GUARD_NOTSTARTED && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9)  && ((NONE == NONE && (std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end() || std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), S0) !=shallow_final_choice2B_guard.end())) || (NONE == LEFT && std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end()) || (NONE == RIGHT && std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice2B_guard.autState) !=shallow_final_choice2B_guard.end())))) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.guardState == GUARD_STARTED && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == NONE && (std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end() || std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), S0) !=shallow_final_choice2B_guard.end())) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == LEFT && std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end()) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == RIGHT && std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice2B_guard.autState) !=shallow_final_choice2B_guard.end())))))) || KLEENE_NOTSTARTED == ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.kleeneState) && (FST == FST && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && S0 == S0))) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.interruptState == FST && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_pguardB.ts_C.autState == S0))))))
						{
							if((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.callState == NOTCALLED && (((((FST == FST && 0) || (FST == SND && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.guardState == GUARD_NOTSTARTED && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9)  && ((NONE == NONE && (std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end() || std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), S0) !=shallow_final_choice2B_guard.end())) || (NONE == LEFT && std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end()) || (NONE == RIGHT && std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice2B_guard.autState) !=shallow_final_choice2B_guard.end())))) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.guardState == GUARD_STARTED && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == NONE && (std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end() || std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), S0) !=shallow_final_choice2B_guard.end())) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == LEFT && std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end()) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == RIGHT && std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice2B_guard.autState) !=shallow_final_choice2B_guard.end())))))) || KLEENE_NOTSTARTED == ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.kleeneState) && (FST == FST && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && S0 == S0))) || (FST == FST && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && S0 == S0)))))
							{
								ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.callState = CALLED;
								ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.kleeneState = KLEENE_NOTSTARTED;
								ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.interruptState = FST;
								ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_pguardB.ts_C.autState = S0;
								if(((((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.interruptState == FST && 0) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.interruptState == SND && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.guardState == GUARD_NOTSTARTED && (last_event_time.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9)  && ((NONE == NONE && (std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end() || std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), S0) !=shallow_final_choice2B_guard.end())) || (NONE == LEFT && std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end()) || (NONE == RIGHT && std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice2B_guard.autState) !=shallow_final_choice2B_guard.end())))) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.guardState == GUARD_STARTED && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == NONE && (std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end() || std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), S0) !=shallow_final_choice2B_guard.end())) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == LEFT && std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end()) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == RIGHT && std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice2B_guard.autState) !=shallow_final_choice2B_guard.end())))))) || KLEENE_NOTSTARTED == ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.kleeneState) && (FST == FST && (last_event_time.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && S0 == S0))))
								{
									ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.kleeneState = KLEENE_STARTED;
									ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.interruptState = FST;
									ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_pguardB.ts_C.autState = S0;
									if((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.interruptState == FST && (last_event_time.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_pguardB.ts_C.autState == S0)))
									{
										if((last_event_time.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_pguardB.ts_C.autState == S0))
										{
											if(ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_pguardB.ts_C.autState == S0)
											{
												ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_pguardB.ts_C.autState = S0;
												exec = 1;
											
											}
										
										}
									
									}
								
								}else if((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.interruptState == FST && (last_event_time.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_pguardB.ts_C.autState == S0)))
								{
									ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.kleeneState = KLEENE_STARTED;
									if((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.interruptState == FST && (last_event_time.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_pguardB.ts_C.autState == S0)))
									{
										if((last_event_time.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_pguardB.ts_C.autState == S0))
										{
											if(ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_pguardB.ts_C.autState == S0)
											{
												ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_pguardB.ts_C.autState = S0;
												exec = 1;
											
											}
										
										}
									
									}
								
								}
								ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.right_clock_F1.reset_clock();
							}else if((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.callState == CALLED && (((((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.interruptState == FST && 0) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.interruptState == SND && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.guardState == GUARD_NOTSTARTED && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9)  && ((NONE == NONE && (std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end() || std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), S0) !=shallow_final_choice2B_guard.end())) || (NONE == LEFT && std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end()) || (NONE == RIGHT && std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice2B_guard.autState) !=shallow_final_choice2B_guard.end())))) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.guardState == GUARD_STARTED && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == NONE && (std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end() || std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), S0) !=shallow_final_choice2B_guard.end())) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == LEFT && std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end()) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == RIGHT && std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice2B_guard.autState) !=shallow_final_choice2B_guard.end())))))) || KLEENE_NOTSTARTED == ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.kleeneState) && (FST == FST && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && S0 == S0))) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.interruptState == FST && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_pguardB.ts_C.autState == S0)))))
							{
								if(((((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.interruptState == FST && 0) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.interruptState == SND && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.guardState == GUARD_NOTSTARTED && (last_event_time.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9)  && ((NONE == NONE && (std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end() || std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), S0) !=shallow_final_choice2B_guard.end())) || (NONE == LEFT && std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end()) || (NONE == RIGHT && std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice2B_guard.autState) !=shallow_final_choice2B_guard.end())))) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.guardState == GUARD_STARTED && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == NONE && (std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end() || std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), S0) !=shallow_final_choice2B_guard.end())) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == LEFT && std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end()) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == RIGHT && std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice2B_guard.autState) !=shallow_final_choice2B_guard.end())))))) || KLEENE_NOTSTARTED == ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.kleeneState) && (FST == FST && (last_event_time.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && S0 == S0))))
								{
									ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.kleeneState = KLEENE_STARTED;
									ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.interruptState = FST;
									ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_pguardB.ts_C.autState = S0;
									if((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.interruptState == FST && (last_event_time.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_pguardB.ts_C.autState == S0)))
									{
										if((last_event_time.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_pguardB.ts_C.autState == S0))
										{
											if(ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_pguardB.ts_C.autState == S0)
											{
												ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_pguardB.ts_C.autState = S0;
												exec = 1;
											
											}
										
										}
									
									}
								
								}else if((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.interruptState == FST && (last_event_time.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_pguardB.ts_C.autState == S0)))
								{
									ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.kleeneState = KLEENE_STARTED;
									if((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.interruptState == FST && (last_event_time.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_pguardB.ts_C.autState == S0)))
									{
										if((last_event_time.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_pguardB.ts_C.autState == S0))
										{
											if(ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_pguardB.ts_C.autState == S0)
											{
												ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_pguardB.ts_C.autState = S0;
												exec = 1;
											
											}
										
										}
									
									}
								
								}
								ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.right_clock_F1.reset_clock();
							}
						
						}
					
					}
				
				}
			
			}else if((ts_J.ts_guardJ.ts_choiceJ_guard.choiceState == NONE && ((NOTCALLED == NOTCALLED && (((NOTCALLED == NOTCALLED && ((S0 == S0 && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F2.ts_E.h <= ts_J.avg - 3 * ts_J.stddev ) || (S0 == S0 && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F2.ts_E.h > ts_J.avg - 3 * ts_J.stddev ))) || (NOTCALLED == CALLED && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F2.ts_E.autState == S0 && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F2.ts_E.h <= ts_J.avg - 3 * ts_J.stddev ) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F2.ts_E.autState == S0 && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F2.ts_E.h > ts_J.avg - 3 * ts_J.stddev )))) || ((NOTCALLED == NOTCALLED && (((((FST == FST && 0) || (FST == SND && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.guardState == GUARD_NOTSTARTED && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9)  && ((NONE == NONE && (std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end() || std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), S0) !=shallow_final_choice2B_guard.end())) || (NONE == LEFT && std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end()) || (NONE == RIGHT && std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice2B_guard.autState) !=shallow_final_choice2B_guard.end())))) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.guardState == GUARD_STARTED && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == NONE && (std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end() || std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), S0) !=shallow_final_choice2B_guard.end())) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == LEFT && std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end()) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == RIGHT && std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice2B_guard.autState) !=shallow_final_choice2B_guard.end())))))) || KLEENE_NOTSTARTED == ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.kleeneState) && (FST == FST && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && S0 == S0))) || (FST == FST && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && S0 == S0)))) || (NOTCALLED == CALLED && (((((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.interruptState == FST && 0) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.interruptState == SND && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.guardState == GUARD_NOTSTARTED && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9)  && ((NONE == NONE && (std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end() || std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), S0) !=shallow_final_choice2B_guard.end())) || (NONE == LEFT && std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end()) || (NONE == RIGHT && std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice2B_guard.autState) !=shallow_final_choice2B_guard.end())))) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.guardState == GUARD_STARTED && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == NONE && (std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end() || std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), S0) !=shallow_final_choice2B_guard.end())) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == LEFT && std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end()) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == RIGHT && std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice2B_guard.autState) !=shallow_final_choice2B_guard.end())))))) || KLEENE_NOTSTARTED == ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.kleeneState) && (FST == FST && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && S0 == S0))) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.interruptState == FST && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_pguardB.ts_C.autState == S0))))))) || (NOTCALLED == CALLED && (((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F2.callState == NOTCALLED && ((S0 == S0 && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F2.ts_E.h <= ts_J.avg - 3 * ts_J.stddev ) || (S0 == S0 && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F2.ts_E.h > ts_J.avg - 3 * ts_J.stddev ))) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F2.callState == CALLED && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F2.ts_E.autState == S0 && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F2.ts_E.h <= ts_J.avg - 3 * ts_J.stddev ) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F2.ts_E.autState == S0 && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F2.ts_E.h > ts_J.avg - 3 * ts_J.stddev )))) || ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.callState == NOTCALLED && (((((FST == FST && 0) || (FST == SND && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.guardState == GUARD_NOTSTARTED && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9)  && ((NONE == NONE && (std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end() || std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), S0) !=shallow_final_choice2B_guard.end())) || (NONE == LEFT && std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end()) || (NONE == RIGHT && std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice2B_guard.autState) !=shallow_final_choice2B_guard.end())))) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.guardState == GUARD_STARTED && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == NONE && (std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end() || std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), S0) !=shallow_final_choice2B_guard.end())) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == LEFT && std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end()) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == RIGHT && std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice2B_guard.autState) !=shallow_final_choice2B_guard.end())))))) || KLEENE_NOTSTARTED == ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.kleeneState) && (FST == FST && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && S0 == S0))) || (FST == FST && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && S0 == S0)))) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.callState == CALLED && (((((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.interruptState == FST && 0) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.interruptState == SND && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.guardState == GUARD_NOTSTARTED && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9)  && ((NONE == NONE && (std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end() || std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), S0) !=shallow_final_choice2B_guard.end())) || (NONE == LEFT && std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end()) || (NONE == RIGHT && std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice2B_guard.autState) !=shallow_final_choice2B_guard.end())))) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.guardState == GUARD_STARTED && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == NONE && (std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end() || std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), S0) !=shallow_final_choice2B_guard.end())) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == LEFT && std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end()) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == RIGHT && std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice2B_guard.autState) !=shallow_final_choice2B_guard.end())))))) || KLEENE_NOTSTARTED == ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.kleeneState) && (FST == FST && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && S0 == S0))) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.interruptState == FST && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_pguardB.ts_C.autState == S0))))))))))
			{
				ts_J.ts_guardJ.ts_choiceJ_guard.choiceState = RIGHT;
				ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.callState = NOTCALLED;
				if((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.callState == NOTCALLED && (((NOTCALLED == NOTCALLED && ((S0 == S0 && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F2.ts_E.h <= ts_J.avg - 3 * ts_J.stddev ) || (S0 == S0 && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F2.ts_E.h > ts_J.avg - 3 * ts_J.stddev ))) || (NOTCALLED == CALLED && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F2.ts_E.autState == S0 && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F2.ts_E.h <= ts_J.avg - 3 * ts_J.stddev ) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F2.ts_E.autState == S0 && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F2.ts_E.h > ts_J.avg - 3 * ts_J.stddev )))) || ((NOTCALLED == NOTCALLED && (((((FST == FST && 0) || (FST == SND && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.guardState == GUARD_NOTSTARTED && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9)  && ((NONE == NONE && (std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end() || std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), S0) !=shallow_final_choice2B_guard.end())) || (NONE == LEFT && std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end()) || (NONE == RIGHT && std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice2B_guard.autState) !=shallow_final_choice2B_guard.end())))) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.guardState == GUARD_STARTED && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == NONE && (std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end() || std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), S0) !=shallow_final_choice2B_guard.end())) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == LEFT && std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end()) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == RIGHT && std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice2B_guard.autState) !=shallow_final_choice2B_guard.end())))))) || KLEENE_NOTSTARTED == ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.kleeneState) && (FST == FST && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && S0 == S0))) || (FST == FST && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && S0 == S0)))) || (NOTCALLED == CALLED && (((((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.interruptState == FST && 0) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.interruptState == SND && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.guardState == GUARD_NOTSTARTED && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9)  && ((NONE == NONE && (std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end() || std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), S0) !=shallow_final_choice2B_guard.end())) || (NONE == LEFT && std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end()) || (NONE == RIGHT && std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice2B_guard.autState) !=shallow_final_choice2B_guard.end())))) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.guardState == GUARD_STARTED && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == NONE && (std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end() || std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), S0) !=shallow_final_choice2B_guard.end())) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == LEFT && std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end()) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == RIGHT && std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice2B_guard.autState) !=shallow_final_choice2B_guard.end())))))) || KLEENE_NOTSTARTED == ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.kleeneState) && (FST == FST && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && S0 == S0))) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.interruptState == FST && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_pguardB.ts_C.autState == S0))))))))
				{
					ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.callState = CALLED;
					ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.right_clock_F1.reset_clock();
					ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.left_clock_F2.reset_clock();
					ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F2.callState = NOTCALLED;
					ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.callState = NOTCALLED;
					if(((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F2.callState == NOTCALLED && ((S0 == S0 && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F2.ts_E.h <= ts_J.avg - 3 * ts_J.stddev ) || (S0 == S0 && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F2.ts_E.h > ts_J.avg - 3 * ts_J.stddev ))) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F2.callState == CALLED && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F2.ts_E.autState == S0 && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F2.ts_E.h <= ts_J.avg - 3 * ts_J.stddev ) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F2.ts_E.autState == S0 && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F2.ts_E.h > ts_J.avg - 3 * ts_J.stddev )))))
					{
						if((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F2.callState == NOTCALLED && ((S0 == S0 && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F2.ts_E.h <= ts_J.avg - 3 * ts_J.stddev ) || (S0 == S0 && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F2.ts_E.h > ts_J.avg - 3 * ts_J.stddev ))))
						{
							ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F2.callState = CALLED;
							ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F2.ts_E.autState = S0;
							ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F2.ts_E.h.reset_clock();
							if((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F2.ts_E.autState == S0 && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F2.ts_E.h <= ts_J.avg - 3 * ts_J.stddev ))
							{
								Alert(1);ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F2.ts_E.autState = S0;
								exec = 1;
							
							}else if((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F2.ts_E.autState == S0 && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F2.ts_E.h > ts_J.avg - 3 * ts_J.stddev ))
							{
								ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F2.ts_E.h.reset_clock();ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F2.ts_E.autState = S0;
								exec = 1;
							
							}
							ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.left_clock_F2.reset_clock();
						}else if((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F2.callState == CALLED && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F2.ts_E.autState == S0 && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F2.ts_E.h <= ts_J.avg - 3 * ts_J.stddev ) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F2.ts_E.autState == S0 && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F2.ts_E.h > ts_J.avg - 3 * ts_J.stddev ))))
						{
							if((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F2.ts_E.autState == S0 && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F2.ts_E.h <= ts_J.avg - 3 * ts_J.stddev ))
							{
								Alert(1);ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F2.ts_E.autState = S0;
								exec = 1;
							
							}else if((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F2.ts_E.autState == S0 && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F2.ts_E.h > ts_J.avg - 3 * ts_J.stddev ))
							{
								ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F2.ts_E.h.reset_clock();ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F2.ts_E.autState = S0;
								exec = 1;
							
							}
							ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.left_clock_F2.reset_clock();
						}
					
					}
					if(((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.callState == NOTCALLED && (((((FST == FST && 0) || (FST == SND && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.guardState == GUARD_NOTSTARTED && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9)  && ((NONE == NONE && (std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end() || std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), S0) !=shallow_final_choice2B_guard.end())) || (NONE == LEFT && std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end()) || (NONE == RIGHT && std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice2B_guard.autState) !=shallow_final_choice2B_guard.end())))) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.guardState == GUARD_STARTED && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == NONE && (std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end() || std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), S0) !=shallow_final_choice2B_guard.end())) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == LEFT && std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end()) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == RIGHT && std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice2B_guard.autState) !=shallow_final_choice2B_guard.end())))))) || KLEENE_NOTSTARTED == ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.kleeneState) && (FST == FST && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && S0 == S0))) || (FST == FST && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && S0 == S0)))) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.callState == CALLED && (((((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.interruptState == FST && 0) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.interruptState == SND && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.guardState == GUARD_NOTSTARTED && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9)  && ((NONE == NONE && (std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end() || std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), S0) !=shallow_final_choice2B_guard.end())) || (NONE == LEFT && std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end()) || (NONE == RIGHT && std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice2B_guard.autState) !=shallow_final_choice2B_guard.end())))) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.guardState == GUARD_STARTED && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == NONE && (std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end() || std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), S0) !=shallow_final_choice2B_guard.end())) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == LEFT && std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end()) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == RIGHT && std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice2B_guard.autState) !=shallow_final_choice2B_guard.end())))))) || KLEENE_NOTSTARTED == ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.kleeneState) && (FST == FST && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && S0 == S0))) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.interruptState == FST && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_pguardB.ts_C.autState == S0))))))
					{
						if((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.callState == NOTCALLED && (((((FST == FST && 0) || (FST == SND && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.guardState == GUARD_NOTSTARTED && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9)  && ((NONE == NONE && (std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end() || std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), S0) !=shallow_final_choice2B_guard.end())) || (NONE == LEFT && std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end()) || (NONE == RIGHT && std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice2B_guard.autState) !=shallow_final_choice2B_guard.end())))) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.guardState == GUARD_STARTED && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == NONE && (std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end() || std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), S0) !=shallow_final_choice2B_guard.end())) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == LEFT && std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end()) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == RIGHT && std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice2B_guard.autState) !=shallow_final_choice2B_guard.end())))))) || KLEENE_NOTSTARTED == ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.kleeneState) && (FST == FST && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && S0 == S0))) || (FST == FST && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && S0 == S0)))))
						{
							ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.callState = CALLED;
							ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.kleeneState = KLEENE_NOTSTARTED;
							ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.interruptState = FST;
							ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_pguardB.ts_C.autState = S0;
							if(((((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.interruptState == FST && 0) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.interruptState == SND && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.guardState == GUARD_NOTSTARTED && (last_event_time.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9)  && ((NONE == NONE && (std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end() || std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), S0) !=shallow_final_choice2B_guard.end())) || (NONE == LEFT && std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end()) || (NONE == RIGHT && std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice2B_guard.autState) !=shallow_final_choice2B_guard.end())))) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.guardState == GUARD_STARTED && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == NONE && (std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end() || std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), S0) !=shallow_final_choice2B_guard.end())) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == LEFT && std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end()) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == RIGHT && std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice2B_guard.autState) !=shallow_final_choice2B_guard.end())))))) || KLEENE_NOTSTARTED == ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.kleeneState) && (FST == FST && (last_event_time.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && S0 == S0))))
							{
								ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.kleeneState = KLEENE_STARTED;
								ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.interruptState = FST;
								ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_pguardB.ts_C.autState = S0;
								if((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.interruptState == FST && (last_event_time.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_pguardB.ts_C.autState == S0)))
								{
									if((last_event_time.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_pguardB.ts_C.autState == S0))
									{
										if(ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_pguardB.ts_C.autState == S0)
										{
											ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_pguardB.ts_C.autState = S0;
											exec = 1;
										
										}
									
									}
								
								}
							
							}else if((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.interruptState == FST && (last_event_time.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_pguardB.ts_C.autState == S0)))
							{
								ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.kleeneState = KLEENE_STARTED;
								if((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.interruptState == FST && (last_event_time.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_pguardB.ts_C.autState == S0)))
								{
									if((last_event_time.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_pguardB.ts_C.autState == S0))
									{
										if(ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_pguardB.ts_C.autState == S0)
										{
											ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_pguardB.ts_C.autState = S0;
											exec = 1;
										
										}
									
									}
								
								}
							
							}
							ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.right_clock_F1.reset_clock();
						}else if((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.callState == CALLED && (((((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.interruptState == FST && 0) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.interruptState == SND && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.guardState == GUARD_NOTSTARTED && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9)  && ((NONE == NONE && (std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end() || std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), S0) !=shallow_final_choice2B_guard.end())) || (NONE == LEFT && std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end()) || (NONE == RIGHT && std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice2B_guard.autState) !=shallow_final_choice2B_guard.end())))) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.guardState == GUARD_STARTED && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == NONE && (std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end() || std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), S0) !=shallow_final_choice2B_guard.end())) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == LEFT && std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end()) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == RIGHT && std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice2B_guard.autState) !=shallow_final_choice2B_guard.end())))))) || KLEENE_NOTSTARTED == ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.kleeneState) && (FST == FST && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && S0 == S0))) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.interruptState == FST && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_pguardB.ts_C.autState == S0)))))
						{
							if(((((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.interruptState == FST && 0) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.interruptState == SND && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.guardState == GUARD_NOTSTARTED && (last_event_time.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9)  && ((NONE == NONE && (std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end() || std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), S0) !=shallow_final_choice2B_guard.end())) || (NONE == LEFT && std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end()) || (NONE == RIGHT && std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice2B_guard.autState) !=shallow_final_choice2B_guard.end())))) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.guardState == GUARD_STARTED && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == NONE && (std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end() || std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), S0) !=shallow_final_choice2B_guard.end())) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == LEFT && std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end()) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == RIGHT && std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice2B_guard.autState) !=shallow_final_choice2B_guard.end())))))) || KLEENE_NOTSTARTED == ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.kleeneState) && (FST == FST && (last_event_time.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && S0 == S0))))
							{
								ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.kleeneState = KLEENE_STARTED;
								ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.interruptState = FST;
								ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_pguardB.ts_C.autState = S0;
								if((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.interruptState == FST && (last_event_time.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_pguardB.ts_C.autState == S0)))
								{
									if((last_event_time.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_pguardB.ts_C.autState == S0))
									{
										if(ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_pguardB.ts_C.autState == S0)
										{
											ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_pguardB.ts_C.autState = S0;
											exec = 1;
										
										}
									
									}
								
								}
							
							}else if((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.interruptState == FST && (last_event_time.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_pguardB.ts_C.autState == S0)))
							{
								ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.kleeneState = KLEENE_STARTED;
								if((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.interruptState == FST && (last_event_time.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_pguardB.ts_C.autState == S0)))
								{
									if((last_event_time.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_pguardB.ts_C.autState == S0))
									{
										if(ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_pguardB.ts_C.autState == S0)
										{
											ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_pguardB.ts_C.autState = S0;
											exec = 1;
										
										}
									
									}
								
								}
							
							}
							ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.right_clock_F1.reset_clock();
						}
					
					}
				
				}else if((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.callState == CALLED && (((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F2.callState == NOTCALLED && ((S0 == S0 && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F2.ts_E.h <= ts_J.avg - 3 * ts_J.stddev ) || (S0 == S0 && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F2.ts_E.h > ts_J.avg - 3 * ts_J.stddev ))) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F2.callState == CALLED && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F2.ts_E.autState == S0 && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F2.ts_E.h <= ts_J.avg - 3 * ts_J.stddev ) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F2.ts_E.autState == S0 && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F2.ts_E.h > ts_J.avg - 3 * ts_J.stddev )))) || ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.callState == NOTCALLED && (((((FST == FST && 0) || (FST == SND && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.guardState == GUARD_NOTSTARTED && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9)  && ((NONE == NONE && (std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end() || std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), S0) !=shallow_final_choice2B_guard.end())) || (NONE == LEFT && std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end()) || (NONE == RIGHT && std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice2B_guard.autState) !=shallow_final_choice2B_guard.end())))) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.guardState == GUARD_STARTED && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == NONE && (std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end() || std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), S0) !=shallow_final_choice2B_guard.end())) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == LEFT && std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end()) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == RIGHT && std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice2B_guard.autState) !=shallow_final_choice2B_guard.end())))))) || KLEENE_NOTSTARTED == ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.kleeneState) && (FST == FST && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && S0 == S0))) || (FST == FST && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && S0 == S0)))) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.callState == CALLED && (((((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.interruptState == FST && 0) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.interruptState == SND && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.guardState == GUARD_NOTSTARTED && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9)  && ((NONE == NONE && (std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end() || std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), S0) !=shallow_final_choice2B_guard.end())) || (NONE == LEFT && std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end()) || (NONE == RIGHT && std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice2B_guard.autState) !=shallow_final_choice2B_guard.end())))) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.guardState == GUARD_STARTED && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == NONE && (std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end() || std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), S0) !=shallow_final_choice2B_guard.end())) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == LEFT && std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end()) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == RIGHT && std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice2B_guard.autState) !=shallow_final_choice2B_guard.end())))))) || KLEENE_NOTSTARTED == ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.kleeneState) && (FST == FST && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && S0 == S0))) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.interruptState == FST && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_pguardB.ts_C.autState == S0))))))))
				{
					if(((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F2.callState == NOTCALLED && ((S0 == S0 && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F2.ts_E.h <= ts_J.avg - 3 * ts_J.stddev ) || (S0 == S0 && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F2.ts_E.h > ts_J.avg - 3 * ts_J.stddev ))) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F2.callState == CALLED && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F2.ts_E.autState == S0 && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F2.ts_E.h <= ts_J.avg - 3 * ts_J.stddev ) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F2.ts_E.autState == S0 && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F2.ts_E.h > ts_J.avg - 3 * ts_J.stddev )))))
					{
						if((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F2.callState == NOTCALLED && ((S0 == S0 && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F2.ts_E.h <= ts_J.avg - 3 * ts_J.stddev ) || (S0 == S0 && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F2.ts_E.h > ts_J.avg - 3 * ts_J.stddev ))))
						{
							ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F2.callState = CALLED;
							ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F2.ts_E.autState = S0;
							ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F2.ts_E.h.reset_clock();
							if((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F2.ts_E.autState == S0 && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F2.ts_E.h <= ts_J.avg - 3 * ts_J.stddev ))
							{
								Alert(1);ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F2.ts_E.autState = S0;
								exec = 1;
							
							}else if((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F2.ts_E.autState == S0 && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F2.ts_E.h > ts_J.avg - 3 * ts_J.stddev ))
							{
								ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F2.ts_E.h.reset_clock();ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F2.ts_E.autState = S0;
								exec = 1;
							
							}
							ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.left_clock_F2.reset_clock();
						}else if((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F2.callState == CALLED && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F2.ts_E.autState == S0 && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F2.ts_E.h <= ts_J.avg - 3 * ts_J.stddev ) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F2.ts_E.autState == S0 && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F2.ts_E.h > ts_J.avg - 3 * ts_J.stddev ))))
						{
							if((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F2.ts_E.autState == S0 && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F2.ts_E.h <= ts_J.avg - 3 * ts_J.stddev ))
							{
								Alert(1);ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F2.ts_E.autState = S0;
								exec = 1;
							
							}else if((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F2.ts_E.autState == S0 && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F2.ts_E.h > ts_J.avg - 3 * ts_J.stddev ))
							{
								ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F2.ts_E.h.reset_clock();ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F2.ts_E.autState = S0;
								exec = 1;
							
							}
							ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.left_clock_F2.reset_clock();
						}
					
					}
					if(((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.callState == NOTCALLED && (((((FST == FST && 0) || (FST == SND && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.guardState == GUARD_NOTSTARTED && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9)  && ((NONE == NONE && (std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end() || std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), S0) !=shallow_final_choice2B_guard.end())) || (NONE == LEFT && std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end()) || (NONE == RIGHT && std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice2B_guard.autState) !=shallow_final_choice2B_guard.end())))) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.guardState == GUARD_STARTED && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == NONE && (std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end() || std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), S0) !=shallow_final_choice2B_guard.end())) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == LEFT && std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end()) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == RIGHT && std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice2B_guard.autState) !=shallow_final_choice2B_guard.end())))))) || KLEENE_NOTSTARTED == ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.kleeneState) && (FST == FST && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && S0 == S0))) || (FST == FST && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && S0 == S0)))) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.callState == CALLED && (((((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.interruptState == FST && 0) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.interruptState == SND && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.guardState == GUARD_NOTSTARTED && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9)  && ((NONE == NONE && (std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end() || std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), S0) !=shallow_final_choice2B_guard.end())) || (NONE == LEFT && std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end()) || (NONE == RIGHT && std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice2B_guard.autState) !=shallow_final_choice2B_guard.end())))) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.guardState == GUARD_STARTED && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == NONE && (std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end() || std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), S0) !=shallow_final_choice2B_guard.end())) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == LEFT && std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end()) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == RIGHT && std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice2B_guard.autState) !=shallow_final_choice2B_guard.end())))))) || KLEENE_NOTSTARTED == ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.kleeneState) && (FST == FST && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && S0 == S0))) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.interruptState == FST && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_pguardB.ts_C.autState == S0))))))
					{
						if((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.callState == NOTCALLED && (((((FST == FST && 0) || (FST == SND && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.guardState == GUARD_NOTSTARTED && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9)  && ((NONE == NONE && (std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end() || std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), S0) !=shallow_final_choice2B_guard.end())) || (NONE == LEFT && std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end()) || (NONE == RIGHT && std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice2B_guard.autState) !=shallow_final_choice2B_guard.end())))) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.guardState == GUARD_STARTED && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == NONE && (std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end() || std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), S0) !=shallow_final_choice2B_guard.end())) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == LEFT && std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end()) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == RIGHT && std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice2B_guard.autState) !=shallow_final_choice2B_guard.end())))))) || KLEENE_NOTSTARTED == ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.kleeneState) && (FST == FST && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && S0 == S0))) || (FST == FST && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && S0 == S0)))))
						{
							ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.callState = CALLED;
							ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.kleeneState = KLEENE_NOTSTARTED;
							ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.interruptState = FST;
							ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_pguardB.ts_C.autState = S0;
							if(((((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.interruptState == FST && 0) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.interruptState == SND && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.guardState == GUARD_NOTSTARTED && (last_event_time.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9)  && ((NONE == NONE && (std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end() || std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), S0) !=shallow_final_choice2B_guard.end())) || (NONE == LEFT && std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end()) || (NONE == RIGHT && std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice2B_guard.autState) !=shallow_final_choice2B_guard.end())))) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.guardState == GUARD_STARTED && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == NONE && (std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end() || std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), S0) !=shallow_final_choice2B_guard.end())) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == LEFT && std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end()) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == RIGHT && std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice2B_guard.autState) !=shallow_final_choice2B_guard.end())))))) || KLEENE_NOTSTARTED == ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.kleeneState) && (FST == FST && (last_event_time.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && S0 == S0))))
							{
								ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.kleeneState = KLEENE_STARTED;
								ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.interruptState = FST;
								ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_pguardB.ts_C.autState = S0;
								if((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.interruptState == FST && (last_event_time.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_pguardB.ts_C.autState == S0)))
								{
									if((last_event_time.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_pguardB.ts_C.autState == S0))
									{
										if(ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_pguardB.ts_C.autState == S0)
										{
											ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_pguardB.ts_C.autState = S0;
											exec = 1;
										
										}
									
									}
								
								}
							
							}else if((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.interruptState == FST && (last_event_time.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_pguardB.ts_C.autState == S0)))
							{
								ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.kleeneState = KLEENE_STARTED;
								if((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.interruptState == FST && (last_event_time.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_pguardB.ts_C.autState == S0)))
								{
									if((last_event_time.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_pguardB.ts_C.autState == S0))
									{
										if(ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_pguardB.ts_C.autState == S0)
										{
											ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_pguardB.ts_C.autState = S0;
											exec = 1;
										
										}
									
									}
								
								}
							
							}
							ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.right_clock_F1.reset_clock();
						}else if((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.callState == CALLED && (((((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.interruptState == FST && 0) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.interruptState == SND && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.guardState == GUARD_NOTSTARTED && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9)  && ((NONE == NONE && (std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end() || std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), S0) !=shallow_final_choice2B_guard.end())) || (NONE == LEFT && std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end()) || (NONE == RIGHT && std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice2B_guard.autState) !=shallow_final_choice2B_guard.end())))) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.guardState == GUARD_STARTED && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == NONE && (std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end() || std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), S0) !=shallow_final_choice2B_guard.end())) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == LEFT && std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end()) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == RIGHT && std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice2B_guard.autState) !=shallow_final_choice2B_guard.end())))))) || KLEENE_NOTSTARTED == ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.kleeneState) && (FST == FST && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && S0 == S0))) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.interruptState == FST && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_pguardB.ts_C.autState == S0)))))
						{
							if(((((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.interruptState == FST && 0) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.interruptState == SND && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.guardState == GUARD_NOTSTARTED && (last_event_time.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9)  && ((NONE == NONE && (std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end() || std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), S0) !=shallow_final_choice2B_guard.end())) || (NONE == LEFT && std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end()) || (NONE == RIGHT && std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice2B_guard.autState) !=shallow_final_choice2B_guard.end())))) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.guardState == GUARD_STARTED && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == NONE && (std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end() || std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), S0) !=shallow_final_choice2B_guard.end())) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == LEFT && std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end()) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == RIGHT && std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice2B_guard.autState) !=shallow_final_choice2B_guard.end())))))) || KLEENE_NOTSTARTED == ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.kleeneState) && (FST == FST && (last_event_time.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && S0 == S0))))
							{
								ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.kleeneState = KLEENE_STARTED;
								ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.interruptState = FST;
								ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_pguardB.ts_C.autState = S0;
								if((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.interruptState == FST && (last_event_time.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_pguardB.ts_C.autState == S0)))
								{
									if((last_event_time.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_pguardB.ts_C.autState == S0))
									{
										if(ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_pguardB.ts_C.autState == S0)
										{
											ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_pguardB.ts_C.autState = S0;
											exec = 1;
										
										}
									
									}
								
								}
							
							}else if((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.interruptState == FST && (last_event_time.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_pguardB.ts_C.autState == S0)))
							{
								ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.kleeneState = KLEENE_STARTED;
								if((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.interruptState == FST && (last_event_time.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_pguardB.ts_C.autState == S0)))
								{
									if((last_event_time.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_pguardB.ts_C.autState == S0))
									{
										if(ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_pguardB.ts_C.autState == S0)
										{
											ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_pguardB.ts_C.autState = S0;
											exec = 1;
										
										}
									
									}
								
								}
							
							}
							ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.right_clock_F1.reset_clock();
						}
					
					}
				
				}
			
			}else if((ts_J.ts_guardJ.ts_choiceJ_guard.choiceState == RIGHT && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.callState == NOTCALLED && (((NOTCALLED == NOTCALLED && ((S0 == S0 && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F2.ts_E.h <= ts_J.avg - 3 * ts_J.stddev ) || (S0 == S0 && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F2.ts_E.h > ts_J.avg - 3 * ts_J.stddev ))) || (NOTCALLED == CALLED && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F2.ts_E.autState == S0 && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F2.ts_E.h <= ts_J.avg - 3 * ts_J.stddev ) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F2.ts_E.autState == S0 && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F2.ts_E.h > ts_J.avg - 3 * ts_J.stddev )))) || ((NOTCALLED == NOTCALLED && (((((FST == FST && 0) || (FST == SND && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.guardState == GUARD_NOTSTARTED && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9)  && ((NONE == NONE && (std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end() || std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), S0) !=shallow_final_choice2B_guard.end())) || (NONE == LEFT && std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end()) || (NONE == RIGHT && std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice2B_guard.autState) !=shallow_final_choice2B_guard.end())))) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.guardState == GUARD_STARTED && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == NONE && (std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end() || std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), S0) !=shallow_final_choice2B_guard.end())) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == LEFT && std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end()) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == RIGHT && std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice2B_guard.autState) !=shallow_final_choice2B_guard.end())))))) || KLEENE_NOTSTARTED == ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.kleeneState) && (FST == FST && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && S0 == S0))) || (FST == FST && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && S0 == S0)))) || (NOTCALLED == CALLED && (((((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.interruptState == FST && 0) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.interruptState == SND && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.guardState == GUARD_NOTSTARTED && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9)  && ((NONE == NONE && (std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end() || std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), S0) !=shallow_final_choice2B_guard.end())) || (NONE == LEFT && std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end()) || (NONE == RIGHT && std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice2B_guard.autState) !=shallow_final_choice2B_guard.end())))) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.guardState == GUARD_STARTED && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == NONE && (std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end() || std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), S0) !=shallow_final_choice2B_guard.end())) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == LEFT && std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end()) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == RIGHT && std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice2B_guard.autState) !=shallow_final_choice2B_guard.end())))))) || KLEENE_NOTSTARTED == ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.kleeneState) && (FST == FST && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && S0 == S0))) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.interruptState == FST && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_pguardB.ts_C.autState == S0))))))) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.callState == CALLED && (((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F2.callState == NOTCALLED && ((S0 == S0 && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F2.ts_E.h <= ts_J.avg - 3 * ts_J.stddev ) || (S0 == S0 && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F2.ts_E.h > ts_J.avg - 3 * ts_J.stddev ))) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F2.callState == CALLED && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F2.ts_E.autState == S0 && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F2.ts_E.h <= ts_J.avg - 3 * ts_J.stddev ) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F2.ts_E.autState == S0 && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F2.ts_E.h > ts_J.avg - 3 * ts_J.stddev )))) || ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.callState == NOTCALLED && (((((FST == FST && 0) || (FST == SND && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.guardState == GUARD_NOTSTARTED && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9)  && ((NONE == NONE && (std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end() || std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), S0) !=shallow_final_choice2B_guard.end())) || (NONE == LEFT && std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end()) || (NONE == RIGHT && std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice2B_guard.autState) !=shallow_final_choice2B_guard.end())))) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.guardState == GUARD_STARTED && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == NONE && (std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end() || std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), S0) !=shallow_final_choice2B_guard.end())) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == LEFT && std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end()) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == RIGHT && std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice2B_guard.autState) !=shallow_final_choice2B_guard.end())))))) || KLEENE_NOTSTARTED == ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.kleeneState) && (FST == FST && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && S0 == S0))) || (FST == FST && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && S0 == S0)))) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.callState == CALLED && (((((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.interruptState == FST && 0) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.interruptState == SND && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.guardState == GUARD_NOTSTARTED && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9)  && ((NONE == NONE && (std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end() || std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), S0) !=shallow_final_choice2B_guard.end())) || (NONE == LEFT && std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end()) || (NONE == RIGHT && std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice2B_guard.autState) !=shallow_final_choice2B_guard.end())))) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.guardState == GUARD_STARTED && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == NONE && (std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end() || std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), S0) !=shallow_final_choice2B_guard.end())) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == LEFT && std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end()) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == RIGHT && std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice2B_guard.autState) !=shallow_final_choice2B_guard.end())))))) || KLEENE_NOTSTARTED == ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.kleeneState) && (FST == FST && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && S0 == S0))) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.interruptState == FST && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_pguardB.ts_C.autState == S0))))))))))
			{
				if((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.callState == NOTCALLED && (((NOTCALLED == NOTCALLED && ((S0 == S0 && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F2.ts_E.h <= ts_J.avg - 3 * ts_J.stddev ) || (S0 == S0 && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F2.ts_E.h > ts_J.avg - 3 * ts_J.stddev ))) || (NOTCALLED == CALLED && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F2.ts_E.autState == S0 && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F2.ts_E.h <= ts_J.avg - 3 * ts_J.stddev ) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F2.ts_E.autState == S0 && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F2.ts_E.h > ts_J.avg - 3 * ts_J.stddev )))) || ((NOTCALLED == NOTCALLED && (((((FST == FST && 0) || (FST == SND && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.guardState == GUARD_NOTSTARTED && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9)  && ((NONE == NONE && (std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end() || std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), S0) !=shallow_final_choice2B_guard.end())) || (NONE == LEFT && std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end()) || (NONE == RIGHT && std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice2B_guard.autState) !=shallow_final_choice2B_guard.end())))) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.guardState == GUARD_STARTED && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == NONE && (std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end() || std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), S0) !=shallow_final_choice2B_guard.end())) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == LEFT && std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end()) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == RIGHT && std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice2B_guard.autState) !=shallow_final_choice2B_guard.end())))))) || KLEENE_NOTSTARTED == ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.kleeneState) && (FST == FST && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && S0 == S0))) || (FST == FST && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && S0 == S0)))) || (NOTCALLED == CALLED && (((((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.interruptState == FST && 0) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.interruptState == SND && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.guardState == GUARD_NOTSTARTED && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9)  && ((NONE == NONE && (std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end() || std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), S0) !=shallow_final_choice2B_guard.end())) || (NONE == LEFT && std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end()) || (NONE == RIGHT && std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice2B_guard.autState) !=shallow_final_choice2B_guard.end())))) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.guardState == GUARD_STARTED && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == NONE && (std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end() || std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), S0) !=shallow_final_choice2B_guard.end())) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == LEFT && std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end()) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == RIGHT && std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice2B_guard.autState) !=shallow_final_choice2B_guard.end())))))) || KLEENE_NOTSTARTED == ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.kleeneState) && (FST == FST && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && S0 == S0))) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.interruptState == FST && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_pguardB.ts_C.autState == S0))))))))
				{
					ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.callState = CALLED;
					ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.right_clock_F1.reset_clock();
					ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.left_clock_F2.reset_clock();
					ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F2.callState = NOTCALLED;
					ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.callState = NOTCALLED;
					if(((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F2.callState == NOTCALLED && ((S0 == S0 && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F2.ts_E.h <= ts_J.avg - 3 * ts_J.stddev ) || (S0 == S0 && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F2.ts_E.h > ts_J.avg - 3 * ts_J.stddev ))) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F2.callState == CALLED && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F2.ts_E.autState == S0 && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F2.ts_E.h <= ts_J.avg - 3 * ts_J.stddev ) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F2.ts_E.autState == S0 && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F2.ts_E.h > ts_J.avg - 3 * ts_J.stddev )))))
					{
						if((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F2.callState == NOTCALLED && ((S0 == S0 && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F2.ts_E.h <= ts_J.avg - 3 * ts_J.stddev ) || (S0 == S0 && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F2.ts_E.h > ts_J.avg - 3 * ts_J.stddev ))))
						{
							ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F2.callState = CALLED;
							ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F2.ts_E.autState = S0;
							ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F2.ts_E.h.reset_clock();
							if((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F2.ts_E.autState == S0 && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F2.ts_E.h <= ts_J.avg - 3 * ts_J.stddev ))
							{
								Alert(1);ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F2.ts_E.autState = S0;
								exec = 1;
							
							}else if((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F2.ts_E.autState == S0 && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F2.ts_E.h > ts_J.avg - 3 * ts_J.stddev ))
							{
								ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F2.ts_E.h.reset_clock();ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F2.ts_E.autState = S0;
								exec = 1;
							
							}
							ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.left_clock_F2.reset_clock();
						}else if((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F2.callState == CALLED && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F2.ts_E.autState == S0 && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F2.ts_E.h <= ts_J.avg - 3 * ts_J.stddev ) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F2.ts_E.autState == S0 && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F2.ts_E.h > ts_J.avg - 3 * ts_J.stddev ))))
						{
							if((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F2.ts_E.autState == S0 && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F2.ts_E.h <= ts_J.avg - 3 * ts_J.stddev ))
							{
								Alert(1);ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F2.ts_E.autState = S0;
								exec = 1;
							
							}else if((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F2.ts_E.autState == S0 && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F2.ts_E.h > ts_J.avg - 3 * ts_J.stddev ))
							{
								ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F2.ts_E.h.reset_clock();ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F2.ts_E.autState = S0;
								exec = 1;
							
							}
							ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.left_clock_F2.reset_clock();
						}
					
					}
					if(((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.callState == NOTCALLED && (((((FST == FST && 0) || (FST == SND && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.guardState == GUARD_NOTSTARTED && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9)  && ((NONE == NONE && (std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end() || std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), S0) !=shallow_final_choice2B_guard.end())) || (NONE == LEFT && std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end()) || (NONE == RIGHT && std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice2B_guard.autState) !=shallow_final_choice2B_guard.end())))) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.guardState == GUARD_STARTED && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == NONE && (std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end() || std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), S0) !=shallow_final_choice2B_guard.end())) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == LEFT && std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end()) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == RIGHT && std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice2B_guard.autState) !=shallow_final_choice2B_guard.end())))))) || KLEENE_NOTSTARTED == ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.kleeneState) && (FST == FST && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && S0 == S0))) || (FST == FST && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && S0 == S0)))) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.callState == CALLED && (((((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.interruptState == FST && 0) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.interruptState == SND && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.guardState == GUARD_NOTSTARTED && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9)  && ((NONE == NONE && (std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end() || std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), S0) !=shallow_final_choice2B_guard.end())) || (NONE == LEFT && std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end()) || (NONE == RIGHT && std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice2B_guard.autState) !=shallow_final_choice2B_guard.end())))) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.guardState == GUARD_STARTED && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == NONE && (std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end() || std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), S0) !=shallow_final_choice2B_guard.end())) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == LEFT && std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end()) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == RIGHT && std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice2B_guard.autState) !=shallow_final_choice2B_guard.end())))))) || KLEENE_NOTSTARTED == ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.kleeneState) && (FST == FST && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && S0 == S0))) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.interruptState == FST && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_pguardB.ts_C.autState == S0))))))
					{
						if((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.callState == NOTCALLED && (((((FST == FST && 0) || (FST == SND && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.guardState == GUARD_NOTSTARTED && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9)  && ((NONE == NONE && (std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end() || std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), S0) !=shallow_final_choice2B_guard.end())) || (NONE == LEFT && std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end()) || (NONE == RIGHT && std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice2B_guard.autState) !=shallow_final_choice2B_guard.end())))) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.guardState == GUARD_STARTED && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == NONE && (std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end() || std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), S0) !=shallow_final_choice2B_guard.end())) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == LEFT && std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end()) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == RIGHT && std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice2B_guard.autState) !=shallow_final_choice2B_guard.end())))))) || KLEENE_NOTSTARTED == ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.kleeneState) && (FST == FST && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && S0 == S0))) || (FST == FST && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && S0 == S0)))))
						{
							ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.callState = CALLED;
							ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.kleeneState = KLEENE_NOTSTARTED;
							ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.interruptState = FST;
							ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_pguardB.ts_C.autState = S0;
							if(((((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.interruptState == FST && 0) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.interruptState == SND && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.guardState == GUARD_NOTSTARTED && (last_event_time.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9)  && ((NONE == NONE && (std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end() || std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), S0) !=shallow_final_choice2B_guard.end())) || (NONE == LEFT && std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end()) || (NONE == RIGHT && std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice2B_guard.autState) !=shallow_final_choice2B_guard.end())))) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.guardState == GUARD_STARTED && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == NONE && (std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end() || std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), S0) !=shallow_final_choice2B_guard.end())) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == LEFT && std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end()) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == RIGHT && std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice2B_guard.autState) !=shallow_final_choice2B_guard.end())))))) || KLEENE_NOTSTARTED == ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.kleeneState) && (FST == FST && (last_event_time.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && S0 == S0))))
							{
								ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.kleeneState = KLEENE_STARTED;
								ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.interruptState = FST;
								ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_pguardB.ts_C.autState = S0;
								if((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.interruptState == FST && (last_event_time.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_pguardB.ts_C.autState == S0)))
								{
									if((last_event_time.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_pguardB.ts_C.autState == S0))
									{
										if(ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_pguardB.ts_C.autState == S0)
										{
											ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_pguardB.ts_C.autState = S0;
											exec = 1;
										
										}
									
									}
								
								}
							
							}else if((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.interruptState == FST && (last_event_time.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_pguardB.ts_C.autState == S0)))
							{
								ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.kleeneState = KLEENE_STARTED;
								if((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.interruptState == FST && (last_event_time.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_pguardB.ts_C.autState == S0)))
								{
									if((last_event_time.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_pguardB.ts_C.autState == S0))
									{
										if(ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_pguardB.ts_C.autState == S0)
										{
											ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_pguardB.ts_C.autState = S0;
											exec = 1;
										
										}
									
									}
								
								}
							
							}
							ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.right_clock_F1.reset_clock();
						}else if((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.callState == CALLED && (((((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.interruptState == FST && 0) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.interruptState == SND && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.guardState == GUARD_NOTSTARTED && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9)  && ((NONE == NONE && (std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end() || std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), S0) !=shallow_final_choice2B_guard.end())) || (NONE == LEFT && std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end()) || (NONE == RIGHT && std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice2B_guard.autState) !=shallow_final_choice2B_guard.end())))) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.guardState == GUARD_STARTED && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == NONE && (std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end() || std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), S0) !=shallow_final_choice2B_guard.end())) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == LEFT && std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end()) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == RIGHT && std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice2B_guard.autState) !=shallow_final_choice2B_guard.end())))))) || KLEENE_NOTSTARTED == ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.kleeneState) && (FST == FST && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && S0 == S0))) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.interruptState == FST && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_pguardB.ts_C.autState == S0)))))
						{
							if(((((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.interruptState == FST && 0) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.interruptState == SND && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.guardState == GUARD_NOTSTARTED && (last_event_time.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9)  && ((NONE == NONE && (std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end() || std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), S0) !=shallow_final_choice2B_guard.end())) || (NONE == LEFT && std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end()) || (NONE == RIGHT && std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice2B_guard.autState) !=shallow_final_choice2B_guard.end())))) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.guardState == GUARD_STARTED && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == NONE && (std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end() || std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), S0) !=shallow_final_choice2B_guard.end())) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == LEFT && std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end()) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == RIGHT && std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice2B_guard.autState) !=shallow_final_choice2B_guard.end())))))) || KLEENE_NOTSTARTED == ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.kleeneState) && (FST == FST && (last_event_time.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && S0 == S0))))
							{
								ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.kleeneState = KLEENE_STARTED;
								ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.interruptState = FST;
								ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_pguardB.ts_C.autState = S0;
								if((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.interruptState == FST && (last_event_time.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_pguardB.ts_C.autState == S0)))
								{
									if((last_event_time.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_pguardB.ts_C.autState == S0))
									{
										if(ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_pguardB.ts_C.autState == S0)
										{
											ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_pguardB.ts_C.autState = S0;
											exec = 1;
										
										}
									
									}
								
								}
							
							}else if((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.interruptState == FST && (last_event_time.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_pguardB.ts_C.autState == S0)))
							{
								ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.kleeneState = KLEENE_STARTED;
								if((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.interruptState == FST && (last_event_time.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_pguardB.ts_C.autState == S0)))
								{
									if((last_event_time.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_pguardB.ts_C.autState == S0))
									{
										if(ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_pguardB.ts_C.autState == S0)
										{
											ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_pguardB.ts_C.autState = S0;
											exec = 1;
										
										}
									
									}
								
								}
							
							}
							ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.right_clock_F1.reset_clock();
						}
					
					}
				
				}else if((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.callState == CALLED && (((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F2.callState == NOTCALLED && ((S0 == S0 && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F2.ts_E.h <= ts_J.avg - 3 * ts_J.stddev ) || (S0 == S0 && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F2.ts_E.h > ts_J.avg - 3 * ts_J.stddev ))) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F2.callState == CALLED && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F2.ts_E.autState == S0 && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F2.ts_E.h <= ts_J.avg - 3 * ts_J.stddev ) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F2.ts_E.autState == S0 && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F2.ts_E.h > ts_J.avg - 3 * ts_J.stddev )))) || ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.callState == NOTCALLED && (((((FST == FST && 0) || (FST == SND && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.guardState == GUARD_NOTSTARTED && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9)  && ((NONE == NONE && (std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end() || std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), S0) !=shallow_final_choice2B_guard.end())) || (NONE == LEFT && std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end()) || (NONE == RIGHT && std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice2B_guard.autState) !=shallow_final_choice2B_guard.end())))) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.guardState == GUARD_STARTED && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == NONE && (std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end() || std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), S0) !=shallow_final_choice2B_guard.end())) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == LEFT && std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end()) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == RIGHT && std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice2B_guard.autState) !=shallow_final_choice2B_guard.end())))))) || KLEENE_NOTSTARTED == ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.kleeneState) && (FST == FST && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && S0 == S0))) || (FST == FST && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && S0 == S0)))) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.callState == CALLED && (((((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.interruptState == FST && 0) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.interruptState == SND && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.guardState == GUARD_NOTSTARTED && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9)  && ((NONE == NONE && (std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end() || std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), S0) !=shallow_final_choice2B_guard.end())) || (NONE == LEFT && std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end()) || (NONE == RIGHT && std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice2B_guard.autState) !=shallow_final_choice2B_guard.end())))) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.guardState == GUARD_STARTED && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == NONE && (std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end() || std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), S0) !=shallow_final_choice2B_guard.end())) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == LEFT && std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end()) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == RIGHT && std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice2B_guard.autState) !=shallow_final_choice2B_guard.end())))))) || KLEENE_NOTSTARTED == ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.kleeneState) && (FST == FST && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && S0 == S0))) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.interruptState == FST && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_pguardB.ts_C.autState == S0))))))))
				{
					if(((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F2.callState == NOTCALLED && ((S0 == S0 && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F2.ts_E.h <= ts_J.avg - 3 * ts_J.stddev ) || (S0 == S0 && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F2.ts_E.h > ts_J.avg - 3 * ts_J.stddev ))) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F2.callState == CALLED && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F2.ts_E.autState == S0 && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F2.ts_E.h <= ts_J.avg - 3 * ts_J.stddev ) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F2.ts_E.autState == S0 && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F2.ts_E.h > ts_J.avg - 3 * ts_J.stddev )))))
					{
						if((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F2.callState == NOTCALLED && ((S0 == S0 && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F2.ts_E.h <= ts_J.avg - 3 * ts_J.stddev ) || (S0 == S0 && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F2.ts_E.h > ts_J.avg - 3 * ts_J.stddev ))))
						{
							ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F2.callState = CALLED;
							ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F2.ts_E.autState = S0;
							ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F2.ts_E.h.reset_clock();
							if((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F2.ts_E.autState == S0 && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F2.ts_E.h <= ts_J.avg - 3 * ts_J.stddev ))
							{
								Alert(1);ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F2.ts_E.autState = S0;
								exec = 1;
							
							}else if((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F2.ts_E.autState == S0 && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F2.ts_E.h > ts_J.avg - 3 * ts_J.stddev ))
							{
								ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F2.ts_E.h.reset_clock();ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F2.ts_E.autState = S0;
								exec = 1;
							
							}
							ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.left_clock_F2.reset_clock();
						}else if((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F2.callState == CALLED && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F2.ts_E.autState == S0 && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F2.ts_E.h <= ts_J.avg - 3 * ts_J.stddev ) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F2.ts_E.autState == S0 && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F2.ts_E.h > ts_J.avg - 3 * ts_J.stddev ))))
						{
							if((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F2.ts_E.autState == S0 && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F2.ts_E.h <= ts_J.avg - 3 * ts_J.stddev ))
							{
								Alert(1);ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F2.ts_E.autState = S0;
								exec = 1;
							
							}else if((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F2.ts_E.autState == S0 && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F2.ts_E.h > ts_J.avg - 3 * ts_J.stddev ))
							{
								ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F2.ts_E.h.reset_clock();ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F2.ts_E.autState = S0;
								exec = 1;
							
							}
							ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.left_clock_F2.reset_clock();
						}
					
					}
					if(((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.callState == NOTCALLED && (((((FST == FST && 0) || (FST == SND && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.guardState == GUARD_NOTSTARTED && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9)  && ((NONE == NONE && (std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end() || std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), S0) !=shallow_final_choice2B_guard.end())) || (NONE == LEFT && std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end()) || (NONE == RIGHT && std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice2B_guard.autState) !=shallow_final_choice2B_guard.end())))) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.guardState == GUARD_STARTED && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == NONE && (std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end() || std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), S0) !=shallow_final_choice2B_guard.end())) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == LEFT && std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end()) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == RIGHT && std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice2B_guard.autState) !=shallow_final_choice2B_guard.end())))))) || KLEENE_NOTSTARTED == ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.kleeneState) && (FST == FST && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && S0 == S0))) || (FST == FST && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && S0 == S0)))) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.callState == CALLED && (((((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.interruptState == FST && 0) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.interruptState == SND && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.guardState == GUARD_NOTSTARTED && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9)  && ((NONE == NONE && (std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end() || std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), S0) !=shallow_final_choice2B_guard.end())) || (NONE == LEFT && std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end()) || (NONE == RIGHT && std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice2B_guard.autState) !=shallow_final_choice2B_guard.end())))) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.guardState == GUARD_STARTED && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == NONE && (std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end() || std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), S0) !=shallow_final_choice2B_guard.end())) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == LEFT && std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end()) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == RIGHT && std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice2B_guard.autState) !=shallow_final_choice2B_guard.end())))))) || KLEENE_NOTSTARTED == ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.kleeneState) && (FST == FST && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && S0 == S0))) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.interruptState == FST && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_pguardB.ts_C.autState == S0))))))
					{
						if((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.callState == NOTCALLED && (((((FST == FST && 0) || (FST == SND && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.guardState == GUARD_NOTSTARTED && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9)  && ((NONE == NONE && (std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end() || std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), S0) !=shallow_final_choice2B_guard.end())) || (NONE == LEFT && std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end()) || (NONE == RIGHT && std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice2B_guard.autState) !=shallow_final_choice2B_guard.end())))) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.guardState == GUARD_STARTED && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == NONE && (std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end() || std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), S0) !=shallow_final_choice2B_guard.end())) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == LEFT && std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end()) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == RIGHT && std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice2B_guard.autState) !=shallow_final_choice2B_guard.end())))))) || KLEENE_NOTSTARTED == ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.kleeneState) && (FST == FST && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && S0 == S0))) || (FST == FST && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && S0 == S0)))))
						{
							ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.callState = CALLED;
							ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.kleeneState = KLEENE_NOTSTARTED;
							ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.interruptState = FST;
							ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_pguardB.ts_C.autState = S0;
							if(((((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.interruptState == FST && 0) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.interruptState == SND && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.guardState == GUARD_NOTSTARTED && (last_event_time.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9)  && ((NONE == NONE && (std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end() || std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), S0) !=shallow_final_choice2B_guard.end())) || (NONE == LEFT && std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end()) || (NONE == RIGHT && std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice2B_guard.autState) !=shallow_final_choice2B_guard.end())))) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.guardState == GUARD_STARTED && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == NONE && (std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end() || std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), S0) !=shallow_final_choice2B_guard.end())) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == LEFT && std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end()) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == RIGHT && std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice2B_guard.autState) !=shallow_final_choice2B_guard.end())))))) || KLEENE_NOTSTARTED == ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.kleeneState) && (FST == FST && (last_event_time.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && S0 == S0))))
							{
								ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.kleeneState = KLEENE_STARTED;
								ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.interruptState = FST;
								ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_pguardB.ts_C.autState = S0;
								if((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.interruptState == FST && (last_event_time.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_pguardB.ts_C.autState == S0)))
								{
									if((last_event_time.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_pguardB.ts_C.autState == S0))
									{
										if(ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_pguardB.ts_C.autState == S0)
										{
											ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_pguardB.ts_C.autState = S0;
											exec = 1;
										
										}
									
									}
								
								}
							
							}else if((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.interruptState == FST && (last_event_time.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_pguardB.ts_C.autState == S0)))
							{
								ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.kleeneState = KLEENE_STARTED;
								if((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.interruptState == FST && (last_event_time.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_pguardB.ts_C.autState == S0)))
								{
									if((last_event_time.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_pguardB.ts_C.autState == S0))
									{
										if(ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_pguardB.ts_C.autState == S0)
										{
											ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_pguardB.ts_C.autState = S0;
											exec = 1;
										
										}
									
									}
								
								}
							
							}
							ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.right_clock_F1.reset_clock();
						}else if((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.callState == CALLED && (((((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.interruptState == FST && 0) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.interruptState == SND && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.guardState == GUARD_NOTSTARTED && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9)  && ((NONE == NONE && (std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end() || std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), S0) !=shallow_final_choice2B_guard.end())) || (NONE == LEFT && std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end()) || (NONE == RIGHT && std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice2B_guard.autState) !=shallow_final_choice2B_guard.end())))) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.guardState == GUARD_STARTED && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == NONE && (std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end() || std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), S0) !=shallow_final_choice2B_guard.end())) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == LEFT && std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end()) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == RIGHT && std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice2B_guard.autState) !=shallow_final_choice2B_guard.end())))))) || KLEENE_NOTSTARTED == ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.kleeneState) && (FST == FST && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && S0 == S0))) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.interruptState == FST && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_pguardB.ts_C.autState == S0)))))
						{
							if(((((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.interruptState == FST && 0) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.interruptState == SND && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.guardState == GUARD_NOTSTARTED && (last_event_time.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9)  && ((NONE == NONE && (std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end() || std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), S0) !=shallow_final_choice2B_guard.end())) || (NONE == LEFT && std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end()) || (NONE == RIGHT && std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice2B_guard.autState) !=shallow_final_choice2B_guard.end())))) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.guardState == GUARD_STARTED && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == NONE && (std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end() || std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), S0) !=shallow_final_choice2B_guard.end())) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == LEFT && std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end()) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == RIGHT && std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice2B_guard.autState) !=shallow_final_choice2B_guard.end())))))) || KLEENE_NOTSTARTED == ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.kleeneState) && (FST == FST && (last_event_time.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && S0 == S0))))
							{
								ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.kleeneState = KLEENE_STARTED;
								ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.interruptState = FST;
								ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_pguardB.ts_C.autState = S0;
								if((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.interruptState == FST && (last_event_time.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_pguardB.ts_C.autState == S0)))
								{
									if((last_event_time.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_pguardB.ts_C.autState == S0))
									{
										if(ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_pguardB.ts_C.autState == S0)
										{
											ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_pguardB.ts_C.autState = S0;
											exec = 1;
										
										}
									
									}
								
								}
							
							}else if((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.interruptState == FST && (last_event_time.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_pguardB.ts_C.autState == S0)))
							{
								ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.kleeneState = KLEENE_STARTED;
								if((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.interruptState == FST && (last_event_time.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_pguardB.ts_C.autState == S0)))
								{
									if((last_event_time.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_pguardB.ts_C.autState == S0))
									{
										if(ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_pguardB.ts_C.autState == S0)
										{
											ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_pguardB.ts_C.autState = S0;
											exec = 1;
										
										}
									
									}
								
								}
							
							}
							ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.right_clock_F1.reset_clock();
						}
					
					}
				
				}
			
			}
		
		}
	
	}else if((ts_J.interruptState == SND && ((ts_J.ts_guardJ.guardState == GUARD_NOTSTARTED && (ts_J.clock_timed_interrupt.expired(7.2E12)  && ((NONE == NONE && (S0 == J2 && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.callState == NOTCALLED && (((NOTCALLED == NOTCALLED && ((S0 == S0 && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.ts_E.h <= ts_J.avg - 3 * ts_J.stddev ) || (S0 == S0 && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.ts_E.h > ts_J.avg - 3 * ts_J.stddev ))) || (NOTCALLED == CALLED && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.ts_E.autState == S0 && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.ts_E.h <= ts_J.avg - 3 * ts_J.stddev ) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.ts_E.autState == S0 && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.ts_E.h > ts_J.avg - 3 * ts_J.stddev )))) || ((NOTCALLED == NOTCALLED && (((((FST == FST && 0) || (FST == SND && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.guardState == GUARD_NOTSTARTED && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9)  && ((NONE == NONE && (std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end() || std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), S0) !=shallow_final_choice2B_guard.end())) || (NONE == LEFT && std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end()) || (NONE == RIGHT && std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice2B_guard.autState) !=shallow_final_choice2B_guard.end())))) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.guardState == GUARD_STARTED && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == NONE && (std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end() || std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), S0) !=shallow_final_choice2B_guard.end())) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == LEFT && std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end()) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == RIGHT && std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice2B_guard.autState) !=shallow_final_choice2B_guard.end())))))) || KLEENE_NOTSTARTED == ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.kleeneState) && (FST == FST && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && S0 == S0))) || (FST == FST && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && S0 == S0)))) || (NOTCALLED == CALLED && (((((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.interruptState == FST && 0) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.interruptState == SND && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.guardState == GUARD_NOTSTARTED && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9)  && ((NONE == NONE && (std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end() || std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), S0) !=shallow_final_choice2B_guard.end())) || (NONE == LEFT && std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end()) || (NONE == RIGHT && std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice2B_guard.autState) !=shallow_final_choice2B_guard.end())))) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.guardState == GUARD_STARTED && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == NONE && (std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end() || std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), S0) !=shallow_final_choice2B_guard.end())) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == LEFT && std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end()) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == RIGHT && std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice2B_guard.autState) !=shallow_final_choice2B_guard.end())))))) || KLEENE_NOTSTARTED == ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.kleeneState) && (FST == FST && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && S0 == S0))) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.interruptState == FST && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_pguardB.ts_C.autState == S0))))))) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.callState == CALLED && (((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.callState == NOTCALLED && ((S0 == S0 && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.ts_E.h <= ts_J.avg - 3 * ts_J.stddev ) || (S0 == S0 && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.ts_E.h > ts_J.avg - 3 * ts_J.stddev ))) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.callState == CALLED && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.ts_E.autState == S0 && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.ts_E.h <= ts_J.avg - 3 * ts_J.stddev ) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.ts_E.autState == S0 && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.ts_E.h > ts_J.avg - 3 * ts_J.stddev )))) || ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.callState == NOTCALLED && (((((FST == FST && 0) || (FST == SND && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.guardState == GUARD_NOTSTARTED && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9)  && ((NONE == NONE && (std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end() || std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), S0) !=shallow_final_choice2B_guard.end())) || (NONE == LEFT && std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end()) || (NONE == RIGHT && std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice2B_guard.autState) !=shallow_final_choice2B_guard.end())))) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.guardState == GUARD_STARTED && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == NONE && (std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end() || std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), S0) !=shallow_final_choice2B_guard.end())) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == LEFT && std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end()) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == RIGHT && std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice2B_guard.autState) !=shallow_final_choice2B_guard.end())))))) || KLEENE_NOTSTARTED == ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.kleeneState) && (FST == FST && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && S0 == S0))) || (FST == FST && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && S0 == S0)))) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.callState == CALLED && (((((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.interruptState == FST && 0) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.interruptState == SND && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.guardState == GUARD_NOTSTARTED && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9)  && ((NONE == NONE && (std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end() || std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), S0) !=shallow_final_choice2B_guard.end())) || (NONE == LEFT && std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end()) || (NONE == RIGHT && std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice2B_guard.autState) !=shallow_final_choice2B_guard.end())))) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.guardState == GUARD_STARTED && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == NONE && (std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end() || std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), S0) !=shallow_final_choice2B_guard.end())) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == LEFT && std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end()) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == RIGHT && std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice2B_guard.autState) !=shallow_final_choice2B_guard.end())))))) || KLEENE_NOTSTARTED == ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.kleeneState) && (FST == FST && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && S0 == S0))) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.interruptState == FST && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_pguardB.ts_C.autState == S0)))))))))) || (NONE == LEFT && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.autState == J2 && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.callState == NOTCALLED && (((NOTCALLED == NOTCALLED && ((S0 == S0 && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.ts_E.h <= ts_J.avg - 3 * ts_J.stddev ) || (S0 == S0 && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.ts_E.h > ts_J.avg - 3 * ts_J.stddev ))) || (NOTCALLED == CALLED && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.ts_E.autState == S0 && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.ts_E.h <= ts_J.avg - 3 * ts_J.stddev ) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.ts_E.autState == S0 && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.ts_E.h > ts_J.avg - 3 * ts_J.stddev )))) || ((NOTCALLED == NOTCALLED && (((((FST == FST && 0) || (FST == SND && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.guardState == GUARD_NOTSTARTED && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9)  && ((NONE == NONE && (std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end() || std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), S0) !=shallow_final_choice2B_guard.end())) || (NONE == LEFT && std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end()) || (NONE == RIGHT && std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice2B_guard.autState) !=shallow_final_choice2B_guard.end())))) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.guardState == GUARD_STARTED && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == NONE && (std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end() || std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), S0) !=shallow_final_choice2B_guard.end())) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == LEFT && std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end()) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == RIGHT && std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice2B_guard.autState) !=shallow_final_choice2B_guard.end())))))) || KLEENE_NOTSTARTED == ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.kleeneState) && (FST == FST && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && S0 == S0))) || (FST == FST && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && S0 == S0)))) || (NOTCALLED == CALLED && (((((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.interruptState == FST && 0) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.interruptState == SND && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.guardState == GUARD_NOTSTARTED && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9)  && ((NONE == NONE && (std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end() || std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), S0) !=shallow_final_choice2B_guard.end())) || (NONE == LEFT && std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end()) || (NONE == RIGHT && std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice2B_guard.autState) !=shallow_final_choice2B_guard.end())))) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.guardState == GUARD_STARTED && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == NONE && (std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end() || std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), S0) !=shallow_final_choice2B_guard.end())) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == LEFT && std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end()) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == RIGHT && std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice2B_guard.autState) !=shallow_final_choice2B_guard.end())))))) || KLEENE_NOTSTARTED == ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.kleeneState) && (FST == FST && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && S0 == S0))) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.interruptState == FST && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_pguardB.ts_C.autState == S0))))))) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.callState == CALLED && (((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.callState == NOTCALLED && ((S0 == S0 && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.ts_E.h <= ts_J.avg - 3 * ts_J.stddev ) || (S0 == S0 && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.ts_E.h > ts_J.avg - 3 * ts_J.stddev ))) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.callState == CALLED && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.ts_E.autState == S0 && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.ts_E.h <= ts_J.avg - 3 * ts_J.stddev ) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.ts_E.autState == S0 && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.ts_E.h > ts_J.avg - 3 * ts_J.stddev )))) || ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.callState == NOTCALLED && (((((FST == FST && 0) || (FST == SND && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.guardState == GUARD_NOTSTARTED && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9)  && ((NONE == NONE && (std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end() || std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), S0) !=shallow_final_choice2B_guard.end())) || (NONE == LEFT && std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end()) || (NONE == RIGHT && std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice2B_guard.autState) !=shallow_final_choice2B_guard.end())))) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.guardState == GUARD_STARTED && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == NONE && (std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end() || std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), S0) !=shallow_final_choice2B_guard.end())) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == LEFT && std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end()) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == RIGHT && std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice2B_guard.autState) !=shallow_final_choice2B_guard.end())))))) || KLEENE_NOTSTARTED == ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.kleeneState) && (FST == FST && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && S0 == S0))) || (FST == FST && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && S0 == S0)))) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.callState == CALLED && (((((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.interruptState == FST && 0) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.interruptState == SND && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.guardState == GUARD_NOTSTARTED && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9)  && ((NONE == NONE && (std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end() || std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), S0) !=shallow_final_choice2B_guard.end())) || (NONE == LEFT && std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end()) || (NONE == RIGHT && std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice2B_guard.autState) !=shallow_final_choice2B_guard.end())))) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.guardState == GUARD_STARTED && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == NONE && (std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end() || std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), S0) !=shallow_final_choice2B_guard.end())) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == LEFT && std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end()) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == RIGHT && std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice2B_guard.autState) !=shallow_final_choice2B_guard.end())))))) || KLEENE_NOTSTARTED == ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.kleeneState) && (FST == FST && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && S0 == S0))) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.interruptState == FST && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_pguardB.ts_C.autState == S0)))))))))) || (NONE == NONE && ((NOTCALLED == NOTCALLED && (((NOTCALLED == NOTCALLED && ((S0 == S0 && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F2.ts_E.h <= ts_J.avg - 3 * ts_J.stddev ) || (S0 == S0 && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F2.ts_E.h > ts_J.avg - 3 * ts_J.stddev ))) || (NOTCALLED == CALLED && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F2.ts_E.autState == S0 && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F2.ts_E.h <= ts_J.avg - 3 * ts_J.stddev ) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F2.ts_E.autState == S0 && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F2.ts_E.h > ts_J.avg - 3 * ts_J.stddev )))) || ((NOTCALLED == NOTCALLED && (((((FST == FST && 0) || (FST == SND && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.guardState == GUARD_NOTSTARTED && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9)  && ((NONE == NONE && (std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end() || std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), S0) !=shallow_final_choice2B_guard.end())) || (NONE == LEFT && std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end()) || (NONE == RIGHT && std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice2B_guard.autState) !=shallow_final_choice2B_guard.end())))) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.guardState == GUARD_STARTED && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == NONE && (std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end() || std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), S0) !=shallow_final_choice2B_guard.end())) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == LEFT && std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end()) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == RIGHT && std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice2B_guard.autState) !=shallow_final_choice2B_guard.end())))))) || KLEENE_NOTSTARTED == ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.kleeneState) && (FST == FST && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && S0 == S0))) || (FST == FST && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && S0 == S0)))) || (NOTCALLED == CALLED && (((((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.interruptState == FST && 0) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.interruptState == SND && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.guardState == GUARD_NOTSTARTED && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9)  && ((NONE == NONE && (std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end() || std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), S0) !=shallow_final_choice2B_guard.end())) || (NONE == LEFT && std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end()) || (NONE == RIGHT && std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice2B_guard.autState) !=shallow_final_choice2B_guard.end())))) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.guardState == GUARD_STARTED && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == NONE && (std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end() || std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), S0) !=shallow_final_choice2B_guard.end())) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == LEFT && std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end()) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == RIGHT && std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice2B_guard.autState) !=shallow_final_choice2B_guard.end())))))) || KLEENE_NOTSTARTED == ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.kleeneState) && (FST == FST && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && S0 == S0))) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.interruptState == FST && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_pguardB.ts_C.autState == S0))))))) || (NOTCALLED == CALLED && (((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F2.callState == NOTCALLED && ((S0 == S0 && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F2.ts_E.h <= ts_J.avg - 3 * ts_J.stddev ) || (S0 == S0 && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F2.ts_E.h > ts_J.avg - 3 * ts_J.stddev ))) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F2.callState == CALLED && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F2.ts_E.autState == S0 && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F2.ts_E.h <= ts_J.avg - 3 * ts_J.stddev ) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F2.ts_E.autState == S0 && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F2.ts_E.h > ts_J.avg - 3 * ts_J.stddev )))) || ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.callState == NOTCALLED && (((((FST == FST && 0) || (FST == SND && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.guardState == GUARD_NOTSTARTED && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9)  && ((NONE == NONE && (std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end() || std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), S0) !=shallow_final_choice2B_guard.end())) || (NONE == LEFT && std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end()) || (NONE == RIGHT && std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice2B_guard.autState) !=shallow_final_choice2B_guard.end())))) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.guardState == GUARD_STARTED && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == NONE && (std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end() || std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), S0) !=shallow_final_choice2B_guard.end())) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == LEFT && std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end()) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == RIGHT && std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice2B_guard.autState) !=shallow_final_choice2B_guard.end())))))) || KLEENE_NOTSTARTED == ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.kleeneState) && (FST == FST && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && S0 == S0))) || (FST == FST && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && S0 == S0)))) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.callState == CALLED && (((((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.interruptState == FST && 0) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.interruptState == SND && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.guardState == GUARD_NOTSTARTED && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9)  && ((NONE == NONE && (std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end() || std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), S0) !=shallow_final_choice2B_guard.end())) || (NONE == LEFT && std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end()) || (NONE == RIGHT && std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice2B_guard.autState) !=shallow_final_choice2B_guard.end())))) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.guardState == GUARD_STARTED && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == NONE && (std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end() || std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), S0) !=shallow_final_choice2B_guard.end())) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == LEFT && std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end()) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == RIGHT && std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice2B_guard.autState) !=shallow_final_choice2B_guard.end())))))) || KLEENE_NOTSTARTED == ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.kleeneState) && (FST == FST && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && S0 == S0))) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.interruptState == FST && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_pguardB.ts_C.autState == S0))))))))) || (NONE == RIGHT && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.callState == NOTCALLED && (((NOTCALLED == NOTCALLED && ((S0 == S0 && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F2.ts_E.h <= ts_J.avg - 3 * ts_J.stddev ) || (S0 == S0 && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F2.ts_E.h > ts_J.avg - 3 * ts_J.stddev ))) || (NOTCALLED == CALLED && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F2.ts_E.autState == S0 && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F2.ts_E.h <= ts_J.avg - 3 * ts_J.stddev ) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F2.ts_E.autState == S0 && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F2.ts_E.h > ts_J.avg - 3 * ts_J.stddev )))) || ((NOTCALLED == NOTCALLED && (((((FST == FST && 0) || (FST == SND && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.guardState == GUARD_NOTSTARTED && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9)  && ((NONE == NONE && (std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end() || std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), S0) !=shallow_final_choice2B_guard.end())) || (NONE == LEFT && std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end()) || (NONE == RIGHT && std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice2B_guard.autState) !=shallow_final_choice2B_guard.end())))) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.guardState == GUARD_STARTED && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == NONE && (std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end() || std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), S0) !=shallow_final_choice2B_guard.end())) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == LEFT && std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end()) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == RIGHT && std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice2B_guard.autState) !=shallow_final_choice2B_guard.end())))))) || KLEENE_NOTSTARTED == ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.kleeneState) && (FST == FST && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && S0 == S0))) || (FST == FST && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && S0 == S0)))) || (NOTCALLED == CALLED && (((((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.interruptState == FST && 0) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.interruptState == SND && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.guardState == GUARD_NOTSTARTED && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9)  && ((NONE == NONE && (std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end() || std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), S0) !=shallow_final_choice2B_guard.end())) || (NONE == LEFT && std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end()) || (NONE == RIGHT && std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice2B_guard.autState) !=shallow_final_choice2B_guard.end())))) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.guardState == GUARD_STARTED && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == NONE && (std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end() || std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), S0) !=shallow_final_choice2B_guard.end())) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == LEFT && std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end()) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == RIGHT && std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice2B_guard.autState) !=shallow_final_choice2B_guard.end())))))) || KLEENE_NOTSTARTED == ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.kleeneState) && (FST == FST && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && S0 == S0))) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.interruptState == FST && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_pguardB.ts_C.autState == S0))))))) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.callState == CALLED && (((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F2.callState == NOTCALLED && ((S0 == S0 && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F2.ts_E.h <= ts_J.avg - 3 * ts_J.stddev ) || (S0 == S0 && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F2.ts_E.h > ts_J.avg - 3 * ts_J.stddev ))) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F2.callState == CALLED && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F2.ts_E.autState == S0 && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F2.ts_E.h <= ts_J.avg - 3 * ts_J.stddev ) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F2.ts_E.autState == S0 && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F2.ts_E.h > ts_J.avg - 3 * ts_J.stddev )))) || ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.callState == NOTCALLED && (((((FST == FST && 0) || (FST == SND && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.guardState == GUARD_NOTSTARTED && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9)  && ((NONE == NONE && (std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end() || std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), S0) !=shallow_final_choice2B_guard.end())) || (NONE == LEFT && std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end()) || (NONE == RIGHT && std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice2B_guard.autState) !=shallow_final_choice2B_guard.end())))) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.guardState == GUARD_STARTED && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == NONE && (std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end() || std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), S0) !=shallow_final_choice2B_guard.end())) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == LEFT && std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end()) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == RIGHT && std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice2B_guard.autState) !=shallow_final_choice2B_guard.end())))))) || KLEENE_NOTSTARTED == ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.kleeneState) && (FST == FST && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && S0 == S0))) || (FST == FST && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && S0 == S0)))) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.callState == CALLED && (((((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.interruptState == FST && 0) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.interruptState == SND && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.guardState == GUARD_NOTSTARTED && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9)  && ((NONE == NONE && (std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end() || std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), S0) !=shallow_final_choice2B_guard.end())) || (NONE == LEFT && std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end()) || (NONE == RIGHT && std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice2B_guard.autState) !=shallow_final_choice2B_guard.end())))) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.guardState == GUARD_STARTED && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == NONE && (std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end() || std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), S0) !=shallow_final_choice2B_guard.end())) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == LEFT && std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end()) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == RIGHT && std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice2B_guard.autState) !=shallow_final_choice2B_guard.end())))))) || KLEENE_NOTSTARTED == ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.kleeneState) && (FST == FST && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && S0 == S0))) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.interruptState == FST && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_pguardB.ts_C.autState == S0)))))))))))) || (ts_J.ts_guardJ.guardState == GUARD_STARTED && ((ts_J.ts_guardJ.ts_choiceJ_guard.choiceState == NONE && (S0 == J2 && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.callState == NOTCALLED && (((NOTCALLED == NOTCALLED && ((S0 == S0 && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.ts_E.h <= ts_J.avg - 3 * ts_J.stddev ) || (S0 == S0 && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.ts_E.h > ts_J.avg - 3 * ts_J.stddev ))) || (NOTCALLED == CALLED && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.ts_E.autState == S0 && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.ts_E.h <= ts_J.avg - 3 * ts_J.stddev ) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.ts_E.autState == S0 && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.ts_E.h > ts_J.avg - 3 * ts_J.stddev )))) || ((NOTCALLED == NOTCALLED && (((((FST == FST && 0) || (FST == SND && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.guardState == GUARD_NOTSTARTED && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9)  && ((NONE == NONE && (std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end() || std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), S0) !=shallow_final_choice2B_guard.end())) || (NONE == LEFT && std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end()) || (NONE == RIGHT && std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice2B_guard.autState) !=shallow_final_choice2B_guard.end())))) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.guardState == GUARD_STARTED && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == NONE && (std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end() || std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), S0) !=shallow_final_choice2B_guard.end())) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == LEFT && std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end()) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == RIGHT && std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice2B_guard.autState) !=shallow_final_choice2B_guard.end())))))) || KLEENE_NOTSTARTED == ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.kleeneState) && (FST == FST && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && S0 == S0))) || (FST == FST && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && S0 == S0)))) || (NOTCALLED == CALLED && (((((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.interruptState == FST && 0) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.interruptState == SND && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.guardState == GUARD_NOTSTARTED && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9)  && ((NONE == NONE && (std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end() || std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), S0) !=shallow_final_choice2B_guard.end())) || (NONE == LEFT && std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end()) || (NONE == RIGHT && std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice2B_guard.autState) !=shallow_final_choice2B_guard.end())))) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.guardState == GUARD_STARTED && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == NONE && (std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end() || std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), S0) !=shallow_final_choice2B_guard.end())) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == LEFT && std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end()) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == RIGHT && std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice2B_guard.autState) !=shallow_final_choice2B_guard.end())))))) || KLEENE_NOTSTARTED == ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.kleeneState) && (FST == FST && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && S0 == S0))) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.interruptState == FST && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_pguardB.ts_C.autState == S0))))))) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.callState == CALLED && (((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.callState == NOTCALLED && ((S0 == S0 && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.ts_E.h <= ts_J.avg - 3 * ts_J.stddev ) || (S0 == S0 && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.ts_E.h > ts_J.avg - 3 * ts_J.stddev ))) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.callState == CALLED && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.ts_E.autState == S0 && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.ts_E.h <= ts_J.avg - 3 * ts_J.stddev ) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.ts_E.autState == S0 && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.ts_E.h > ts_J.avg - 3 * ts_J.stddev )))) || ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.callState == NOTCALLED && (((((FST == FST && 0) || (FST == SND && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.guardState == GUARD_NOTSTARTED && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9)  && ((NONE == NONE && (std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end() || std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), S0) !=shallow_final_choice2B_guard.end())) || (NONE == LEFT && std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end()) || (NONE == RIGHT && std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice2B_guard.autState) !=shallow_final_choice2B_guard.end())))) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.guardState == GUARD_STARTED && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == NONE && (std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end() || std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), S0) !=shallow_final_choice2B_guard.end())) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == LEFT && std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end()) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == RIGHT && std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice2B_guard.autState) !=shallow_final_choice2B_guard.end())))))) || KLEENE_NOTSTARTED == ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.kleeneState) && (FST == FST && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && S0 == S0))) || (FST == FST && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && S0 == S0)))) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.callState == CALLED && (((((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.interruptState == FST && 0) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.interruptState == SND && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.guardState == GUARD_NOTSTARTED && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9)  && ((NONE == NONE && (std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end() || std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), S0) !=shallow_final_choice2B_guard.end())) || (NONE == LEFT && std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end()) || (NONE == RIGHT && std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice2B_guard.autState) !=shallow_final_choice2B_guard.end())))) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.guardState == GUARD_STARTED && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == NONE && (std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end() || std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), S0) !=shallow_final_choice2B_guard.end())) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == LEFT && std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end()) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == RIGHT && std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice2B_guard.autState) !=shallow_final_choice2B_guard.end())))))) || KLEENE_NOTSTARTED == ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.kleeneState) && (FST == FST && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && S0 == S0))) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.interruptState == FST && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_pguardB.ts_C.autState == S0)))))))))) || (ts_J.ts_guardJ.ts_choiceJ_guard.choiceState == LEFT && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.autState == J2 && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.callState == NOTCALLED && (((NOTCALLED == NOTCALLED && ((S0 == S0 && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.ts_E.h <= ts_J.avg - 3 * ts_J.stddev ) || (S0 == S0 && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.ts_E.h > ts_J.avg - 3 * ts_J.stddev ))) || (NOTCALLED == CALLED && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.ts_E.autState == S0 && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.ts_E.h <= ts_J.avg - 3 * ts_J.stddev ) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.ts_E.autState == S0 && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.ts_E.h > ts_J.avg - 3 * ts_J.stddev )))) || ((NOTCALLED == NOTCALLED && (((((FST == FST && 0) || (FST == SND && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.guardState == GUARD_NOTSTARTED && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9)  && ((NONE == NONE && (std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end() || std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), S0) !=shallow_final_choice2B_guard.end())) || (NONE == LEFT && std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end()) || (NONE == RIGHT && std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice2B_guard.autState) !=shallow_final_choice2B_guard.end())))) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.guardState == GUARD_STARTED && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == NONE && (std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end() || std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), S0) !=shallow_final_choice2B_guard.end())) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == LEFT && std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end()) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == RIGHT && std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice2B_guard.autState) !=shallow_final_choice2B_guard.end())))))) || KLEENE_NOTSTARTED == ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.kleeneState) && (FST == FST && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && S0 == S0))) || (FST == FST && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && S0 == S0)))) || (NOTCALLED == CALLED && (((((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.interruptState == FST && 0) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.interruptState == SND && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.guardState == GUARD_NOTSTARTED && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9)  && ((NONE == NONE && (std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end() || std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), S0) !=shallow_final_choice2B_guard.end())) || (NONE == LEFT && std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end()) || (NONE == RIGHT && std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice2B_guard.autState) !=shallow_final_choice2B_guard.end())))) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.guardState == GUARD_STARTED && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == NONE && (std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end() || std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), S0) !=shallow_final_choice2B_guard.end())) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == LEFT && std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end()) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == RIGHT && std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice2B_guard.autState) !=shallow_final_choice2B_guard.end())))))) || KLEENE_NOTSTARTED == ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.kleeneState) && (FST == FST && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && S0 == S0))) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.interruptState == FST && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_pguardB.ts_C.autState == S0))))))) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.callState == CALLED && (((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.callState == NOTCALLED && ((S0 == S0 && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.ts_E.h <= ts_J.avg - 3 * ts_J.stddev ) || (S0 == S0 && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.ts_E.h > ts_J.avg - 3 * ts_J.stddev ))) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.callState == CALLED && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.ts_E.autState == S0 && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.ts_E.h <= ts_J.avg - 3 * ts_J.stddev ) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.ts_E.autState == S0 && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.ts_E.h > ts_J.avg - 3 * ts_J.stddev )))) || ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.callState == NOTCALLED && (((((FST == FST && 0) || (FST == SND && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.guardState == GUARD_NOTSTARTED && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9)  && ((NONE == NONE && (std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end() || std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), S0) !=shallow_final_choice2B_guard.end())) || (NONE == LEFT && std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end()) || (NONE == RIGHT && std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice2B_guard.autState) !=shallow_final_choice2B_guard.end())))) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.guardState == GUARD_STARTED && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == NONE && (std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end() || std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), S0) !=shallow_final_choice2B_guard.end())) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == LEFT && std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end()) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == RIGHT && std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice2B_guard.autState) !=shallow_final_choice2B_guard.end())))))) || KLEENE_NOTSTARTED == ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.kleeneState) && (FST == FST && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && S0 == S0))) || (FST == FST && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && S0 == S0)))) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.callState == CALLED && (((((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.interruptState == FST && 0) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.interruptState == SND && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.guardState == GUARD_NOTSTARTED && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9)  && ((NONE == NONE && (std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end() || std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), S0) !=shallow_final_choice2B_guard.end())) || (NONE == LEFT && std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end()) || (NONE == RIGHT && std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice2B_guard.autState) !=shallow_final_choice2B_guard.end())))) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.guardState == GUARD_STARTED && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == NONE && (std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end() || std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), S0) !=shallow_final_choice2B_guard.end())) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == LEFT && std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end()) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == RIGHT && std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice2B_guard.autState) !=shallow_final_choice2B_guard.end())))))) || KLEENE_NOTSTARTED == ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.kleeneState) && (FST == FST && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && S0 == S0))) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.interruptState == FST && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_pguardB.ts_C.autState == S0)))))))))) || (ts_J.ts_guardJ.ts_choiceJ_guard.choiceState == NONE && ((NOTCALLED == NOTCALLED && (((NOTCALLED == NOTCALLED && ((S0 == S0 && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F2.ts_E.h <= ts_J.avg - 3 * ts_J.stddev ) || (S0 == S0 && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F2.ts_E.h > ts_J.avg - 3 * ts_J.stddev ))) || (NOTCALLED == CALLED && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F2.ts_E.autState == S0 && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F2.ts_E.h <= ts_J.avg - 3 * ts_J.stddev ) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F2.ts_E.autState == S0 && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F2.ts_E.h > ts_J.avg - 3 * ts_J.stddev )))) || ((NOTCALLED == NOTCALLED && (((((FST == FST && 0) || (FST == SND && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.guardState == GUARD_NOTSTARTED && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9)  && ((NONE == NONE && (std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end() || std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), S0) !=shallow_final_choice2B_guard.end())) || (NONE == LEFT && std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end()) || (NONE == RIGHT && std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice2B_guard.autState) !=shallow_final_choice2B_guard.end())))) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.guardState == GUARD_STARTED && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == NONE && (std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end() || std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), S0) !=shallow_final_choice2B_guard.end())) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == LEFT && std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end()) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == RIGHT && std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice2B_guard.autState) !=shallow_final_choice2B_guard.end())))))) || KLEENE_NOTSTARTED == ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.kleeneState) && (FST == FST && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && S0 == S0))) || (FST == FST && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && S0 == S0)))) || (NOTCALLED == CALLED && (((((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.interruptState == FST && 0) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.interruptState == SND && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.guardState == GUARD_NOTSTARTED && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9)  && ((NONE == NONE && (std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end() || std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), S0) !=shallow_final_choice2B_guard.end())) || (NONE == LEFT && std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end()) || (NONE == RIGHT && std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice2B_guard.autState) !=shallow_final_choice2B_guard.end())))) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.guardState == GUARD_STARTED && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == NONE && (std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end() || std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), S0) !=shallow_final_choice2B_guard.end())) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == LEFT && std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end()) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == RIGHT && std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice2B_guard.autState) !=shallow_final_choice2B_guard.end())))))) || KLEENE_NOTSTARTED == ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.kleeneState) && (FST == FST && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && S0 == S0))) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.interruptState == FST && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_pguardB.ts_C.autState == S0))))))) || (NOTCALLED == CALLED && (((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F2.callState == NOTCALLED && ((S0 == S0 && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F2.ts_E.h <= ts_J.avg - 3 * ts_J.stddev ) || (S0 == S0 && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F2.ts_E.h > ts_J.avg - 3 * ts_J.stddev ))) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F2.callState == CALLED && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F2.ts_E.autState == S0 && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F2.ts_E.h <= ts_J.avg - 3 * ts_J.stddev ) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F2.ts_E.autState == S0 && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F2.ts_E.h > ts_J.avg - 3 * ts_J.stddev )))) || ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.callState == NOTCALLED && (((((FST == FST && 0) || (FST == SND && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.guardState == GUARD_NOTSTARTED && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9)  && ((NONE == NONE && (std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end() || std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), S0) !=shallow_final_choice2B_guard.end())) || (NONE == LEFT && std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end()) || (NONE == RIGHT && std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice2B_guard.autState) !=shallow_final_choice2B_guard.end())))) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.guardState == GUARD_STARTED && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == NONE && (std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end() || std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), S0) !=shallow_final_choice2B_guard.end())) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == LEFT && std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end()) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == RIGHT && std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice2B_guard.autState) !=shallow_final_choice2B_guard.end())))))) || KLEENE_NOTSTARTED == ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.kleeneState) && (FST == FST && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && S0 == S0))) || (FST == FST && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && S0 == S0)))) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.callState == CALLED && (((((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.interruptState == FST && 0) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.interruptState == SND && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.guardState == GUARD_NOTSTARTED && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9)  && ((NONE == NONE && (std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end() || std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), S0) !=shallow_final_choice2B_guard.end())) || (NONE == LEFT && std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end()) || (NONE == RIGHT && std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice2B_guard.autState) !=shallow_final_choice2B_guard.end())))) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.guardState == GUARD_STARTED && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == NONE && (std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end() || std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), S0) !=shallow_final_choice2B_guard.end())) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == LEFT && std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end()) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == RIGHT && std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice2B_guard.autState) !=shallow_final_choice2B_guard.end())))))) || KLEENE_NOTSTARTED == ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.kleeneState) && (FST == FST && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && S0 == S0))) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.interruptState == FST && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_pguardB.ts_C.autState == S0))))))))) || (ts_J.ts_guardJ.ts_choiceJ_guard.choiceState == RIGHT && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.callState == NOTCALLED && (((NOTCALLED == NOTCALLED && ((S0 == S0 && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F2.ts_E.h <= ts_J.avg - 3 * ts_J.stddev ) || (S0 == S0 && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F2.ts_E.h > ts_J.avg - 3 * ts_J.stddev ))) || (NOTCALLED == CALLED && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F2.ts_E.autState == S0 && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F2.ts_E.h <= ts_J.avg - 3 * ts_J.stddev ) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F2.ts_E.autState == S0 && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F2.ts_E.h > ts_J.avg - 3 * ts_J.stddev )))) || ((NOTCALLED == NOTCALLED && (((((FST == FST && 0) || (FST == SND && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.guardState == GUARD_NOTSTARTED && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9)  && ((NONE == NONE && (std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end() || std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), S0) !=shallow_final_choice2B_guard.end())) || (NONE == LEFT && std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end()) || (NONE == RIGHT && std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice2B_guard.autState) !=shallow_final_choice2B_guard.end())))) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.guardState == GUARD_STARTED && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == NONE && (std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end() || std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), S0) !=shallow_final_choice2B_guard.end())) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == LEFT && std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end()) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == RIGHT && std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice2B_guard.autState) !=shallow_final_choice2B_guard.end())))))) || KLEENE_NOTSTARTED == ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.kleeneState) && (FST == FST && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && S0 == S0))) || (FST == FST && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && S0 == S0)))) || (NOTCALLED == CALLED && (((((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.interruptState == FST && 0) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.interruptState == SND && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.guardState == GUARD_NOTSTARTED && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9)  && ((NONE == NONE && (std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end() || std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), S0) !=shallow_final_choice2B_guard.end())) || (NONE == LEFT && std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end()) || (NONE == RIGHT && std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice2B_guard.autState) !=shallow_final_choice2B_guard.end())))) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.guardState == GUARD_STARTED && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == NONE && (std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end() || std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), S0) !=shallow_final_choice2B_guard.end())) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == LEFT && std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end()) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == RIGHT && std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice2B_guard.autState) !=shallow_final_choice2B_guard.end())))))) || KLEENE_NOTSTARTED == ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.kleeneState) && (FST == FST && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && S0 == S0))) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.interruptState == FST && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_pguardB.ts_C.autState == S0))))))) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.callState == CALLED && (((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F2.callState == NOTCALLED && ((S0 == S0 && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F2.ts_E.h <= ts_J.avg - 3 * ts_J.stddev ) || (S0 == S0 && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F2.ts_E.h > ts_J.avg - 3 * ts_J.stddev ))) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F2.callState == CALLED && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F2.ts_E.autState == S0 && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F2.ts_E.h <= ts_J.avg - 3 * ts_J.stddev ) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F2.ts_E.autState == S0 && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F2.ts_E.h > ts_J.avg - 3 * ts_J.stddev )))) || ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.callState == NOTCALLED && (((((FST == FST && 0) || (FST == SND && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.guardState == GUARD_NOTSTARTED && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9)  && ((NONE == NONE && (std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end() || std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), S0) !=shallow_final_choice2B_guard.end())) || (NONE == LEFT && std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end()) || (NONE == RIGHT && std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice2B_guard.autState) !=shallow_final_choice2B_guard.end())))) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.guardState == GUARD_STARTED && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == NONE && (std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end() || std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), S0) !=shallow_final_choice2B_guard.end())) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == LEFT && std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end()) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == RIGHT && std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice2B_guard.autState) !=shallow_final_choice2B_guard.end())))))) || KLEENE_NOTSTARTED == ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.kleeneState) && (FST == FST && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && S0 == S0))) || (FST == FST && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && S0 == S0)))) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.callState == CALLED && (((((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.interruptState == FST && 0) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.interruptState == SND && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.guardState == GUARD_NOTSTARTED && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9)  && ((NONE == NONE && (std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end() || std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), S0) !=shallow_final_choice2B_guard.end())) || (NONE == LEFT && std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end()) || (NONE == RIGHT && std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice2B_guard.autState) !=shallow_final_choice2B_guard.end())))) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.guardState == GUARD_STARTED && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == NONE && (std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end() || std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), S0) !=shallow_final_choice2B_guard.end())) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == LEFT && std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end()) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == RIGHT && std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice2B_guard.autState) !=shallow_final_choice2B_guard.end())))))) || KLEENE_NOTSTARTED == ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.kleeneState) && (FST == FST && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && S0 == S0))) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.interruptState == FST && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_pguardB.ts_C.autState == S0))))))))))))))
	{
		if((ts_J.ts_guardJ.guardState == GUARD_NOTSTARTED && (ts_J.clock_timed_interrupt.expired(7.2E12)  && ((NONE == NONE && (S0 == J2 && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.callState == NOTCALLED && (((NOTCALLED == NOTCALLED && ((S0 == S0 && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.ts_E.h <= ts_J.avg - 3 * ts_J.stddev ) || (S0 == S0 && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.ts_E.h > ts_J.avg - 3 * ts_J.stddev ))) || (NOTCALLED == CALLED && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.ts_E.autState == S0 && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.ts_E.h <= ts_J.avg - 3 * ts_J.stddev ) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.ts_E.autState == S0 && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.ts_E.h > ts_J.avg - 3 * ts_J.stddev )))) || ((NOTCALLED == NOTCALLED && (((((FST == FST && 0) || (FST == SND && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.guardState == GUARD_NOTSTARTED && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9)  && ((NONE == NONE && (std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end() || std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), S0) !=shallow_final_choice2B_guard.end())) || (NONE == LEFT && std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end()) || (NONE == RIGHT && std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice2B_guard.autState) !=shallow_final_choice2B_guard.end())))) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.guardState == GUARD_STARTED && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == NONE && (std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end() || std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), S0) !=shallow_final_choice2B_guard.end())) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == LEFT && std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end()) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == RIGHT && std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice2B_guard.autState) !=shallow_final_choice2B_guard.end())))))) || KLEENE_NOTSTARTED == ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.kleeneState) && (FST == FST && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && S0 == S0))) || (FST == FST && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && S0 == S0)))) || (NOTCALLED == CALLED && (((((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.interruptState == FST && 0) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.interruptState == SND && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.guardState == GUARD_NOTSTARTED && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9)  && ((NONE == NONE && (std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end() || std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), S0) !=shallow_final_choice2B_guard.end())) || (NONE == LEFT && std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end()) || (NONE == RIGHT && std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice2B_guard.autState) !=shallow_final_choice2B_guard.end())))) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.guardState == GUARD_STARTED && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == NONE && (std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end() || std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), S0) !=shallow_final_choice2B_guard.end())) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == LEFT && std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end()) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == RIGHT && std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice2B_guard.autState) !=shallow_final_choice2B_guard.end())))))) || KLEENE_NOTSTARTED == ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.kleeneState) && (FST == FST && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && S0 == S0))) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.interruptState == FST && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_pguardB.ts_C.autState == S0))))))) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.callState == CALLED && (((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.callState == NOTCALLED && ((S0 == S0 && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.ts_E.h <= ts_J.avg - 3 * ts_J.stddev ) || (S0 == S0 && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.ts_E.h > ts_J.avg - 3 * ts_J.stddev ))) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.callState == CALLED && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.ts_E.autState == S0 && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.ts_E.h <= ts_J.avg - 3 * ts_J.stddev ) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.ts_E.autState == S0 && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.ts_E.h > ts_J.avg - 3 * ts_J.stddev )))) || ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.callState == NOTCALLED && (((((FST == FST && 0) || (FST == SND && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.guardState == GUARD_NOTSTARTED && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9)  && ((NONE == NONE && (std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end() || std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), S0) !=shallow_final_choice2B_guard.end())) || (NONE == LEFT && std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end()) || (NONE == RIGHT && std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice2B_guard.autState) !=shallow_final_choice2B_guard.end())))) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.guardState == GUARD_STARTED && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == NONE && (std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end() || std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), S0) !=shallow_final_choice2B_guard.end())) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == LEFT && std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end()) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == RIGHT && std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice2B_guard.autState) !=shallow_final_choice2B_guard.end())))))) || KLEENE_NOTSTARTED == ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.kleeneState) && (FST == FST && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && S0 == S0))) || (FST == FST && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && S0 == S0)))) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.callState == CALLED && (((((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.interruptState == FST && 0) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.interruptState == SND && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.guardState == GUARD_NOTSTARTED && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9)  && ((NONE == NONE && (std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end() || std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), S0) !=shallow_final_choice2B_guard.end())) || (NONE == LEFT && std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end()) || (NONE == RIGHT && std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice2B_guard.autState) !=shallow_final_choice2B_guard.end())))) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.guardState == GUARD_STARTED && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == NONE && (std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end() || std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), S0) !=shallow_final_choice2B_guard.end())) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == LEFT && std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end()) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == RIGHT && std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice2B_guard.autState) !=shallow_final_choice2B_guard.end())))))) || KLEENE_NOTSTARTED == ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.kleeneState) && (FST == FST && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && S0 == S0))) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.interruptState == FST && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_pguardB.ts_C.autState == S0)))))))))) || (NONE == LEFT && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.autState == J2 && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.callState == NOTCALLED && (((NOTCALLED == NOTCALLED && ((S0 == S0 && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.ts_E.h <= ts_J.avg - 3 * ts_J.stddev ) || (S0 == S0 && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.ts_E.h > ts_J.avg - 3 * ts_J.stddev ))) || (NOTCALLED == CALLED && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.ts_E.autState == S0 && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.ts_E.h <= ts_J.avg - 3 * ts_J.stddev ) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.ts_E.autState == S0 && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.ts_E.h > ts_J.avg - 3 * ts_J.stddev )))) || ((NOTCALLED == NOTCALLED && (((((FST == FST && 0) || (FST == SND && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.guardState == GUARD_NOTSTARTED && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9)  && ((NONE == NONE && (std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end() || std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), S0) !=shallow_final_choice2B_guard.end())) || (NONE == LEFT && std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end()) || (NONE == RIGHT && std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice2B_guard.autState) !=shallow_final_choice2B_guard.end())))) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.guardState == GUARD_STARTED && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == NONE && (std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end() || std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), S0) !=shallow_final_choice2B_guard.end())) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == LEFT && std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end()) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == RIGHT && std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice2B_guard.autState) !=shallow_final_choice2B_guard.end())))))) || KLEENE_NOTSTARTED == ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.kleeneState) && (FST == FST && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && S0 == S0))) || (FST == FST && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && S0 == S0)))) || (NOTCALLED == CALLED && (((((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.interruptState == FST && 0) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.interruptState == SND && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.guardState == GUARD_NOTSTARTED && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9)  && ((NONE == NONE && (std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end() || std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), S0) !=shallow_final_choice2B_guard.end())) || (NONE == LEFT && std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end()) || (NONE == RIGHT && std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice2B_guard.autState) !=shallow_final_choice2B_guard.end())))) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.guardState == GUARD_STARTED && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == NONE && (std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end() || std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), S0) !=shallow_final_choice2B_guard.end())) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == LEFT && std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end()) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == RIGHT && std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice2B_guard.autState) !=shallow_final_choice2B_guard.end())))))) || KLEENE_NOTSTARTED == ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.kleeneState) && (FST == FST && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && S0 == S0))) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.interruptState == FST && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_pguardB.ts_C.autState == S0))))))) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.callState == CALLED && (((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.callState == NOTCALLED && ((S0 == S0 && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.ts_E.h <= ts_J.avg - 3 * ts_J.stddev ) || (S0 == S0 && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.ts_E.h > ts_J.avg - 3 * ts_J.stddev ))) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.callState == CALLED && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.ts_E.autState == S0 && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.ts_E.h <= ts_J.avg - 3 * ts_J.stddev ) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.ts_E.autState == S0 && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.ts_E.h > ts_J.avg - 3 * ts_J.stddev )))) || ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.callState == NOTCALLED && (((((FST == FST && 0) || (FST == SND && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.guardState == GUARD_NOTSTARTED && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9)  && ((NONE == NONE && (std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end() || std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), S0) !=shallow_final_choice2B_guard.end())) || (NONE == LEFT && std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end()) || (NONE == RIGHT && std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice2B_guard.autState) !=shallow_final_choice2B_guard.end())))) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.guardState == GUARD_STARTED && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == NONE && (std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end() || std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), S0) !=shallow_final_choice2B_guard.end())) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == LEFT && std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end()) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == RIGHT && std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice2B_guard.autState) !=shallow_final_choice2B_guard.end())))))) || KLEENE_NOTSTARTED == ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.kleeneState) && (FST == FST && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && S0 == S0))) || (FST == FST && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && S0 == S0)))) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.callState == CALLED && (((((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.interruptState == FST && 0) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.interruptState == SND && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.guardState == GUARD_NOTSTARTED && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9)  && ((NONE == NONE && (std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end() || std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), S0) !=shallow_final_choice2B_guard.end())) || (NONE == LEFT && std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end()) || (NONE == RIGHT && std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice2B_guard.autState) !=shallow_final_choice2B_guard.end())))) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.guardState == GUARD_STARTED && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == NONE && (std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end() || std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), S0) !=shallow_final_choice2B_guard.end())) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == LEFT && std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end()) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == RIGHT && std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice2B_guard.autState) !=shallow_final_choice2B_guard.end())))))) || KLEENE_NOTSTARTED == ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.kleeneState) && (FST == FST && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && S0 == S0))) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.interruptState == FST && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_pguardB.ts_C.autState == S0)))))))))) || (NONE == NONE && ((NOTCALLED == NOTCALLED && (((NOTCALLED == NOTCALLED && ((S0 == S0 && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F2.ts_E.h <= ts_J.avg - 3 * ts_J.stddev ) || (S0 == S0 && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F2.ts_E.h > ts_J.avg - 3 * ts_J.stddev ))) || (NOTCALLED == CALLED && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F2.ts_E.autState == S0 && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F2.ts_E.h <= ts_J.avg - 3 * ts_J.stddev ) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F2.ts_E.autState == S0 && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F2.ts_E.h > ts_J.avg - 3 * ts_J.stddev )))) || ((NOTCALLED == NOTCALLED && (((((FST == FST && 0) || (FST == SND && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.guardState == GUARD_NOTSTARTED && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9)  && ((NONE == NONE && (std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end() || std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), S0) !=shallow_final_choice2B_guard.end())) || (NONE == LEFT && std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end()) || (NONE == RIGHT && std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice2B_guard.autState) !=shallow_final_choice2B_guard.end())))) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.guardState == GUARD_STARTED && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == NONE && (std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end() || std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), S0) !=shallow_final_choice2B_guard.end())) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == LEFT && std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end()) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == RIGHT && std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice2B_guard.autState) !=shallow_final_choice2B_guard.end())))))) || KLEENE_NOTSTARTED == ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.kleeneState) && (FST == FST && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && S0 == S0))) || (FST == FST && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && S0 == S0)))) || (NOTCALLED == CALLED && (((((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.interruptState == FST && 0) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.interruptState == SND && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.guardState == GUARD_NOTSTARTED && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9)  && ((NONE == NONE && (std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end() || std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), S0) !=shallow_final_choice2B_guard.end())) || (NONE == LEFT && std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end()) || (NONE == RIGHT && std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice2B_guard.autState) !=shallow_final_choice2B_guard.end())))) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.guardState == GUARD_STARTED && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == NONE && (std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end() || std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), S0) !=shallow_final_choice2B_guard.end())) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == LEFT && std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end()) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == RIGHT && std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice2B_guard.autState) !=shallow_final_choice2B_guard.end())))))) || KLEENE_NOTSTARTED == ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.kleeneState) && (FST == FST && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && S0 == S0))) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.interruptState == FST && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_pguardB.ts_C.autState == S0))))))) || (NOTCALLED == CALLED && (((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F2.callState == NOTCALLED && ((S0 == S0 && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F2.ts_E.h <= ts_J.avg - 3 * ts_J.stddev ) || (S0 == S0 && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F2.ts_E.h > ts_J.avg - 3 * ts_J.stddev ))) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F2.callState == CALLED && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F2.ts_E.autState == S0 && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F2.ts_E.h <= ts_J.avg - 3 * ts_J.stddev ) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F2.ts_E.autState == S0 && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F2.ts_E.h > ts_J.avg - 3 * ts_J.stddev )))) || ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.callState == NOTCALLED && (((((FST == FST && 0) || (FST == SND && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.guardState == GUARD_NOTSTARTED && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9)  && ((NONE == NONE && (std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end() || std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), S0) !=shallow_final_choice2B_guard.end())) || (NONE == LEFT && std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end()) || (NONE == RIGHT && std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice2B_guard.autState) !=shallow_final_choice2B_guard.end())))) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.guardState == GUARD_STARTED && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == NONE && (std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end() || std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), S0) !=shallow_final_choice2B_guard.end())) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == LEFT && std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end()) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == RIGHT && std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice2B_guard.autState) !=shallow_final_choice2B_guard.end())))))) || KLEENE_NOTSTARTED == ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.kleeneState) && (FST == FST && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && S0 == S0))) || (FST == FST && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && S0 == S0)))) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.callState == CALLED && (((((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.interruptState == FST && 0) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.interruptState == SND && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.guardState == GUARD_NOTSTARTED && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9)  && ((NONE == NONE && (std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end() || std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), S0) !=shallow_final_choice2B_guard.end())) || (NONE == LEFT && std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end()) || (NONE == RIGHT && std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice2B_guard.autState) !=shallow_final_choice2B_guard.end())))) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.guardState == GUARD_STARTED && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == NONE && (std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end() || std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), S0) !=shallow_final_choice2B_guard.end())) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == LEFT && std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end()) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == RIGHT && std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice2B_guard.autState) !=shallow_final_choice2B_guard.end())))))) || KLEENE_NOTSTARTED == ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.kleeneState) && (FST == FST && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && S0 == S0))) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.interruptState == FST && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_pguardB.ts_C.autState == S0))))))))) || (NONE == RIGHT && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.callState == NOTCALLED && (((NOTCALLED == NOTCALLED && ((S0 == S0 && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F2.ts_E.h <= ts_J.avg - 3 * ts_J.stddev ) || (S0 == S0 && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F2.ts_E.h > ts_J.avg - 3 * ts_J.stddev ))) || (NOTCALLED == CALLED && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F2.ts_E.autState == S0 && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F2.ts_E.h <= ts_J.avg - 3 * ts_J.stddev ) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F2.ts_E.autState == S0 && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F2.ts_E.h > ts_J.avg - 3 * ts_J.stddev )))) || ((NOTCALLED == NOTCALLED && (((((FST == FST && 0) || (FST == SND && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.guardState == GUARD_NOTSTARTED && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9)  && ((NONE == NONE && (std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end() || std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), S0) !=shallow_final_choice2B_guard.end())) || (NONE == LEFT && std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end()) || (NONE == RIGHT && std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice2B_guard.autState) !=shallow_final_choice2B_guard.end())))) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.guardState == GUARD_STARTED && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == NONE && (std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end() || std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), S0) !=shallow_final_choice2B_guard.end())) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == LEFT && std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end()) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == RIGHT && std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice2B_guard.autState) !=shallow_final_choice2B_guard.end())))))) || KLEENE_NOTSTARTED == ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.kleeneState) && (FST == FST && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && S0 == S0))) || (FST == FST && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && S0 == S0)))) || (NOTCALLED == CALLED && (((((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.interruptState == FST && 0) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.interruptState == SND && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.guardState == GUARD_NOTSTARTED && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9)  && ((NONE == NONE && (std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end() || std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), S0) !=shallow_final_choice2B_guard.end())) || (NONE == LEFT && std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end()) || (NONE == RIGHT && std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice2B_guard.autState) !=shallow_final_choice2B_guard.end())))) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.guardState == GUARD_STARTED && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == NONE && (std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end() || std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), S0) !=shallow_final_choice2B_guard.end())) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == LEFT && std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end()) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == RIGHT && std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice2B_guard.autState) !=shallow_final_choice2B_guard.end())))))) || KLEENE_NOTSTARTED == ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.kleeneState) && (FST == FST && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && S0 == S0))) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.interruptState == FST && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_pguardB.ts_C.autState == S0))))))) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.callState == CALLED && (((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F2.callState == NOTCALLED && ((S0 == S0 && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F2.ts_E.h <= ts_J.avg - 3 * ts_J.stddev ) || (S0 == S0 && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F2.ts_E.h > ts_J.avg - 3 * ts_J.stddev ))) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F2.callState == CALLED && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F2.ts_E.autState == S0 && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F2.ts_E.h <= ts_J.avg - 3 * ts_J.stddev ) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F2.ts_E.autState == S0 && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F2.ts_E.h > ts_J.avg - 3 * ts_J.stddev )))) || ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.callState == NOTCALLED && (((((FST == FST && 0) || (FST == SND && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.guardState == GUARD_NOTSTARTED && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9)  && ((NONE == NONE && (std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end() || std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), S0) !=shallow_final_choice2B_guard.end())) || (NONE == LEFT && std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end()) || (NONE == RIGHT && std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice2B_guard.autState) !=shallow_final_choice2B_guard.end())))) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.guardState == GUARD_STARTED && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == NONE && (std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end() || std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), S0) !=shallow_final_choice2B_guard.end())) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == LEFT && std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end()) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == RIGHT && std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice2B_guard.autState) !=shallow_final_choice2B_guard.end())))))) || KLEENE_NOTSTARTED == ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.kleeneState) && (FST == FST && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && S0 == S0))) || (FST == FST && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && S0 == S0)))) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.callState == CALLED && (((((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.interruptState == FST && 0) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.interruptState == SND && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.guardState == GUARD_NOTSTARTED && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9)  && ((NONE == NONE && (std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end() || std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), S0) !=shallow_final_choice2B_guard.end())) || (NONE == LEFT && std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end()) || (NONE == RIGHT && std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice2B_guard.autState) !=shallow_final_choice2B_guard.end())))) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.guardState == GUARD_STARTED && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == NONE && (std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end() || std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), S0) !=shallow_final_choice2B_guard.end())) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == LEFT && std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end()) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == RIGHT && std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice2B_guard.autState) !=shallow_final_choice2B_guard.end())))))) || KLEENE_NOTSTARTED == ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.kleeneState) && (FST == FST && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && S0 == S0))) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.interruptState == FST && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_pguardB.ts_C.autState == S0)))))))))))))
		{
			ts_J.ts_guardJ.guardState = GUARD_STARTED;
			if((ts_J.ts_guardJ.ts_choiceJ_guard.choiceState == NONE && (S0 == J2 && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.callState == NOTCALLED && (((NOTCALLED == NOTCALLED && ((S0 == S0 && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.ts_E.h <= ts_J.avg - 3 * ts_J.stddev ) || (S0 == S0 && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.ts_E.h > ts_J.avg - 3 * ts_J.stddev ))) || (NOTCALLED == CALLED && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.ts_E.autState == S0 && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.ts_E.h <= ts_J.avg - 3 * ts_J.stddev ) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.ts_E.autState == S0 && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.ts_E.h > ts_J.avg - 3 * ts_J.stddev )))) || ((NOTCALLED == NOTCALLED && (((((FST == FST && 0) || (FST == SND && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.guardState == GUARD_NOTSTARTED && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9)  && ((NONE == NONE && (std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end() || std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), S0) !=shallow_final_choice2B_guard.end())) || (NONE == LEFT && std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end()) || (NONE == RIGHT && std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice2B_guard.autState) !=shallow_final_choice2B_guard.end())))) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.guardState == GUARD_STARTED && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == NONE && (std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end() || std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), S0) !=shallow_final_choice2B_guard.end())) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == LEFT && std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end()) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == RIGHT && std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice2B_guard.autState) !=shallow_final_choice2B_guard.end())))))) || KLEENE_NOTSTARTED == ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.kleeneState) && (FST == FST && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && S0 == S0))) || (FST == FST && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && S0 == S0)))) || (NOTCALLED == CALLED && (((((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.interruptState == FST && 0) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.interruptState == SND && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.guardState == GUARD_NOTSTARTED && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9)  && ((NONE == NONE && (std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end() || std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), S0) !=shallow_final_choice2B_guard.end())) || (NONE == LEFT && std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end()) || (NONE == RIGHT && std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice2B_guard.autState) !=shallow_final_choice2B_guard.end())))) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.guardState == GUARD_STARTED && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == NONE && (std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end() || std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), S0) !=shallow_final_choice2B_guard.end())) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == LEFT && std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end()) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == RIGHT && std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice2B_guard.autState) !=shallow_final_choice2B_guard.end())))))) || KLEENE_NOTSTARTED == ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.kleeneState) && (FST == FST && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && S0 == S0))) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.interruptState == FST && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_pguardB.ts_C.autState == S0))))))) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.callState == CALLED && (((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.callState == NOTCALLED && ((S0 == S0 && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.ts_E.h <= ts_J.avg - 3 * ts_J.stddev ) || (S0 == S0 && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.ts_E.h > ts_J.avg - 3 * ts_J.stddev ))) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.callState == CALLED && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.ts_E.autState == S0 && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.ts_E.h <= ts_J.avg - 3 * ts_J.stddev ) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.ts_E.autState == S0 && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.ts_E.h > ts_J.avg - 3 * ts_J.stddev )))) || ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.callState == NOTCALLED && (((((FST == FST && 0) || (FST == SND && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.guardState == GUARD_NOTSTARTED && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9)  && ((NONE == NONE && (std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end() || std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), S0) !=shallow_final_choice2B_guard.end())) || (NONE == LEFT && std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end()) || (NONE == RIGHT && std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice2B_guard.autState) !=shallow_final_choice2B_guard.end())))) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.guardState == GUARD_STARTED && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == NONE && (std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end() || std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), S0) !=shallow_final_choice2B_guard.end())) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == LEFT && std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end()) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == RIGHT && std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice2B_guard.autState) !=shallow_final_choice2B_guard.end())))))) || KLEENE_NOTSTARTED == ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.kleeneState) && (FST == FST && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && S0 == S0))) || (FST == FST && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && S0 == S0)))) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.callState == CALLED && (((((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.interruptState == FST && 0) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.interruptState == SND && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.guardState == GUARD_NOTSTARTED && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9)  && ((NONE == NONE && (std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end() || std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), S0) !=shallow_final_choice2B_guard.end())) || (NONE == LEFT && std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end()) || (NONE == RIGHT && std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice2B_guard.autState) !=shallow_final_choice2B_guard.end())))) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.guardState == GUARD_STARTED && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == NONE && (std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end() || std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), S0) !=shallow_final_choice2B_guard.end())) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == LEFT && std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end()) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == RIGHT && std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice2B_guard.autState) !=shallow_final_choice2B_guard.end())))))) || KLEENE_NOTSTARTED == ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.kleeneState) && (FST == FST && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && S0 == S0))) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.interruptState == FST && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_pguardB.ts_C.autState == S0)))))))))))
			{
				ts_J.ts_guardJ.ts_choiceJ_guard.choiceState = LEFT;
				ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.autState = S0;
				if((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.autState == J2 && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.callState == NOTCALLED && (((NOTCALLED == NOTCALLED && ((S0 == S0 && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.ts_E.h <= ts_J.avg - 3 * ts_J.stddev ) || (S0 == S0 && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.ts_E.h > ts_J.avg - 3 * ts_J.stddev ))) || (NOTCALLED == CALLED && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.ts_E.autState == S0 && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.ts_E.h <= ts_J.avg - 3 * ts_J.stddev ) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.ts_E.autState == S0 && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.ts_E.h > ts_J.avg - 3 * ts_J.stddev )))) || ((NOTCALLED == NOTCALLED && (((((FST == FST && 0) || (FST == SND && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.guardState == GUARD_NOTSTARTED && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9)  && ((NONE == NONE && (std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end() || std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), S0) !=shallow_final_choice2B_guard.end())) || (NONE == LEFT && std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end()) || (NONE == RIGHT && std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice2B_guard.autState) !=shallow_final_choice2B_guard.end())))) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.guardState == GUARD_STARTED && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == NONE && (std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end() || std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), S0) !=shallow_final_choice2B_guard.end())) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == LEFT && std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end()) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == RIGHT && std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice2B_guard.autState) !=shallow_final_choice2B_guard.end())))))) || KLEENE_NOTSTARTED == ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.kleeneState) && (FST == FST && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && S0 == S0))) || (FST == FST && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && S0 == S0)))) || (NOTCALLED == CALLED && (((((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.interruptState == FST && 0) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.interruptState == SND && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.guardState == GUARD_NOTSTARTED && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9)  && ((NONE == NONE && (std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end() || std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), S0) !=shallow_final_choice2B_guard.end())) || (NONE == LEFT && std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end()) || (NONE == RIGHT && std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice2B_guard.autState) !=shallow_final_choice2B_guard.end())))) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.guardState == GUARD_STARTED && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == NONE && (std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end() || std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), S0) !=shallow_final_choice2B_guard.end())) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == LEFT && std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end()) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == RIGHT && std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice2B_guard.autState) !=shallow_final_choice2B_guard.end())))))) || KLEENE_NOTSTARTED == ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.kleeneState) && (FST == FST && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && S0 == S0))) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.interruptState == FST && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_pguardB.ts_C.autState == S0))))))) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.callState == CALLED && (((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.callState == NOTCALLED && ((S0 == S0 && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.ts_E.h <= ts_J.avg - 3 * ts_J.stddev ) || (S0 == S0 && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.ts_E.h > ts_J.avg - 3 * ts_J.stddev ))) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.callState == CALLED && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.ts_E.autState == S0 && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.ts_E.h <= ts_J.avg - 3 * ts_J.stddev ) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.ts_E.autState == S0 && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.ts_E.h > ts_J.avg - 3 * ts_J.stddev )))) || ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.callState == NOTCALLED && (((((FST == FST && 0) || (FST == SND && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.guardState == GUARD_NOTSTARTED && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9)  && ((NONE == NONE && (std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end() || std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), S0) !=shallow_final_choice2B_guard.end())) || (NONE == LEFT && std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end()) || (NONE == RIGHT && std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice2B_guard.autState) !=shallow_final_choice2B_guard.end())))) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.guardState == GUARD_STARTED && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == NONE && (std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end() || std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), S0) !=shallow_final_choice2B_guard.end())) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == LEFT && std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end()) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == RIGHT && std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice2B_guard.autState) !=shallow_final_choice2B_guard.end())))))) || KLEENE_NOTSTARTED == ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.kleeneState) && (FST == FST && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && S0 == S0))) || (FST == FST && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && S0 == S0)))) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.callState == CALLED && (((((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.interruptState == FST && 0) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.interruptState == SND && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.guardState == GUARD_NOTSTARTED && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9)  && ((NONE == NONE && (std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end() || std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), S0) !=shallow_final_choice2B_guard.end())) || (NONE == LEFT && std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end()) || (NONE == RIGHT && std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice2B_guard.autState) !=shallow_final_choice2B_guard.end())))) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.guardState == GUARD_STARTED && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == NONE && (std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end() || std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), S0) !=shallow_final_choice2B_guard.end())) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == LEFT && std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end()) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == RIGHT && std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice2B_guard.autState) !=shallow_final_choice2B_guard.end())))))) || KLEENE_NOTSTARTED == ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.kleeneState) && (FST == FST && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && S0 == S0))) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.interruptState == FST && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_pguardB.ts_C.autState == S0))))))))))
				{
					if((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.callState == NOTCALLED && (((NOTCALLED == NOTCALLED && ((S0 == S0 && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.ts_E.h <= ts_J.avg - 3 * ts_J.stddev ) || (S0 == S0 && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.ts_E.h > ts_J.avg - 3 * ts_J.stddev ))) || (NOTCALLED == CALLED && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.ts_E.autState == S0 && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.ts_E.h <= ts_J.avg - 3 * ts_J.stddev ) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.ts_E.autState == S0 && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.ts_E.h > ts_J.avg - 3 * ts_J.stddev )))) || ((NOTCALLED == NOTCALLED && (((((FST == FST && 0) || (FST == SND && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.guardState == GUARD_NOTSTARTED && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9)  && ((NONE == NONE && (std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end() || std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), S0) !=shallow_final_choice2B_guard.end())) || (NONE == LEFT && std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end()) || (NONE == RIGHT && std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice2B_guard.autState) !=shallow_final_choice2B_guard.end())))) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.guardState == GUARD_STARTED && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == NONE && (std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end() || std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), S0) !=shallow_final_choice2B_guard.end())) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == LEFT && std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end()) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == RIGHT && std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice2B_guard.autState) !=shallow_final_choice2B_guard.end())))))) || KLEENE_NOTSTARTED == ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.kleeneState) && (FST == FST && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && S0 == S0))) || (FST == FST && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && S0 == S0)))) || (NOTCALLED == CALLED && (((((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.interruptState == FST && 0) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.interruptState == SND && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.guardState == GUARD_NOTSTARTED && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9)  && ((NONE == NONE && (std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end() || std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), S0) !=shallow_final_choice2B_guard.end())) || (NONE == LEFT && std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end()) || (NONE == RIGHT && std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice2B_guard.autState) !=shallow_final_choice2B_guard.end())))) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.guardState == GUARD_STARTED && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == NONE && (std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end() || std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), S0) !=shallow_final_choice2B_guard.end())) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == LEFT && std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end()) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == RIGHT && std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice2B_guard.autState) !=shallow_final_choice2B_guard.end())))))) || KLEENE_NOTSTARTED == ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.kleeneState) && (FST == FST && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && S0 == S0))) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.interruptState == FST && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_pguardB.ts_C.autState == S0))))))))
					{
						ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.callState = CALLED;
						ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.right_clock_F1.reset_clock();
						ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.left_clock_F2.reset_clock();
						ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.callState = NOTCALLED;
						ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.callState = NOTCALLED;
						if(((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.callState == NOTCALLED && ((S0 == S0 && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.ts_E.h <= ts_J.avg - 3 * ts_J.stddev ) || (S0 == S0 && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.ts_E.h > ts_J.avg - 3 * ts_J.stddev ))) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.callState == CALLED && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.ts_E.autState == S0 && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.ts_E.h <= ts_J.avg - 3 * ts_J.stddev ) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.ts_E.autState == S0 && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.ts_E.h > ts_J.avg - 3 * ts_J.stddev )))))
						{
							if((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.callState == NOTCALLED && ((S0 == S0 && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.ts_E.h <= ts_J.avg - 3 * ts_J.stddev ) || (S0 == S0 && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.ts_E.h > ts_J.avg - 3 * ts_J.stddev ))))
							{
								ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.callState = CALLED;
								ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.ts_E.autState = S0;
								ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.ts_E.h.reset_clock();
								if((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.ts_E.autState == S0 && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.ts_E.h <= ts_J.avg - 3 * ts_J.stddev ))
								{
									Alert(1);ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.ts_E.autState = S0;
									exec = 1;
								
								}else if((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.ts_E.autState == S0 && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.ts_E.h > ts_J.avg - 3 * ts_J.stddev ))
								{
									ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.ts_E.h.reset_clock();ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.ts_E.autState = S0;
									exec = 1;
								
								}
								ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.left_clock_F2.reset_clock();
							}else if((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.callState == CALLED && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.ts_E.autState == S0 && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.ts_E.h <= ts_J.avg - 3 * ts_J.stddev ) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.ts_E.autState == S0 && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.ts_E.h > ts_J.avg - 3 * ts_J.stddev ))))
							{
								if((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.ts_E.autState == S0 && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.ts_E.h <= ts_J.avg - 3 * ts_J.stddev ))
								{
									Alert(1);ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.ts_E.autState = S0;
									exec = 1;
								
								}else if((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.ts_E.autState == S0 && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.ts_E.h > ts_J.avg - 3 * ts_J.stddev ))
								{
									ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.ts_E.h.reset_clock();ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.ts_E.autState = S0;
									exec = 1;
								
								}
								ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.left_clock_F2.reset_clock();
							}
						
						}
						if(((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.callState == NOTCALLED && (((((FST == FST && 0) || (FST == SND && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.guardState == GUARD_NOTSTARTED && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9)  && ((NONE == NONE && (std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end() || std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), S0) !=shallow_final_choice2B_guard.end())) || (NONE == LEFT && std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end()) || (NONE == RIGHT && std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice2B_guard.autState) !=shallow_final_choice2B_guard.end())))) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.guardState == GUARD_STARTED && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == NONE && (std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end() || std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), S0) !=shallow_final_choice2B_guard.end())) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == LEFT && std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end()) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == RIGHT && std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice2B_guard.autState) !=shallow_final_choice2B_guard.end())))))) || KLEENE_NOTSTARTED == ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.kleeneState) && (FST == FST && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && S0 == S0))) || (FST == FST && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && S0 == S0)))) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.callState == CALLED && (((((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.interruptState == FST && 0) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.interruptState == SND && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.guardState == GUARD_NOTSTARTED && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9)  && ((NONE == NONE && (std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end() || std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), S0) !=shallow_final_choice2B_guard.end())) || (NONE == LEFT && std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end()) || (NONE == RIGHT && std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice2B_guard.autState) !=shallow_final_choice2B_guard.end())))) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.guardState == GUARD_STARTED && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == NONE && (std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end() || std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), S0) !=shallow_final_choice2B_guard.end())) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == LEFT && std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end()) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == RIGHT && std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice2B_guard.autState) !=shallow_final_choice2B_guard.end())))))) || KLEENE_NOTSTARTED == ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.kleeneState) && (FST == FST && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && S0 == S0))) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.interruptState == FST && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_pguardB.ts_C.autState == S0))))))
						{
							if((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.callState == NOTCALLED && (((((FST == FST && 0) || (FST == SND && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.guardState == GUARD_NOTSTARTED && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9)  && ((NONE == NONE && (std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end() || std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), S0) !=shallow_final_choice2B_guard.end())) || (NONE == LEFT && std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end()) || (NONE == RIGHT && std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice2B_guard.autState) !=shallow_final_choice2B_guard.end())))) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.guardState == GUARD_STARTED && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == NONE && (std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end() || std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), S0) !=shallow_final_choice2B_guard.end())) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == LEFT && std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end()) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == RIGHT && std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice2B_guard.autState) !=shallow_final_choice2B_guard.end())))))) || KLEENE_NOTSTARTED == ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.kleeneState) && (FST == FST && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && S0 == S0))) || (FST == FST && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && S0 == S0)))))
							{
								ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.callState = CALLED;
								ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.kleeneState = KLEENE_NOTSTARTED;
								ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.interruptState = FST;
								ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_pguardB.ts_C.autState = S0;
								if(((((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.interruptState == FST && 0) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.interruptState == SND && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.guardState == GUARD_NOTSTARTED && (last_event_time.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9)  && ((NONE == NONE && (std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end() || std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), S0) !=shallow_final_choice2B_guard.end())) || (NONE == LEFT && std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end()) || (NONE == RIGHT && std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice2B_guard.autState) !=shallow_final_choice2B_guard.end())))) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.guardState == GUARD_STARTED && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == NONE && (std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end() || std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), S0) !=shallow_final_choice2B_guard.end())) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == LEFT && std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end()) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == RIGHT && std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice2B_guard.autState) !=shallow_final_choice2B_guard.end())))))) || KLEENE_NOTSTARTED == ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.kleeneState) && (FST == FST && (last_event_time.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && S0 == S0))))
								{
									ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.kleeneState = KLEENE_STARTED;
									ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.interruptState = FST;
									ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_pguardB.ts_C.autState = S0;
									if((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.interruptState == FST && (last_event_time.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_pguardB.ts_C.autState == S0)))
									{
										if((last_event_time.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_pguardB.ts_C.autState == S0))
										{
											if(ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_pguardB.ts_C.autState == S0)
											{
												ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_pguardB.ts_C.autState = S0;
												exec = 1;
											
											}
										
										}
									
									}
								
								}else if((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.interruptState == FST && (last_event_time.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_pguardB.ts_C.autState == S0)))
								{
									ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.kleeneState = KLEENE_STARTED;
									if((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.interruptState == FST && (last_event_time.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_pguardB.ts_C.autState == S0)))
									{
										if((last_event_time.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_pguardB.ts_C.autState == S0))
										{
											if(ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_pguardB.ts_C.autState == S0)
											{
												ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_pguardB.ts_C.autState = S0;
												exec = 1;
											
											}
										
										}
									
									}
								
								}
								ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.right_clock_F1.reset_clock();
							}else if((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.callState == CALLED && (((((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.interruptState == FST && 0) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.interruptState == SND && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.guardState == GUARD_NOTSTARTED && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9)  && ((NONE == NONE && (std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end() || std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), S0) !=shallow_final_choice2B_guard.end())) || (NONE == LEFT && std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end()) || (NONE == RIGHT && std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice2B_guard.autState) !=shallow_final_choice2B_guard.end())))) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.guardState == GUARD_STARTED && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == NONE && (std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end() || std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), S0) !=shallow_final_choice2B_guard.end())) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == LEFT && std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end()) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == RIGHT && std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice2B_guard.autState) !=shallow_final_choice2B_guard.end())))))) || KLEENE_NOTSTARTED == ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.kleeneState) && (FST == FST && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && S0 == S0))) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.interruptState == FST && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_pguardB.ts_C.autState == S0)))))
							{
								if(((((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.interruptState == FST && 0) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.interruptState == SND && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.guardState == GUARD_NOTSTARTED && (last_event_time.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9)  && ((NONE == NONE && (std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end() || std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), S0) !=shallow_final_choice2B_guard.end())) || (NONE == LEFT && std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end()) || (NONE == RIGHT && std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice2B_guard.autState) !=shallow_final_choice2B_guard.end())))) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.guardState == GUARD_STARTED && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == NONE && (std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end() || std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), S0) !=shallow_final_choice2B_guard.end())) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == LEFT && std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end()) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == RIGHT && std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice2B_guard.autState) !=shallow_final_choice2B_guard.end())))))) || KLEENE_NOTSTARTED == ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.kleeneState) && (FST == FST && (last_event_time.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && S0 == S0))))
								{
									ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.kleeneState = KLEENE_STARTED;
									ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.interruptState = FST;
									ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_pguardB.ts_C.autState = S0;
									if((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.interruptState == FST && (last_event_time.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_pguardB.ts_C.autState == S0)))
									{
										if((last_event_time.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_pguardB.ts_C.autState == S0))
										{
											if(ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_pguardB.ts_C.autState == S0)
											{
												ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_pguardB.ts_C.autState = S0;
												exec = 1;
											
											}
										
										}
									
									}
								
								}else if((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.interruptState == FST && (last_event_time.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_pguardB.ts_C.autState == S0)))
								{
									ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.kleeneState = KLEENE_STARTED;
									if((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.interruptState == FST && (last_event_time.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_pguardB.ts_C.autState == S0)))
									{
										if((last_event_time.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_pguardB.ts_C.autState == S0))
										{
											if(ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_pguardB.ts_C.autState == S0)
											{
												ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_pguardB.ts_C.autState = S0;
												exec = 1;
											
											}
										
										}
									
									}
								
								}
								ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.right_clock_F1.reset_clock();
							}
						
						}
					
					}else if((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.callState == CALLED && (((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.callState == NOTCALLED && ((S0 == S0 && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.ts_E.h <= ts_J.avg - 3 * ts_J.stddev ) || (S0 == S0 && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.ts_E.h > ts_J.avg - 3 * ts_J.stddev ))) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.callState == CALLED && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.ts_E.autState == S0 && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.ts_E.h <= ts_J.avg - 3 * ts_J.stddev ) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.ts_E.autState == S0 && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.ts_E.h > ts_J.avg - 3 * ts_J.stddev )))) || ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.callState == NOTCALLED && (((((FST == FST && 0) || (FST == SND && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.guardState == GUARD_NOTSTARTED && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9)  && ((NONE == NONE && (std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end() || std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), S0) !=shallow_final_choice2B_guard.end())) || (NONE == LEFT && std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end()) || (NONE == RIGHT && std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice2B_guard.autState) !=shallow_final_choice2B_guard.end())))) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.guardState == GUARD_STARTED && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == NONE && (std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end() || std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), S0) !=shallow_final_choice2B_guard.end())) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == LEFT && std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end()) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == RIGHT && std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice2B_guard.autState) !=shallow_final_choice2B_guard.end())))))) || KLEENE_NOTSTARTED == ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.kleeneState) && (FST == FST && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && S0 == S0))) || (FST == FST && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && S0 == S0)))) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.callState == CALLED && (((((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.interruptState == FST && 0) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.interruptState == SND && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.guardState == GUARD_NOTSTARTED && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9)  && ((NONE == NONE && (std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end() || std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), S0) !=shallow_final_choice2B_guard.end())) || (NONE == LEFT && std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end()) || (NONE == RIGHT && std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice2B_guard.autState) !=shallow_final_choice2B_guard.end())))) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.guardState == GUARD_STARTED && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == NONE && (std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end() || std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), S0) !=shallow_final_choice2B_guard.end())) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == LEFT && std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end()) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == RIGHT && std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice2B_guard.autState) !=shallow_final_choice2B_guard.end())))))) || KLEENE_NOTSTARTED == ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.kleeneState) && (FST == FST && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && S0 == S0))) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.interruptState == FST && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_pguardB.ts_C.autState == S0))))))))
					{
						if(((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.callState == NOTCALLED && ((S0 == S0 && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.ts_E.h <= ts_J.avg - 3 * ts_J.stddev ) || (S0 == S0 && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.ts_E.h > ts_J.avg - 3 * ts_J.stddev ))) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.callState == CALLED && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.ts_E.autState == S0 && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.ts_E.h <= ts_J.avg - 3 * ts_J.stddev ) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.ts_E.autState == S0 && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.ts_E.h > ts_J.avg - 3 * ts_J.stddev )))))
						{
							if((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.callState == NOTCALLED && ((S0 == S0 && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.ts_E.h <= ts_J.avg - 3 * ts_J.stddev ) || (S0 == S0 && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.ts_E.h > ts_J.avg - 3 * ts_J.stddev ))))
							{
								ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.callState = CALLED;
								ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.ts_E.autState = S0;
								ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.ts_E.h.reset_clock();
								if((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.ts_E.autState == S0 && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.ts_E.h <= ts_J.avg - 3 * ts_J.stddev ))
								{
									Alert(1);ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.ts_E.autState = S0;
									exec = 1;
								
								}else if((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.ts_E.autState == S0 && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.ts_E.h > ts_J.avg - 3 * ts_J.stddev ))
								{
									ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.ts_E.h.reset_clock();ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.ts_E.autState = S0;
									exec = 1;
								
								}
								ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.left_clock_F2.reset_clock();
							}else if((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.callState == CALLED && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.ts_E.autState == S0 && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.ts_E.h <= ts_J.avg - 3 * ts_J.stddev ) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.ts_E.autState == S0 && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.ts_E.h > ts_J.avg - 3 * ts_J.stddev ))))
							{
								if((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.ts_E.autState == S0 && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.ts_E.h <= ts_J.avg - 3 * ts_J.stddev ))
								{
									Alert(1);ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.ts_E.autState = S0;
									exec = 1;
								
								}else if((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.ts_E.autState == S0 && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.ts_E.h > ts_J.avg - 3 * ts_J.stddev ))
								{
									ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.ts_E.h.reset_clock();ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.ts_E.autState = S0;
									exec = 1;
								
								}
								ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.left_clock_F2.reset_clock();
							}
						
						}
						if(((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.callState == NOTCALLED && (((((FST == FST && 0) || (FST == SND && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.guardState == GUARD_NOTSTARTED && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9)  && ((NONE == NONE && (std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end() || std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), S0) !=shallow_final_choice2B_guard.end())) || (NONE == LEFT && std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end()) || (NONE == RIGHT && std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice2B_guard.autState) !=shallow_final_choice2B_guard.end())))) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.guardState == GUARD_STARTED && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == NONE && (std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end() || std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), S0) !=shallow_final_choice2B_guard.end())) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == LEFT && std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end()) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == RIGHT && std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice2B_guard.autState) !=shallow_final_choice2B_guard.end())))))) || KLEENE_NOTSTARTED == ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.kleeneState) && (FST == FST && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && S0 == S0))) || (FST == FST && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && S0 == S0)))) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.callState == CALLED && (((((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.interruptState == FST && 0) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.interruptState == SND && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.guardState == GUARD_NOTSTARTED && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9)  && ((NONE == NONE && (std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end() || std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), S0) !=shallow_final_choice2B_guard.end())) || (NONE == LEFT && std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end()) || (NONE == RIGHT && std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice2B_guard.autState) !=shallow_final_choice2B_guard.end())))) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.guardState == GUARD_STARTED && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == NONE && (std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end() || std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), S0) !=shallow_final_choice2B_guard.end())) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == LEFT && std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end()) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == RIGHT && std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice2B_guard.autState) !=shallow_final_choice2B_guard.end())))))) || KLEENE_NOTSTARTED == ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.kleeneState) && (FST == FST && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && S0 == S0))) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.interruptState == FST && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_pguardB.ts_C.autState == S0))))))
						{
							if((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.callState == NOTCALLED && (((((FST == FST && 0) || (FST == SND && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.guardState == GUARD_NOTSTARTED && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9)  && ((NONE == NONE && (std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end() || std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), S0) !=shallow_final_choice2B_guard.end())) || (NONE == LEFT && std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end()) || (NONE == RIGHT && std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice2B_guard.autState) !=shallow_final_choice2B_guard.end())))) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.guardState == GUARD_STARTED && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == NONE && (std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end() || std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), S0) !=shallow_final_choice2B_guard.end())) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == LEFT && std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end()) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == RIGHT && std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice2B_guard.autState) !=shallow_final_choice2B_guard.end())))))) || KLEENE_NOTSTARTED == ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.kleeneState) && (FST == FST && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && S0 == S0))) || (FST == FST && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && S0 == S0)))))
							{
								ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.callState = CALLED;
								ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.kleeneState = KLEENE_NOTSTARTED;
								ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.interruptState = FST;
								ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_pguardB.ts_C.autState = S0;
								if(((((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.interruptState == FST && 0) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.interruptState == SND && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.guardState == GUARD_NOTSTARTED && (last_event_time.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9)  && ((NONE == NONE && (std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end() || std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), S0) !=shallow_final_choice2B_guard.end())) || (NONE == LEFT && std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end()) || (NONE == RIGHT && std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice2B_guard.autState) !=shallow_final_choice2B_guard.end())))) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.guardState == GUARD_STARTED && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == NONE && (std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end() || std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), S0) !=shallow_final_choice2B_guard.end())) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == LEFT && std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end()) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == RIGHT && std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice2B_guard.autState) !=shallow_final_choice2B_guard.end())))))) || KLEENE_NOTSTARTED == ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.kleeneState) && (FST == FST && (last_event_time.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && S0 == S0))))
								{
									ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.kleeneState = KLEENE_STARTED;
									ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.interruptState = FST;
									ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_pguardB.ts_C.autState = S0;
									if((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.interruptState == FST && (last_event_time.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_pguardB.ts_C.autState == S0)))
									{
										if((last_event_time.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_pguardB.ts_C.autState == S0))
										{
											if(ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_pguardB.ts_C.autState == S0)
											{
												ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_pguardB.ts_C.autState = S0;
												exec = 1;
											
											}
										
										}
									
									}
								
								}else if((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.interruptState == FST && (last_event_time.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_pguardB.ts_C.autState == S0)))
								{
									ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.kleeneState = KLEENE_STARTED;
									if((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.interruptState == FST && (last_event_time.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_pguardB.ts_C.autState == S0)))
									{
										if((last_event_time.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_pguardB.ts_C.autState == S0))
										{
											if(ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_pguardB.ts_C.autState == S0)
											{
												ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_pguardB.ts_C.autState = S0;
												exec = 1;
											
											}
										
										}
									
									}
								
								}
								ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.right_clock_F1.reset_clock();
							}else if((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.callState == CALLED && (((((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.interruptState == FST && 0) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.interruptState == SND && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.guardState == GUARD_NOTSTARTED && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9)  && ((NONE == NONE && (std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end() || std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), S0) !=shallow_final_choice2B_guard.end())) || (NONE == LEFT && std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end()) || (NONE == RIGHT && std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice2B_guard.autState) !=shallow_final_choice2B_guard.end())))) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.guardState == GUARD_STARTED && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == NONE && (std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end() || std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), S0) !=shallow_final_choice2B_guard.end())) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == LEFT && std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end()) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == RIGHT && std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice2B_guard.autState) !=shallow_final_choice2B_guard.end())))))) || KLEENE_NOTSTARTED == ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.kleeneState) && (FST == FST && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && S0 == S0))) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.interruptState == FST && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_pguardB.ts_C.autState == S0)))))
							{
								if(((((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.interruptState == FST && 0) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.interruptState == SND && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.guardState == GUARD_NOTSTARTED && (last_event_time.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9)  && ((NONE == NONE && (std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end() || std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), S0) !=shallow_final_choice2B_guard.end())) || (NONE == LEFT && std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end()) || (NONE == RIGHT && std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice2B_guard.autState) !=shallow_final_choice2B_guard.end())))) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.guardState == GUARD_STARTED && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == NONE && (std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end() || std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), S0) !=shallow_final_choice2B_guard.end())) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == LEFT && std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end()) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == RIGHT && std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice2B_guard.autState) !=shallow_final_choice2B_guard.end())))))) || KLEENE_NOTSTARTED == ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.kleeneState) && (FST == FST && (last_event_time.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && S0 == S0))))
								{
									ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.kleeneState = KLEENE_STARTED;
									ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.interruptState = FST;
									ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_pguardB.ts_C.autState = S0;
									if((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.interruptState == FST && (last_event_time.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_pguardB.ts_C.autState == S0)))
									{
										if((last_event_time.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_pguardB.ts_C.autState == S0))
										{
											if(ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_pguardB.ts_C.autState == S0)
											{
												ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_pguardB.ts_C.autState = S0;
												exec = 1;
											
											}
										
										}
									
									}
								
								}else if((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.interruptState == FST && (last_event_time.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_pguardB.ts_C.autState == S0)))
								{
									ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.kleeneState = KLEENE_STARTED;
									if((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.interruptState == FST && (last_event_time.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_pguardB.ts_C.autState == S0)))
									{
										if((last_event_time.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_pguardB.ts_C.autState == S0))
										{
											if(ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_pguardB.ts_C.autState == S0)
											{
												ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_pguardB.ts_C.autState = S0;
												exec = 1;
											
											}
										
										}
									
									}
								
								}
								ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.right_clock_F1.reset_clock();
							}
						
						}
					
					}
				
				}
			
			}else if((ts_J.ts_guardJ.ts_choiceJ_guard.choiceState == LEFT && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.autState == J2 && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.callState == NOTCALLED && (((NOTCALLED == NOTCALLED && ((S0 == S0 && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.ts_E.h <= ts_J.avg - 3 * ts_J.stddev ) || (S0 == S0 && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.ts_E.h > ts_J.avg - 3 * ts_J.stddev ))) || (NOTCALLED == CALLED && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.ts_E.autState == S0 && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.ts_E.h <= ts_J.avg - 3 * ts_J.stddev ) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.ts_E.autState == S0 && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.ts_E.h > ts_J.avg - 3 * ts_J.stddev )))) || ((NOTCALLED == NOTCALLED && (((((FST == FST && 0) || (FST == SND && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.guardState == GUARD_NOTSTARTED && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9)  && ((NONE == NONE && (std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end() || std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), S0) !=shallow_final_choice2B_guard.end())) || (NONE == LEFT && std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end()) || (NONE == RIGHT && std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice2B_guard.autState) !=shallow_final_choice2B_guard.end())))) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.guardState == GUARD_STARTED && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == NONE && (std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end() || std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), S0) !=shallow_final_choice2B_guard.end())) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == LEFT && std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end()) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == RIGHT && std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice2B_guard.autState) !=shallow_final_choice2B_guard.end())))))) || KLEENE_NOTSTARTED == ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.kleeneState) && (FST == FST && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && S0 == S0))) || (FST == FST && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && S0 == S0)))) || (NOTCALLED == CALLED && (((((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.interruptState == FST && 0) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.interruptState == SND && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.guardState == GUARD_NOTSTARTED && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9)  && ((NONE == NONE && (std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end() || std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), S0) !=shallow_final_choice2B_guard.end())) || (NONE == LEFT && std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end()) || (NONE == RIGHT && std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice2B_guard.autState) !=shallow_final_choice2B_guard.end())))) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.guardState == GUARD_STARTED && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == NONE && (std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end() || std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), S0) !=shallow_final_choice2B_guard.end())) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == LEFT && std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end()) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == RIGHT && std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice2B_guard.autState) !=shallow_final_choice2B_guard.end())))))) || KLEENE_NOTSTARTED == ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.kleeneState) && (FST == FST && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && S0 == S0))) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.interruptState == FST && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_pguardB.ts_C.autState == S0))))))) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.callState == CALLED && (((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.callState == NOTCALLED && ((S0 == S0 && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.ts_E.h <= ts_J.avg - 3 * ts_J.stddev ) || (S0 == S0 && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.ts_E.h > ts_J.avg - 3 * ts_J.stddev ))) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.callState == CALLED && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.ts_E.autState == S0 && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.ts_E.h <= ts_J.avg - 3 * ts_J.stddev ) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.ts_E.autState == S0 && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.ts_E.h > ts_J.avg - 3 * ts_J.stddev )))) || ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.callState == NOTCALLED && (((((FST == FST && 0) || (FST == SND && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.guardState == GUARD_NOTSTARTED && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9)  && ((NONE == NONE && (std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end() || std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), S0) !=shallow_final_choice2B_guard.end())) || (NONE == LEFT && std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end()) || (NONE == RIGHT && std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice2B_guard.autState) !=shallow_final_choice2B_guard.end())))) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.guardState == GUARD_STARTED && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == NONE && (std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end() || std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), S0) !=shallow_final_choice2B_guard.end())) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == LEFT && std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end()) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == RIGHT && std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice2B_guard.autState) !=shallow_final_choice2B_guard.end())))))) || KLEENE_NOTSTARTED == ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.kleeneState) && (FST == FST && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && S0 == S0))) || (FST == FST && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && S0 == S0)))) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.callState == CALLED && (((((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.interruptState == FST && 0) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.interruptState == SND && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.guardState == GUARD_NOTSTARTED && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9)  && ((NONE == NONE && (std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end() || std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), S0) !=shallow_final_choice2B_guard.end())) || (NONE == LEFT && std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end()) || (NONE == RIGHT && std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice2B_guard.autState) !=shallow_final_choice2B_guard.end())))) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.guardState == GUARD_STARTED && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == NONE && (std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end() || std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), S0) !=shallow_final_choice2B_guard.end())) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == LEFT && std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end()) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == RIGHT && std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice2B_guard.autState) !=shallow_final_choice2B_guard.end())))))) || KLEENE_NOTSTARTED == ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.kleeneState) && (FST == FST && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && S0 == S0))) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.interruptState == FST && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_pguardB.ts_C.autState == S0)))))))))))
			{
				if((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.autState == J2 && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.callState == NOTCALLED && (((NOTCALLED == NOTCALLED && ((S0 == S0 && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.ts_E.h <= ts_J.avg - 3 * ts_J.stddev ) || (S0 == S0 && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.ts_E.h > ts_J.avg - 3 * ts_J.stddev ))) || (NOTCALLED == CALLED && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.ts_E.autState == S0 && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.ts_E.h <= ts_J.avg - 3 * ts_J.stddev ) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.ts_E.autState == S0 && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.ts_E.h > ts_J.avg - 3 * ts_J.stddev )))) || ((NOTCALLED == NOTCALLED && (((((FST == FST && 0) || (FST == SND && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.guardState == GUARD_NOTSTARTED && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9)  && ((NONE == NONE && (std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end() || std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), S0) !=shallow_final_choice2B_guard.end())) || (NONE == LEFT && std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end()) || (NONE == RIGHT && std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice2B_guard.autState) !=shallow_final_choice2B_guard.end())))) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.guardState == GUARD_STARTED && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == NONE && (std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end() || std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), S0) !=shallow_final_choice2B_guard.end())) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == LEFT && std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end()) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == RIGHT && std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice2B_guard.autState) !=shallow_final_choice2B_guard.end())))))) || KLEENE_NOTSTARTED == ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.kleeneState) && (FST == FST && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && S0 == S0))) || (FST == FST && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && S0 == S0)))) || (NOTCALLED == CALLED && (((((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.interruptState == FST && 0) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.interruptState == SND && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.guardState == GUARD_NOTSTARTED && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9)  && ((NONE == NONE && (std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end() || std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), S0) !=shallow_final_choice2B_guard.end())) || (NONE == LEFT && std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end()) || (NONE == RIGHT && std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice2B_guard.autState) !=shallow_final_choice2B_guard.end())))) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.guardState == GUARD_STARTED && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == NONE && (std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end() || std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), S0) !=shallow_final_choice2B_guard.end())) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == LEFT && std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end()) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == RIGHT && std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice2B_guard.autState) !=shallow_final_choice2B_guard.end())))))) || KLEENE_NOTSTARTED == ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.kleeneState) && (FST == FST && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && S0 == S0))) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.interruptState == FST && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_pguardB.ts_C.autState == S0))))))) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.callState == CALLED && (((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.callState == NOTCALLED && ((S0 == S0 && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.ts_E.h <= ts_J.avg - 3 * ts_J.stddev ) || (S0 == S0 && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.ts_E.h > ts_J.avg - 3 * ts_J.stddev ))) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.callState == CALLED && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.ts_E.autState == S0 && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.ts_E.h <= ts_J.avg - 3 * ts_J.stddev ) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.ts_E.autState == S0 && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.ts_E.h > ts_J.avg - 3 * ts_J.stddev )))) || ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.callState == NOTCALLED && (((((FST == FST && 0) || (FST == SND && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.guardState == GUARD_NOTSTARTED && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9)  && ((NONE == NONE && (std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end() || std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), S0) !=shallow_final_choice2B_guard.end())) || (NONE == LEFT && std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end()) || (NONE == RIGHT && std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice2B_guard.autState) !=shallow_final_choice2B_guard.end())))) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.guardState == GUARD_STARTED && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == NONE && (std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end() || std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), S0) !=shallow_final_choice2B_guard.end())) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == LEFT && std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end()) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == RIGHT && std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice2B_guard.autState) !=shallow_final_choice2B_guard.end())))))) || KLEENE_NOTSTARTED == ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.kleeneState) && (FST == FST && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && S0 == S0))) || (FST == FST && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && S0 == S0)))) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.callState == CALLED && (((((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.interruptState == FST && 0) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.interruptState == SND && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.guardState == GUARD_NOTSTARTED && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9)  && ((NONE == NONE && (std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end() || std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), S0) !=shallow_final_choice2B_guard.end())) || (NONE == LEFT && std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end()) || (NONE == RIGHT && std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice2B_guard.autState) !=shallow_final_choice2B_guard.end())))) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.guardState == GUARD_STARTED && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == NONE && (std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end() || std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), S0) !=shallow_final_choice2B_guard.end())) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == LEFT && std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end()) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == RIGHT && std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice2B_guard.autState) !=shallow_final_choice2B_guard.end())))))) || KLEENE_NOTSTARTED == ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.kleeneState) && (FST == FST && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && S0 == S0))) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.interruptState == FST && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_pguardB.ts_C.autState == S0))))))))))
				{
					if((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.callState == NOTCALLED && (((NOTCALLED == NOTCALLED && ((S0 == S0 && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.ts_E.h <= ts_J.avg - 3 * ts_J.stddev ) || (S0 == S0 && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.ts_E.h > ts_J.avg - 3 * ts_J.stddev ))) || (NOTCALLED == CALLED && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.ts_E.autState == S0 && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.ts_E.h <= ts_J.avg - 3 * ts_J.stddev ) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.ts_E.autState == S0 && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.ts_E.h > ts_J.avg - 3 * ts_J.stddev )))) || ((NOTCALLED == NOTCALLED && (((((FST == FST && 0) || (FST == SND && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.guardState == GUARD_NOTSTARTED && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9)  && ((NONE == NONE && (std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end() || std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), S0) !=shallow_final_choice2B_guard.end())) || (NONE == LEFT && std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end()) || (NONE == RIGHT && std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice2B_guard.autState) !=shallow_final_choice2B_guard.end())))) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.guardState == GUARD_STARTED && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == NONE && (std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end() || std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), S0) !=shallow_final_choice2B_guard.end())) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == LEFT && std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end()) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == RIGHT && std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice2B_guard.autState) !=shallow_final_choice2B_guard.end())))))) || KLEENE_NOTSTARTED == ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.kleeneState) && (FST == FST && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && S0 == S0))) || (FST == FST && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && S0 == S0)))) || (NOTCALLED == CALLED && (((((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.interruptState == FST && 0) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.interruptState == SND && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.guardState == GUARD_NOTSTARTED && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9)  && ((NONE == NONE && (std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end() || std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), S0) !=shallow_final_choice2B_guard.end())) || (NONE == LEFT && std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end()) || (NONE == RIGHT && std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice2B_guard.autState) !=shallow_final_choice2B_guard.end())))) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.guardState == GUARD_STARTED && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == NONE && (std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end() || std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), S0) !=shallow_final_choice2B_guard.end())) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == LEFT && std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end()) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == RIGHT && std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice2B_guard.autState) !=shallow_final_choice2B_guard.end())))))) || KLEENE_NOTSTARTED == ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.kleeneState) && (FST == FST && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && S0 == S0))) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.interruptState == FST && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_pguardB.ts_C.autState == S0))))))))
					{
						ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.callState = CALLED;
						ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.right_clock_F1.reset_clock();
						ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.left_clock_F2.reset_clock();
						ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.callState = NOTCALLED;
						ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.callState = NOTCALLED;
						if(((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.callState == NOTCALLED && ((S0 == S0 && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.ts_E.h <= ts_J.avg - 3 * ts_J.stddev ) || (S0 == S0 && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.ts_E.h > ts_J.avg - 3 * ts_J.stddev ))) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.callState == CALLED && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.ts_E.autState == S0 && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.ts_E.h <= ts_J.avg - 3 * ts_J.stddev ) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.ts_E.autState == S0 && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.ts_E.h > ts_J.avg - 3 * ts_J.stddev )))))
						{
							if((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.callState == NOTCALLED && ((S0 == S0 && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.ts_E.h <= ts_J.avg - 3 * ts_J.stddev ) || (S0 == S0 && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.ts_E.h > ts_J.avg - 3 * ts_J.stddev ))))
							{
								ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.callState = CALLED;
								ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.ts_E.autState = S0;
								ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.ts_E.h.reset_clock();
								if((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.ts_E.autState == S0 && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.ts_E.h <= ts_J.avg - 3 * ts_J.stddev ))
								{
									Alert(1);ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.ts_E.autState = S0;
									exec = 1;
								
								}else if((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.ts_E.autState == S0 && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.ts_E.h > ts_J.avg - 3 * ts_J.stddev ))
								{
									ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.ts_E.h.reset_clock();ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.ts_E.autState = S0;
									exec = 1;
								
								}
								ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.left_clock_F2.reset_clock();
							}else if((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.callState == CALLED && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.ts_E.autState == S0 && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.ts_E.h <= ts_J.avg - 3 * ts_J.stddev ) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.ts_E.autState == S0 && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.ts_E.h > ts_J.avg - 3 * ts_J.stddev ))))
							{
								if((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.ts_E.autState == S0 && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.ts_E.h <= ts_J.avg - 3 * ts_J.stddev ))
								{
									Alert(1);ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.ts_E.autState = S0;
									exec = 1;
								
								}else if((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.ts_E.autState == S0 && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.ts_E.h > ts_J.avg - 3 * ts_J.stddev ))
								{
									ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.ts_E.h.reset_clock();ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.ts_E.autState = S0;
									exec = 1;
								
								}
								ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.left_clock_F2.reset_clock();
							}
						
						}
						if(((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.callState == NOTCALLED && (((((FST == FST && 0) || (FST == SND && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.guardState == GUARD_NOTSTARTED && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9)  && ((NONE == NONE && (std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end() || std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), S0) !=shallow_final_choice2B_guard.end())) || (NONE == LEFT && std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end()) || (NONE == RIGHT && std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice2B_guard.autState) !=shallow_final_choice2B_guard.end())))) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.guardState == GUARD_STARTED && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == NONE && (std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end() || std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), S0) !=shallow_final_choice2B_guard.end())) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == LEFT && std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end()) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == RIGHT && std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice2B_guard.autState) !=shallow_final_choice2B_guard.end())))))) || KLEENE_NOTSTARTED == ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.kleeneState) && (FST == FST && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && S0 == S0))) || (FST == FST && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && S0 == S0)))) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.callState == CALLED && (((((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.interruptState == FST && 0) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.interruptState == SND && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.guardState == GUARD_NOTSTARTED && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9)  && ((NONE == NONE && (std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end() || std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), S0) !=shallow_final_choice2B_guard.end())) || (NONE == LEFT && std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end()) || (NONE == RIGHT && std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice2B_guard.autState) !=shallow_final_choice2B_guard.end())))) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.guardState == GUARD_STARTED && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == NONE && (std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end() || std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), S0) !=shallow_final_choice2B_guard.end())) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == LEFT && std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end()) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == RIGHT && std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice2B_guard.autState) !=shallow_final_choice2B_guard.end())))))) || KLEENE_NOTSTARTED == ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.kleeneState) && (FST == FST && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && S0 == S0))) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.interruptState == FST && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_pguardB.ts_C.autState == S0))))))
						{
							if((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.callState == NOTCALLED && (((((FST == FST && 0) || (FST == SND && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.guardState == GUARD_NOTSTARTED && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9)  && ((NONE == NONE && (std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end() || std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), S0) !=shallow_final_choice2B_guard.end())) || (NONE == LEFT && std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end()) || (NONE == RIGHT && std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice2B_guard.autState) !=shallow_final_choice2B_guard.end())))) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.guardState == GUARD_STARTED && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == NONE && (std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end() || std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), S0) !=shallow_final_choice2B_guard.end())) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == LEFT && std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end()) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == RIGHT && std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice2B_guard.autState) !=shallow_final_choice2B_guard.end())))))) || KLEENE_NOTSTARTED == ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.kleeneState) && (FST == FST && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && S0 == S0))) || (FST == FST && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && S0 == S0)))))
							{
								ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.callState = CALLED;
								ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.kleeneState = KLEENE_NOTSTARTED;
								ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.interruptState = FST;
								ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_pguardB.ts_C.autState = S0;
								if(((((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.interruptState == FST && 0) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.interruptState == SND && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.guardState == GUARD_NOTSTARTED && (last_event_time.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9)  && ((NONE == NONE && (std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end() || std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), S0) !=shallow_final_choice2B_guard.end())) || (NONE == LEFT && std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end()) || (NONE == RIGHT && std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice2B_guard.autState) !=shallow_final_choice2B_guard.end())))) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.guardState == GUARD_STARTED && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == NONE && (std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end() || std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), S0) !=shallow_final_choice2B_guard.end())) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == LEFT && std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end()) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == RIGHT && std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice2B_guard.autState) !=shallow_final_choice2B_guard.end())))))) || KLEENE_NOTSTARTED == ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.kleeneState) && (FST == FST && (last_event_time.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && S0 == S0))))
								{
									ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.kleeneState = KLEENE_STARTED;
									ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.interruptState = FST;
									ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_pguardB.ts_C.autState = S0;
									if((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.interruptState == FST && (last_event_time.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_pguardB.ts_C.autState == S0)))
									{
										if((last_event_time.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_pguardB.ts_C.autState == S0))
										{
											if(ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_pguardB.ts_C.autState == S0)
											{
												ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_pguardB.ts_C.autState = S0;
												exec = 1;
											
											}
										
										}
									
									}
								
								}else if((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.interruptState == FST && (last_event_time.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_pguardB.ts_C.autState == S0)))
								{
									ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.kleeneState = KLEENE_STARTED;
									if((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.interruptState == FST && (last_event_time.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_pguardB.ts_C.autState == S0)))
									{
										if((last_event_time.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_pguardB.ts_C.autState == S0))
										{
											if(ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_pguardB.ts_C.autState == S0)
											{
												ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_pguardB.ts_C.autState = S0;
												exec = 1;
											
											}
										
										}
									
									}
								
								}
								ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.right_clock_F1.reset_clock();
							}else if((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.callState == CALLED && (((((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.interruptState == FST && 0) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.interruptState == SND && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.guardState == GUARD_NOTSTARTED && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9)  && ((NONE == NONE && (std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end() || std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), S0) !=shallow_final_choice2B_guard.end())) || (NONE == LEFT && std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end()) || (NONE == RIGHT && std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice2B_guard.autState) !=shallow_final_choice2B_guard.end())))) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.guardState == GUARD_STARTED && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == NONE && (std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end() || std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), S0) !=shallow_final_choice2B_guard.end())) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == LEFT && std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end()) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == RIGHT && std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice2B_guard.autState) !=shallow_final_choice2B_guard.end())))))) || KLEENE_NOTSTARTED == ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.kleeneState) && (FST == FST && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && S0 == S0))) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.interruptState == FST && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_pguardB.ts_C.autState == S0)))))
							{
								if(((((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.interruptState == FST && 0) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.interruptState == SND && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.guardState == GUARD_NOTSTARTED && (last_event_time.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9)  && ((NONE == NONE && (std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end() || std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), S0) !=shallow_final_choice2B_guard.end())) || (NONE == LEFT && std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end()) || (NONE == RIGHT && std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice2B_guard.autState) !=shallow_final_choice2B_guard.end())))) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.guardState == GUARD_STARTED && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == NONE && (std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end() || std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), S0) !=shallow_final_choice2B_guard.end())) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == LEFT && std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end()) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == RIGHT && std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice2B_guard.autState) !=shallow_final_choice2B_guard.end())))))) || KLEENE_NOTSTARTED == ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.kleeneState) && (FST == FST && (last_event_time.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && S0 == S0))))
								{
									ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.kleeneState = KLEENE_STARTED;
									ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.interruptState = FST;
									ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_pguardB.ts_C.autState = S0;
									if((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.interruptState == FST && (last_event_time.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_pguardB.ts_C.autState == S0)))
									{
										if((last_event_time.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_pguardB.ts_C.autState == S0))
										{
											if(ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_pguardB.ts_C.autState == S0)
											{
												ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_pguardB.ts_C.autState = S0;
												exec = 1;
											
											}
										
										}
									
									}
								
								}else if((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.interruptState == FST && (last_event_time.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_pguardB.ts_C.autState == S0)))
								{
									ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.kleeneState = KLEENE_STARTED;
									if((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.interruptState == FST && (last_event_time.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_pguardB.ts_C.autState == S0)))
									{
										if((last_event_time.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_pguardB.ts_C.autState == S0))
										{
											if(ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_pguardB.ts_C.autState == S0)
											{
												ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_pguardB.ts_C.autState = S0;
												exec = 1;
											
											}
										
										}
									
									}
								
								}
								ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.right_clock_F1.reset_clock();
							}
						
						}
					
					}else if((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.callState == CALLED && (((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.callState == NOTCALLED && ((S0 == S0 && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.ts_E.h <= ts_J.avg - 3 * ts_J.stddev ) || (S0 == S0 && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.ts_E.h > ts_J.avg - 3 * ts_J.stddev ))) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.callState == CALLED && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.ts_E.autState == S0 && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.ts_E.h <= ts_J.avg - 3 * ts_J.stddev ) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.ts_E.autState == S0 && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.ts_E.h > ts_J.avg - 3 * ts_J.stddev )))) || ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.callState == NOTCALLED && (((((FST == FST && 0) || (FST == SND && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.guardState == GUARD_NOTSTARTED && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9)  && ((NONE == NONE && (std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end() || std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), S0) !=shallow_final_choice2B_guard.end())) || (NONE == LEFT && std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end()) || (NONE == RIGHT && std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice2B_guard.autState) !=shallow_final_choice2B_guard.end())))) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.guardState == GUARD_STARTED && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == NONE && (std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end() || std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), S0) !=shallow_final_choice2B_guard.end())) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == LEFT && std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end()) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == RIGHT && std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice2B_guard.autState) !=shallow_final_choice2B_guard.end())))))) || KLEENE_NOTSTARTED == ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.kleeneState) && (FST == FST && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && S0 == S0))) || (FST == FST && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && S0 == S0)))) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.callState == CALLED && (((((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.interruptState == FST && 0) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.interruptState == SND && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.guardState == GUARD_NOTSTARTED && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9)  && ((NONE == NONE && (std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end() || std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), S0) !=shallow_final_choice2B_guard.end())) || (NONE == LEFT && std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end()) || (NONE == RIGHT && std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice2B_guard.autState) !=shallow_final_choice2B_guard.end())))) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.guardState == GUARD_STARTED && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == NONE && (std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end() || std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), S0) !=shallow_final_choice2B_guard.end())) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == LEFT && std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end()) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == RIGHT && std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice2B_guard.autState) !=shallow_final_choice2B_guard.end())))))) || KLEENE_NOTSTARTED == ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.kleeneState) && (FST == FST && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && S0 == S0))) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.interruptState == FST && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_pguardB.ts_C.autState == S0))))))))
					{
						if(((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.callState == NOTCALLED && ((S0 == S0 && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.ts_E.h <= ts_J.avg - 3 * ts_J.stddev ) || (S0 == S0 && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.ts_E.h > ts_J.avg - 3 * ts_J.stddev ))) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.callState == CALLED && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.ts_E.autState == S0 && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.ts_E.h <= ts_J.avg - 3 * ts_J.stddev ) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.ts_E.autState == S0 && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.ts_E.h > ts_J.avg - 3 * ts_J.stddev )))))
						{
							if((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.callState == NOTCALLED && ((S0 == S0 && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.ts_E.h <= ts_J.avg - 3 * ts_J.stddev ) || (S0 == S0 && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.ts_E.h > ts_J.avg - 3 * ts_J.stddev ))))
							{
								ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.callState = CALLED;
								ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.ts_E.autState = S0;
								ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.ts_E.h.reset_clock();
								if((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.ts_E.autState == S0 && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.ts_E.h <= ts_J.avg - 3 * ts_J.stddev ))
								{
									Alert(1);ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.ts_E.autState = S0;
									exec = 1;
								
								}else if((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.ts_E.autState == S0 && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.ts_E.h > ts_J.avg - 3 * ts_J.stddev ))
								{
									ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.ts_E.h.reset_clock();ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.ts_E.autState = S0;
									exec = 1;
								
								}
								ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.left_clock_F2.reset_clock();
							}else if((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.callState == CALLED && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.ts_E.autState == S0 && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.ts_E.h <= ts_J.avg - 3 * ts_J.stddev ) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.ts_E.autState == S0 && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.ts_E.h > ts_J.avg - 3 * ts_J.stddev ))))
							{
								if((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.ts_E.autState == S0 && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.ts_E.h <= ts_J.avg - 3 * ts_J.stddev ))
								{
									Alert(1);ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.ts_E.autState = S0;
									exec = 1;
								
								}else if((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.ts_E.autState == S0 && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.ts_E.h > ts_J.avg - 3 * ts_J.stddev ))
								{
									ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.ts_E.h.reset_clock();ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.ts_E.autState = S0;
									exec = 1;
								
								}
								ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.left_clock_F2.reset_clock();
							}
						
						}
						if(((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.callState == NOTCALLED && (((((FST == FST && 0) || (FST == SND && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.guardState == GUARD_NOTSTARTED && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9)  && ((NONE == NONE && (std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end() || std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), S0) !=shallow_final_choice2B_guard.end())) || (NONE == LEFT && std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end()) || (NONE == RIGHT && std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice2B_guard.autState) !=shallow_final_choice2B_guard.end())))) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.guardState == GUARD_STARTED && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == NONE && (std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end() || std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), S0) !=shallow_final_choice2B_guard.end())) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == LEFT && std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end()) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == RIGHT && std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice2B_guard.autState) !=shallow_final_choice2B_guard.end())))))) || KLEENE_NOTSTARTED == ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.kleeneState) && (FST == FST && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && S0 == S0))) || (FST == FST && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && S0 == S0)))) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.callState == CALLED && (((((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.interruptState == FST && 0) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.interruptState == SND && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.guardState == GUARD_NOTSTARTED && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9)  && ((NONE == NONE && (std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end() || std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), S0) !=shallow_final_choice2B_guard.end())) || (NONE == LEFT && std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end()) || (NONE == RIGHT && std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice2B_guard.autState) !=shallow_final_choice2B_guard.end())))) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.guardState == GUARD_STARTED && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == NONE && (std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end() || std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), S0) !=shallow_final_choice2B_guard.end())) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == LEFT && std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end()) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == RIGHT && std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice2B_guard.autState) !=shallow_final_choice2B_guard.end())))))) || KLEENE_NOTSTARTED == ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.kleeneState) && (FST == FST && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && S0 == S0))) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.interruptState == FST && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_pguardB.ts_C.autState == S0))))))
						{
							if((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.callState == NOTCALLED && (((((FST == FST && 0) || (FST == SND && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.guardState == GUARD_NOTSTARTED && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9)  && ((NONE == NONE && (std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end() || std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), S0) !=shallow_final_choice2B_guard.end())) || (NONE == LEFT && std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end()) || (NONE == RIGHT && std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice2B_guard.autState) !=shallow_final_choice2B_guard.end())))) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.guardState == GUARD_STARTED && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == NONE && (std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end() || std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), S0) !=shallow_final_choice2B_guard.end())) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == LEFT && std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end()) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == RIGHT && std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice2B_guard.autState) !=shallow_final_choice2B_guard.end())))))) || KLEENE_NOTSTARTED == ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.kleeneState) && (FST == FST && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && S0 == S0))) || (FST == FST && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && S0 == S0)))))
							{
								ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.callState = CALLED;
								ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.kleeneState = KLEENE_NOTSTARTED;
								ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.interruptState = FST;
								ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_pguardB.ts_C.autState = S0;
								if(((((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.interruptState == FST && 0) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.interruptState == SND && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.guardState == GUARD_NOTSTARTED && (last_event_time.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9)  && ((NONE == NONE && (std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end() || std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), S0) !=shallow_final_choice2B_guard.end())) || (NONE == LEFT && std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end()) || (NONE == RIGHT && std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice2B_guard.autState) !=shallow_final_choice2B_guard.end())))) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.guardState == GUARD_STARTED && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == NONE && (std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end() || std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), S0) !=shallow_final_choice2B_guard.end())) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == LEFT && std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end()) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == RIGHT && std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice2B_guard.autState) !=shallow_final_choice2B_guard.end())))))) || KLEENE_NOTSTARTED == ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.kleeneState) && (FST == FST && (last_event_time.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && S0 == S0))))
								{
									ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.kleeneState = KLEENE_STARTED;
									ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.interruptState = FST;
									ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_pguardB.ts_C.autState = S0;
									if((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.interruptState == FST && (last_event_time.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_pguardB.ts_C.autState == S0)))
									{
										if((last_event_time.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_pguardB.ts_C.autState == S0))
										{
											if(ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_pguardB.ts_C.autState == S0)
											{
												ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_pguardB.ts_C.autState = S0;
												exec = 1;
											
											}
										
										}
									
									}
								
								}else if((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.interruptState == FST && (last_event_time.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_pguardB.ts_C.autState == S0)))
								{
									ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.kleeneState = KLEENE_STARTED;
									if((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.interruptState == FST && (last_event_time.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_pguardB.ts_C.autState == S0)))
									{
										if((last_event_time.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_pguardB.ts_C.autState == S0))
										{
											if(ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_pguardB.ts_C.autState == S0)
											{
												ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_pguardB.ts_C.autState = S0;
												exec = 1;
											
											}
										
										}
									
									}
								
								}
								ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.right_clock_F1.reset_clock();
							}else if((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.callState == CALLED && (((((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.interruptState == FST && 0) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.interruptState == SND && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.guardState == GUARD_NOTSTARTED && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9)  && ((NONE == NONE && (std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end() || std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), S0) !=shallow_final_choice2B_guard.end())) || (NONE == LEFT && std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end()) || (NONE == RIGHT && std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice2B_guard.autState) !=shallow_final_choice2B_guard.end())))) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.guardState == GUARD_STARTED && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == NONE && (std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end() || std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), S0) !=shallow_final_choice2B_guard.end())) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == LEFT && std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end()) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == RIGHT && std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice2B_guard.autState) !=shallow_final_choice2B_guard.end())))))) || KLEENE_NOTSTARTED == ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.kleeneState) && (FST == FST && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && S0 == S0))) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.interruptState == FST && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_pguardB.ts_C.autState == S0)))))
							{
								if(((((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.interruptState == FST && 0) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.interruptState == SND && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.guardState == GUARD_NOTSTARTED && (last_event_time.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9)  && ((NONE == NONE && (std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end() || std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), S0) !=shallow_final_choice2B_guard.end())) || (NONE == LEFT && std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end()) || (NONE == RIGHT && std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice2B_guard.autState) !=shallow_final_choice2B_guard.end())))) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.guardState == GUARD_STARTED && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == NONE && (std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end() || std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), S0) !=shallow_final_choice2B_guard.end())) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == LEFT && std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end()) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == RIGHT && std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice2B_guard.autState) !=shallow_final_choice2B_guard.end())))))) || KLEENE_NOTSTARTED == ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.kleeneState) && (FST == FST && (last_event_time.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && S0 == S0))))
								{
									ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.kleeneState = KLEENE_STARTED;
									ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.interruptState = FST;
									ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_pguardB.ts_C.autState = S0;
									if((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.interruptState == FST && (last_event_time.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_pguardB.ts_C.autState == S0)))
									{
										if((last_event_time.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_pguardB.ts_C.autState == S0))
										{
											if(ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_pguardB.ts_C.autState == S0)
											{
												ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_pguardB.ts_C.autState = S0;
												exec = 1;
											
											}
										
										}
									
									}
								
								}else if((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.interruptState == FST && (last_event_time.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_pguardB.ts_C.autState == S0)))
								{
									ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.kleeneState = KLEENE_STARTED;
									if((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.interruptState == FST && (last_event_time.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_pguardB.ts_C.autState == S0)))
									{
										if((last_event_time.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_pguardB.ts_C.autState == S0))
										{
											if(ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_pguardB.ts_C.autState == S0)
											{
												ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_pguardB.ts_C.autState = S0;
												exec = 1;
											
											}
										
										}
									
									}
								
								}
								ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.right_clock_F1.reset_clock();
							}
						
						}
					
					}
				
				}
			
			}else if((ts_J.ts_guardJ.ts_choiceJ_guard.choiceState == NONE && ((NOTCALLED == NOTCALLED && (((NOTCALLED == NOTCALLED && ((S0 == S0 && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F2.ts_E.h <= ts_J.avg - 3 * ts_J.stddev ) || (S0 == S0 && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F2.ts_E.h > ts_J.avg - 3 * ts_J.stddev ))) || (NOTCALLED == CALLED && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F2.ts_E.autState == S0 && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F2.ts_E.h <= ts_J.avg - 3 * ts_J.stddev ) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F2.ts_E.autState == S0 && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F2.ts_E.h > ts_J.avg - 3 * ts_J.stddev )))) || ((NOTCALLED == NOTCALLED && (((((FST == FST && 0) || (FST == SND && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.guardState == GUARD_NOTSTARTED && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9)  && ((NONE == NONE && (std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end() || std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), S0) !=shallow_final_choice2B_guard.end())) || (NONE == LEFT && std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end()) || (NONE == RIGHT && std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice2B_guard.autState) !=shallow_final_choice2B_guard.end())))) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.guardState == GUARD_STARTED && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == NONE && (std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end() || std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), S0) !=shallow_final_choice2B_guard.end())) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == LEFT && std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end()) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == RIGHT && std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice2B_guard.autState) !=shallow_final_choice2B_guard.end())))))) || KLEENE_NOTSTARTED == ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.kleeneState) && (FST == FST && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && S0 == S0))) || (FST == FST && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && S0 == S0)))) || (NOTCALLED == CALLED && (((((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.interruptState == FST && 0) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.interruptState == SND && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.guardState == GUARD_NOTSTARTED && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9)  && ((NONE == NONE && (std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end() || std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), S0) !=shallow_final_choice2B_guard.end())) || (NONE == LEFT && std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end()) || (NONE == RIGHT && std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice2B_guard.autState) !=shallow_final_choice2B_guard.end())))) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.guardState == GUARD_STARTED && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == NONE && (std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end() || std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), S0) !=shallow_final_choice2B_guard.end())) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == LEFT && std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end()) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == RIGHT && std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice2B_guard.autState) !=shallow_final_choice2B_guard.end())))))) || KLEENE_NOTSTARTED == ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.kleeneState) && (FST == FST && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && S0 == S0))) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.interruptState == FST && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_pguardB.ts_C.autState == S0))))))) || (NOTCALLED == CALLED && (((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F2.callState == NOTCALLED && ((S0 == S0 && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F2.ts_E.h <= ts_J.avg - 3 * ts_J.stddev ) || (S0 == S0 && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F2.ts_E.h > ts_J.avg - 3 * ts_J.stddev ))) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F2.callState == CALLED && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F2.ts_E.autState == S0 && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F2.ts_E.h <= ts_J.avg - 3 * ts_J.stddev ) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F2.ts_E.autState == S0 && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F2.ts_E.h > ts_J.avg - 3 * ts_J.stddev )))) || ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.callState == NOTCALLED && (((((FST == FST && 0) || (FST == SND && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.guardState == GUARD_NOTSTARTED && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9)  && ((NONE == NONE && (std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end() || std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), S0) !=shallow_final_choice2B_guard.end())) || (NONE == LEFT && std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end()) || (NONE == RIGHT && std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice2B_guard.autState) !=shallow_final_choice2B_guard.end())))) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.guardState == GUARD_STARTED && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == NONE && (std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end() || std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), S0) !=shallow_final_choice2B_guard.end())) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == LEFT && std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end()) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == RIGHT && std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice2B_guard.autState) !=shallow_final_choice2B_guard.end())))))) || KLEENE_NOTSTARTED == ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.kleeneState) && (FST == FST && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && S0 == S0))) || (FST == FST && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && S0 == S0)))) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.callState == CALLED && (((((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.interruptState == FST && 0) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.interruptState == SND && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.guardState == GUARD_NOTSTARTED && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9)  && ((NONE == NONE && (std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end() || std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), S0) !=shallow_final_choice2B_guard.end())) || (NONE == LEFT && std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end()) || (NONE == RIGHT && std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice2B_guard.autState) !=shallow_final_choice2B_guard.end())))) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.guardState == GUARD_STARTED && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == NONE && (std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end() || std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), S0) !=shallow_final_choice2B_guard.end())) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == LEFT && std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end()) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == RIGHT && std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice2B_guard.autState) !=shallow_final_choice2B_guard.end())))))) || KLEENE_NOTSTARTED == ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.kleeneState) && (FST == FST && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && S0 == S0))) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.interruptState == FST && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_pguardB.ts_C.autState == S0))))))))))
			{
				ts_J.ts_guardJ.ts_choiceJ_guard.choiceState = RIGHT;
				ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.callState = NOTCALLED;
				if((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.callState == NOTCALLED && (((NOTCALLED == NOTCALLED && ((S0 == S0 && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F2.ts_E.h <= ts_J.avg - 3 * ts_J.stddev ) || (S0 == S0 && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F2.ts_E.h > ts_J.avg - 3 * ts_J.stddev ))) || (NOTCALLED == CALLED && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F2.ts_E.autState == S0 && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F2.ts_E.h <= ts_J.avg - 3 * ts_J.stddev ) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F2.ts_E.autState == S0 && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F2.ts_E.h > ts_J.avg - 3 * ts_J.stddev )))) || ((NOTCALLED == NOTCALLED && (((((FST == FST && 0) || (FST == SND && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.guardState == GUARD_NOTSTARTED && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9)  && ((NONE == NONE && (std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end() || std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), S0) !=shallow_final_choice2B_guard.end())) || (NONE == LEFT && std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end()) || (NONE == RIGHT && std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice2B_guard.autState) !=shallow_final_choice2B_guard.end())))) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.guardState == GUARD_STARTED && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == NONE && (std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end() || std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), S0) !=shallow_final_choice2B_guard.end())) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == LEFT && std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end()) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == RIGHT && std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice2B_guard.autState) !=shallow_final_choice2B_guard.end())))))) || KLEENE_NOTSTARTED == ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.kleeneState) && (FST == FST && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && S0 == S0))) || (FST == FST && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && S0 == S0)))) || (NOTCALLED == CALLED && (((((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.interruptState == FST && 0) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.interruptState == SND && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.guardState == GUARD_NOTSTARTED && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9)  && ((NONE == NONE && (std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end() || std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), S0) !=shallow_final_choice2B_guard.end())) || (NONE == LEFT && std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end()) || (NONE == RIGHT && std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice2B_guard.autState) !=shallow_final_choice2B_guard.end())))) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.guardState == GUARD_STARTED && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == NONE && (std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end() || std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), S0) !=shallow_final_choice2B_guard.end())) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == LEFT && std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end()) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == RIGHT && std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice2B_guard.autState) !=shallow_final_choice2B_guard.end())))))) || KLEENE_NOTSTARTED == ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.kleeneState) && (FST == FST && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && S0 == S0))) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.interruptState == FST && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_pguardB.ts_C.autState == S0))))))))
				{
					ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.callState = CALLED;
					ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.right_clock_F1.reset_clock();
					ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.left_clock_F2.reset_clock();
					ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F2.callState = NOTCALLED;
					ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.callState = NOTCALLED;
					if(((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F2.callState == NOTCALLED && ((S0 == S0 && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F2.ts_E.h <= ts_J.avg - 3 * ts_J.stddev ) || (S0 == S0 && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F2.ts_E.h > ts_J.avg - 3 * ts_J.stddev ))) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F2.callState == CALLED && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F2.ts_E.autState == S0 && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F2.ts_E.h <= ts_J.avg - 3 * ts_J.stddev ) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F2.ts_E.autState == S0 && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F2.ts_E.h > ts_J.avg - 3 * ts_J.stddev )))))
					{
						if((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F2.callState == NOTCALLED && ((S0 == S0 && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F2.ts_E.h <= ts_J.avg - 3 * ts_J.stddev ) || (S0 == S0 && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F2.ts_E.h > ts_J.avg - 3 * ts_J.stddev ))))
						{
							ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F2.callState = CALLED;
							ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F2.ts_E.autState = S0;
							ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F2.ts_E.h.reset_clock();
							if((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F2.ts_E.autState == S0 && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F2.ts_E.h <= ts_J.avg - 3 * ts_J.stddev ))
							{
								Alert(1);ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F2.ts_E.autState = S0;
								exec = 1;
							
							}else if((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F2.ts_E.autState == S0 && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F2.ts_E.h > ts_J.avg - 3 * ts_J.stddev ))
							{
								ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F2.ts_E.h.reset_clock();ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F2.ts_E.autState = S0;
								exec = 1;
							
							}
							ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.left_clock_F2.reset_clock();
						}else if((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F2.callState == CALLED && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F2.ts_E.autState == S0 && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F2.ts_E.h <= ts_J.avg - 3 * ts_J.stddev ) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F2.ts_E.autState == S0 && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F2.ts_E.h > ts_J.avg - 3 * ts_J.stddev ))))
						{
							if((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F2.ts_E.autState == S0 && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F2.ts_E.h <= ts_J.avg - 3 * ts_J.stddev ))
							{
								Alert(1);ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F2.ts_E.autState = S0;
								exec = 1;
							
							}else if((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F2.ts_E.autState == S0 && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F2.ts_E.h > ts_J.avg - 3 * ts_J.stddev ))
							{
								ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F2.ts_E.h.reset_clock();ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F2.ts_E.autState = S0;
								exec = 1;
							
							}
							ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.left_clock_F2.reset_clock();
						}
					
					}
					if(((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.callState == NOTCALLED && (((((FST == FST && 0) || (FST == SND && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.guardState == GUARD_NOTSTARTED && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9)  && ((NONE == NONE && (std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end() || std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), S0) !=shallow_final_choice2B_guard.end())) || (NONE == LEFT && std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end()) || (NONE == RIGHT && std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice2B_guard.autState) !=shallow_final_choice2B_guard.end())))) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.guardState == GUARD_STARTED && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == NONE && (std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end() || std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), S0) !=shallow_final_choice2B_guard.end())) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == LEFT && std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end()) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == RIGHT && std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice2B_guard.autState) !=shallow_final_choice2B_guard.end())))))) || KLEENE_NOTSTARTED == ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.kleeneState) && (FST == FST && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && S0 == S0))) || (FST == FST && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && S0 == S0)))) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.callState == CALLED && (((((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.interruptState == FST && 0) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.interruptState == SND && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.guardState == GUARD_NOTSTARTED && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9)  && ((NONE == NONE && (std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end() || std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), S0) !=shallow_final_choice2B_guard.end())) || (NONE == LEFT && std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end()) || (NONE == RIGHT && std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice2B_guard.autState) !=shallow_final_choice2B_guard.end())))) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.guardState == GUARD_STARTED && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == NONE && (std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end() || std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), S0) !=shallow_final_choice2B_guard.end())) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == LEFT && std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end()) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == RIGHT && std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice2B_guard.autState) !=shallow_final_choice2B_guard.end())))))) || KLEENE_NOTSTARTED == ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.kleeneState) && (FST == FST && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && S0 == S0))) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.interruptState == FST && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_pguardB.ts_C.autState == S0))))))
					{
						if((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.callState == NOTCALLED && (((((FST == FST && 0) || (FST == SND && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.guardState == GUARD_NOTSTARTED && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9)  && ((NONE == NONE && (std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end() || std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), S0) !=shallow_final_choice2B_guard.end())) || (NONE == LEFT && std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end()) || (NONE == RIGHT && std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice2B_guard.autState) !=shallow_final_choice2B_guard.end())))) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.guardState == GUARD_STARTED && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == NONE && (std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end() || std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), S0) !=shallow_final_choice2B_guard.end())) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == LEFT && std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end()) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == RIGHT && std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice2B_guard.autState) !=shallow_final_choice2B_guard.end())))))) || KLEENE_NOTSTARTED == ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.kleeneState) && (FST == FST && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && S0 == S0))) || (FST == FST && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && S0 == S0)))))
						{
							ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.callState = CALLED;
							ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.kleeneState = KLEENE_NOTSTARTED;
							ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.interruptState = FST;
							ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_pguardB.ts_C.autState = S0;
							if(((((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.interruptState == FST && 0) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.interruptState == SND && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.guardState == GUARD_NOTSTARTED && (last_event_time.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9)  && ((NONE == NONE && (std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end() || std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), S0) !=shallow_final_choice2B_guard.end())) || (NONE == LEFT && std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end()) || (NONE == RIGHT && std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice2B_guard.autState) !=shallow_final_choice2B_guard.end())))) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.guardState == GUARD_STARTED && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == NONE && (std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end() || std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), S0) !=shallow_final_choice2B_guard.end())) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == LEFT && std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end()) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == RIGHT && std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice2B_guard.autState) !=shallow_final_choice2B_guard.end())))))) || KLEENE_NOTSTARTED == ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.kleeneState) && (FST == FST && (last_event_time.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && S0 == S0))))
							{
								ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.kleeneState = KLEENE_STARTED;
								ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.interruptState = FST;
								ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_pguardB.ts_C.autState = S0;
								if((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.interruptState == FST && (last_event_time.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_pguardB.ts_C.autState == S0)))
								{
									if((last_event_time.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_pguardB.ts_C.autState == S0))
									{
										if(ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_pguardB.ts_C.autState == S0)
										{
											ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_pguardB.ts_C.autState = S0;
											exec = 1;
										
										}
									
									}
								
								}
							
							}else if((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.interruptState == FST && (last_event_time.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_pguardB.ts_C.autState == S0)))
							{
								ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.kleeneState = KLEENE_STARTED;
								if((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.interruptState == FST && (last_event_time.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_pguardB.ts_C.autState == S0)))
								{
									if((last_event_time.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_pguardB.ts_C.autState == S0))
									{
										if(ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_pguardB.ts_C.autState == S0)
										{
											ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_pguardB.ts_C.autState = S0;
											exec = 1;
										
										}
									
									}
								
								}
							
							}
							ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.right_clock_F1.reset_clock();
						}else if((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.callState == CALLED && (((((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.interruptState == FST && 0) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.interruptState == SND && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.guardState == GUARD_NOTSTARTED && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9)  && ((NONE == NONE && (std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end() || std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), S0) !=shallow_final_choice2B_guard.end())) || (NONE == LEFT && std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end()) || (NONE == RIGHT && std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice2B_guard.autState) !=shallow_final_choice2B_guard.end())))) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.guardState == GUARD_STARTED && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == NONE && (std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end() || std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), S0) !=shallow_final_choice2B_guard.end())) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == LEFT && std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end()) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == RIGHT && std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice2B_guard.autState) !=shallow_final_choice2B_guard.end())))))) || KLEENE_NOTSTARTED == ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.kleeneState) && (FST == FST && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && S0 == S0))) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.interruptState == FST && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_pguardB.ts_C.autState == S0)))))
						{
							if(((((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.interruptState == FST && 0) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.interruptState == SND && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.guardState == GUARD_NOTSTARTED && (last_event_time.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9)  && ((NONE == NONE && (std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end() || std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), S0) !=shallow_final_choice2B_guard.end())) || (NONE == LEFT && std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end()) || (NONE == RIGHT && std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice2B_guard.autState) !=shallow_final_choice2B_guard.end())))) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.guardState == GUARD_STARTED && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == NONE && (std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end() || std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), S0) !=shallow_final_choice2B_guard.end())) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == LEFT && std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end()) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == RIGHT && std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice2B_guard.autState) !=shallow_final_choice2B_guard.end())))))) || KLEENE_NOTSTARTED == ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.kleeneState) && (FST == FST && (last_event_time.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && S0 == S0))))
							{
								ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.kleeneState = KLEENE_STARTED;
								ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.interruptState = FST;
								ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_pguardB.ts_C.autState = S0;
								if((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.interruptState == FST && (last_event_time.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_pguardB.ts_C.autState == S0)))
								{
									if((last_event_time.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_pguardB.ts_C.autState == S0))
									{
										if(ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_pguardB.ts_C.autState == S0)
										{
											ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_pguardB.ts_C.autState = S0;
											exec = 1;
										
										}
									
									}
								
								}
							
							}else if((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.interruptState == FST && (last_event_time.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_pguardB.ts_C.autState == S0)))
							{
								ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.kleeneState = KLEENE_STARTED;
								if((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.interruptState == FST && (last_event_time.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_pguardB.ts_C.autState == S0)))
								{
									if((last_event_time.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_pguardB.ts_C.autState == S0))
									{
										if(ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_pguardB.ts_C.autState == S0)
										{
											ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_pguardB.ts_C.autState = S0;
											exec = 1;
										
										}
									
									}
								
								}
							
							}
							ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.right_clock_F1.reset_clock();
						}
					
					}
				
				}else if((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.callState == CALLED && (((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F2.callState == NOTCALLED && ((S0 == S0 && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F2.ts_E.h <= ts_J.avg - 3 * ts_J.stddev ) || (S0 == S0 && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F2.ts_E.h > ts_J.avg - 3 * ts_J.stddev ))) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F2.callState == CALLED && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F2.ts_E.autState == S0 && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F2.ts_E.h <= ts_J.avg - 3 * ts_J.stddev ) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F2.ts_E.autState == S0 && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F2.ts_E.h > ts_J.avg - 3 * ts_J.stddev )))) || ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.callState == NOTCALLED && (((((FST == FST && 0) || (FST == SND && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.guardState == GUARD_NOTSTARTED && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9)  && ((NONE == NONE && (std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end() || std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), S0) !=shallow_final_choice2B_guard.end())) || (NONE == LEFT && std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end()) || (NONE == RIGHT && std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice2B_guard.autState) !=shallow_final_choice2B_guard.end())))) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.guardState == GUARD_STARTED && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == NONE && (std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end() || std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), S0) !=shallow_final_choice2B_guard.end())) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == LEFT && std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end()) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == RIGHT && std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice2B_guard.autState) !=shallow_final_choice2B_guard.end())))))) || KLEENE_NOTSTARTED == ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.kleeneState) && (FST == FST && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && S0 == S0))) || (FST == FST && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && S0 == S0)))) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.callState == CALLED && (((((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.interruptState == FST && 0) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.interruptState == SND && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.guardState == GUARD_NOTSTARTED && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9)  && ((NONE == NONE && (std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end() || std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), S0) !=shallow_final_choice2B_guard.end())) || (NONE == LEFT && std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end()) || (NONE == RIGHT && std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice2B_guard.autState) !=shallow_final_choice2B_guard.end())))) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.guardState == GUARD_STARTED && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == NONE && (std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end() || std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), S0) !=shallow_final_choice2B_guard.end())) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == LEFT && std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end()) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == RIGHT && std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice2B_guard.autState) !=shallow_final_choice2B_guard.end())))))) || KLEENE_NOTSTARTED == ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.kleeneState) && (FST == FST && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && S0 == S0))) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.interruptState == FST && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_pguardB.ts_C.autState == S0))))))))
				{
					if(((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F2.callState == NOTCALLED && ((S0 == S0 && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F2.ts_E.h <= ts_J.avg - 3 * ts_J.stddev ) || (S0 == S0 && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F2.ts_E.h > ts_J.avg - 3 * ts_J.stddev ))) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F2.callState == CALLED && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F2.ts_E.autState == S0 && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F2.ts_E.h <= ts_J.avg - 3 * ts_J.stddev ) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F2.ts_E.autState == S0 && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F2.ts_E.h > ts_J.avg - 3 * ts_J.stddev )))))
					{
						if((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F2.callState == NOTCALLED && ((S0 == S0 && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F2.ts_E.h <= ts_J.avg - 3 * ts_J.stddev ) || (S0 == S0 && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F2.ts_E.h > ts_J.avg - 3 * ts_J.stddev ))))
						{
							ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F2.callState = CALLED;
							ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F2.ts_E.autState = S0;
							ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F2.ts_E.h.reset_clock();
							if((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F2.ts_E.autState == S0 && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F2.ts_E.h <= ts_J.avg - 3 * ts_J.stddev ))
							{
								Alert(1);ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F2.ts_E.autState = S0;
								exec = 1;
							
							}else if((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F2.ts_E.autState == S0 && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F2.ts_E.h > ts_J.avg - 3 * ts_J.stddev ))
							{
								ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F2.ts_E.h.reset_clock();ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F2.ts_E.autState = S0;
								exec = 1;
							
							}
							ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.left_clock_F2.reset_clock();
						}else if((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F2.callState == CALLED && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F2.ts_E.autState == S0 && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F2.ts_E.h <= ts_J.avg - 3 * ts_J.stddev ) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F2.ts_E.autState == S0 && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F2.ts_E.h > ts_J.avg - 3 * ts_J.stddev ))))
						{
							if((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F2.ts_E.autState == S0 && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F2.ts_E.h <= ts_J.avg - 3 * ts_J.stddev ))
							{
								Alert(1);ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F2.ts_E.autState = S0;
								exec = 1;
							
							}else if((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F2.ts_E.autState == S0 && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F2.ts_E.h > ts_J.avg - 3 * ts_J.stddev ))
							{
								ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F2.ts_E.h.reset_clock();ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F2.ts_E.autState = S0;
								exec = 1;
							
							}
							ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.left_clock_F2.reset_clock();
						}
					
					}
					if(((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.callState == NOTCALLED && (((((FST == FST && 0) || (FST == SND && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.guardState == GUARD_NOTSTARTED && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9)  && ((NONE == NONE && (std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end() || std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), S0) !=shallow_final_choice2B_guard.end())) || (NONE == LEFT && std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end()) || (NONE == RIGHT && std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice2B_guard.autState) !=shallow_final_choice2B_guard.end())))) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.guardState == GUARD_STARTED && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == NONE && (std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end() || std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), S0) !=shallow_final_choice2B_guard.end())) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == LEFT && std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end()) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == RIGHT && std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice2B_guard.autState) !=shallow_final_choice2B_guard.end())))))) || KLEENE_NOTSTARTED == ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.kleeneState) && (FST == FST && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && S0 == S0))) || (FST == FST && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && S0 == S0)))) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.callState == CALLED && (((((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.interruptState == FST && 0) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.interruptState == SND && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.guardState == GUARD_NOTSTARTED && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9)  && ((NONE == NONE && (std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end() || std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), S0) !=shallow_final_choice2B_guard.end())) || (NONE == LEFT && std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end()) || (NONE == RIGHT && std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice2B_guard.autState) !=shallow_final_choice2B_guard.end())))) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.guardState == GUARD_STARTED && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == NONE && (std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end() || std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), S0) !=shallow_final_choice2B_guard.end())) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == LEFT && std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end()) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == RIGHT && std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice2B_guard.autState) !=shallow_final_choice2B_guard.end())))))) || KLEENE_NOTSTARTED == ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.kleeneState) && (FST == FST && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && S0 == S0))) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.interruptState == FST && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_pguardB.ts_C.autState == S0))))))
					{
						if((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.callState == NOTCALLED && (((((FST == FST && 0) || (FST == SND && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.guardState == GUARD_NOTSTARTED && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9)  && ((NONE == NONE && (std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end() || std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), S0) !=shallow_final_choice2B_guard.end())) || (NONE == LEFT && std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end()) || (NONE == RIGHT && std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice2B_guard.autState) !=shallow_final_choice2B_guard.end())))) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.guardState == GUARD_STARTED && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == NONE && (std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end() || std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), S0) !=shallow_final_choice2B_guard.end())) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == LEFT && std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end()) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == RIGHT && std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice2B_guard.autState) !=shallow_final_choice2B_guard.end())))))) || KLEENE_NOTSTARTED == ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.kleeneState) && (FST == FST && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && S0 == S0))) || (FST == FST && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && S0 == S0)))))
						{
							ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.callState = CALLED;
							ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.kleeneState = KLEENE_NOTSTARTED;
							ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.interruptState = FST;
							ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_pguardB.ts_C.autState = S0;
							if(((((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.interruptState == FST && 0) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.interruptState == SND && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.guardState == GUARD_NOTSTARTED && (last_event_time.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9)  && ((NONE == NONE && (std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end() || std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), S0) !=shallow_final_choice2B_guard.end())) || (NONE == LEFT && std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end()) || (NONE == RIGHT && std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice2B_guard.autState) !=shallow_final_choice2B_guard.end())))) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.guardState == GUARD_STARTED && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == NONE && (std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end() || std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), S0) !=shallow_final_choice2B_guard.end())) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == LEFT && std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end()) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == RIGHT && std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice2B_guard.autState) !=shallow_final_choice2B_guard.end())))))) || KLEENE_NOTSTARTED == ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.kleeneState) && (FST == FST && (last_event_time.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && S0 == S0))))
							{
								ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.kleeneState = KLEENE_STARTED;
								ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.interruptState = FST;
								ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_pguardB.ts_C.autState = S0;
								if((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.interruptState == FST && (last_event_time.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_pguardB.ts_C.autState == S0)))
								{
									if((last_event_time.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_pguardB.ts_C.autState == S0))
									{
										if(ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_pguardB.ts_C.autState == S0)
										{
											ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_pguardB.ts_C.autState = S0;
											exec = 1;
										
										}
									
									}
								
								}
							
							}else if((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.interruptState == FST && (last_event_time.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_pguardB.ts_C.autState == S0)))
							{
								ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.kleeneState = KLEENE_STARTED;
								if((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.interruptState == FST && (last_event_time.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_pguardB.ts_C.autState == S0)))
								{
									if((last_event_time.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_pguardB.ts_C.autState == S0))
									{
										if(ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_pguardB.ts_C.autState == S0)
										{
											ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_pguardB.ts_C.autState = S0;
											exec = 1;
										
										}
									
									}
								
								}
							
							}
							ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.right_clock_F1.reset_clock();
						}else if((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.callState == CALLED && (((((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.interruptState == FST && 0) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.interruptState == SND && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.guardState == GUARD_NOTSTARTED && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9)  && ((NONE == NONE && (std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end() || std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), S0) !=shallow_final_choice2B_guard.end())) || (NONE == LEFT && std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end()) || (NONE == RIGHT && std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice2B_guard.autState) !=shallow_final_choice2B_guard.end())))) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.guardState == GUARD_STARTED && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == NONE && (std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end() || std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), S0) !=shallow_final_choice2B_guard.end())) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == LEFT && std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end()) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == RIGHT && std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice2B_guard.autState) !=shallow_final_choice2B_guard.end())))))) || KLEENE_NOTSTARTED == ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.kleeneState) && (FST == FST && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && S0 == S0))) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.interruptState == FST && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_pguardB.ts_C.autState == S0)))))
						{
							if(((((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.interruptState == FST && 0) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.interruptState == SND && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.guardState == GUARD_NOTSTARTED && (last_event_time.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9)  && ((NONE == NONE && (std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end() || std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), S0) !=shallow_final_choice2B_guard.end())) || (NONE == LEFT && std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end()) || (NONE == RIGHT && std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice2B_guard.autState) !=shallow_final_choice2B_guard.end())))) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.guardState == GUARD_STARTED && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == NONE && (std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end() || std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), S0) !=shallow_final_choice2B_guard.end())) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == LEFT && std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end()) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == RIGHT && std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice2B_guard.autState) !=shallow_final_choice2B_guard.end())))))) || KLEENE_NOTSTARTED == ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.kleeneState) && (FST == FST && (last_event_time.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && S0 == S0))))
							{
								ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.kleeneState = KLEENE_STARTED;
								ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.interruptState = FST;
								ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_pguardB.ts_C.autState = S0;
								if((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.interruptState == FST && (last_event_time.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_pguardB.ts_C.autState == S0)))
								{
									if((last_event_time.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_pguardB.ts_C.autState == S0))
									{
										if(ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_pguardB.ts_C.autState == S0)
										{
											ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_pguardB.ts_C.autState = S0;
											exec = 1;
										
										}
									
									}
								
								}
							
							}else if((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.interruptState == FST && (last_event_time.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_pguardB.ts_C.autState == S0)))
							{
								ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.kleeneState = KLEENE_STARTED;
								if((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.interruptState == FST && (last_event_time.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_pguardB.ts_C.autState == S0)))
								{
									if((last_event_time.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_pguardB.ts_C.autState == S0))
									{
										if(ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_pguardB.ts_C.autState == S0)
										{
											ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_pguardB.ts_C.autState = S0;
											exec = 1;
										
										}
									
									}
								
								}
							
							}
							ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.right_clock_F1.reset_clock();
						}
					
					}
				
				}
			
			}else if((ts_J.ts_guardJ.ts_choiceJ_guard.choiceState == RIGHT && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.callState == NOTCALLED && (((NOTCALLED == NOTCALLED && ((S0 == S0 && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F2.ts_E.h <= ts_J.avg - 3 * ts_J.stddev ) || (S0 == S0 && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F2.ts_E.h > ts_J.avg - 3 * ts_J.stddev ))) || (NOTCALLED == CALLED && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F2.ts_E.autState == S0 && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F2.ts_E.h <= ts_J.avg - 3 * ts_J.stddev ) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F2.ts_E.autState == S0 && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F2.ts_E.h > ts_J.avg - 3 * ts_J.stddev )))) || ((NOTCALLED == NOTCALLED && (((((FST == FST && 0) || (FST == SND && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.guardState == GUARD_NOTSTARTED && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9)  && ((NONE == NONE && (std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end() || std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), S0) !=shallow_final_choice2B_guard.end())) || (NONE == LEFT && std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end()) || (NONE == RIGHT && std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice2B_guard.autState) !=shallow_final_choice2B_guard.end())))) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.guardState == GUARD_STARTED && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == NONE && (std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end() || std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), S0) !=shallow_final_choice2B_guard.end())) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == LEFT && std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end()) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == RIGHT && std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice2B_guard.autState) !=shallow_final_choice2B_guard.end())))))) || KLEENE_NOTSTARTED == ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.kleeneState) && (FST == FST && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && S0 == S0))) || (FST == FST && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && S0 == S0)))) || (NOTCALLED == CALLED && (((((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.interruptState == FST && 0) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.interruptState == SND && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.guardState == GUARD_NOTSTARTED && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9)  && ((NONE == NONE && (std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end() || std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), S0) !=shallow_final_choice2B_guard.end())) || (NONE == LEFT && std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end()) || (NONE == RIGHT && std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice2B_guard.autState) !=shallow_final_choice2B_guard.end())))) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.guardState == GUARD_STARTED && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == NONE && (std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end() || std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), S0) !=shallow_final_choice2B_guard.end())) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == LEFT && std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end()) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == RIGHT && std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice2B_guard.autState) !=shallow_final_choice2B_guard.end())))))) || KLEENE_NOTSTARTED == ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.kleeneState) && (FST == FST && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && S0 == S0))) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.interruptState == FST && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_pguardB.ts_C.autState == S0))))))) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.callState == CALLED && (((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F2.callState == NOTCALLED && ((S0 == S0 && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F2.ts_E.h <= ts_J.avg - 3 * ts_J.stddev ) || (S0 == S0 && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F2.ts_E.h > ts_J.avg - 3 * ts_J.stddev ))) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F2.callState == CALLED && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F2.ts_E.autState == S0 && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F2.ts_E.h <= ts_J.avg - 3 * ts_J.stddev ) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F2.ts_E.autState == S0 && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F2.ts_E.h > ts_J.avg - 3 * ts_J.stddev )))) || ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.callState == NOTCALLED && (((((FST == FST && 0) || (FST == SND && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.guardState == GUARD_NOTSTARTED && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9)  && ((NONE == NONE && (std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end() || std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), S0) !=shallow_final_choice2B_guard.end())) || (NONE == LEFT && std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end()) || (NONE == RIGHT && std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice2B_guard.autState) !=shallow_final_choice2B_guard.end())))) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.guardState == GUARD_STARTED && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == NONE && (std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end() || std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), S0) !=shallow_final_choice2B_guard.end())) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == LEFT && std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end()) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == RIGHT && std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice2B_guard.autState) !=shallow_final_choice2B_guard.end())))))) || KLEENE_NOTSTARTED == ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.kleeneState) && (FST == FST && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && S0 == S0))) || (FST == FST && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && S0 == S0)))) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.callState == CALLED && (((((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.interruptState == FST && 0) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.interruptState == SND && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.guardState == GUARD_NOTSTARTED && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9)  && ((NONE == NONE && (std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end() || std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), S0) !=shallow_final_choice2B_guard.end())) || (NONE == LEFT && std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end()) || (NONE == RIGHT && std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice2B_guard.autState) !=shallow_final_choice2B_guard.end())))) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.guardState == GUARD_STARTED && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == NONE && (std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end() || std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), S0) !=shallow_final_choice2B_guard.end())) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == LEFT && std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end()) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == RIGHT && std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice2B_guard.autState) !=shallow_final_choice2B_guard.end())))))) || KLEENE_NOTSTARTED == ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.kleeneState) && (FST == FST && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && S0 == S0))) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.interruptState == FST && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_pguardB.ts_C.autState == S0))))))))))
			{
				if((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.callState == NOTCALLED && (((NOTCALLED == NOTCALLED && ((S0 == S0 && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F2.ts_E.h <= ts_J.avg - 3 * ts_J.stddev ) || (S0 == S0 && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F2.ts_E.h > ts_J.avg - 3 * ts_J.stddev ))) || (NOTCALLED == CALLED && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F2.ts_E.autState == S0 && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F2.ts_E.h <= ts_J.avg - 3 * ts_J.stddev ) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F2.ts_E.autState == S0 && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F2.ts_E.h > ts_J.avg - 3 * ts_J.stddev )))) || ((NOTCALLED == NOTCALLED && (((((FST == FST && 0) || (FST == SND && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.guardState == GUARD_NOTSTARTED && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9)  && ((NONE == NONE && (std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end() || std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), S0) !=shallow_final_choice2B_guard.end())) || (NONE == LEFT && std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end()) || (NONE == RIGHT && std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice2B_guard.autState) !=shallow_final_choice2B_guard.end())))) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.guardState == GUARD_STARTED && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == NONE && (std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end() || std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), S0) !=shallow_final_choice2B_guard.end())) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == LEFT && std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end()) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == RIGHT && std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice2B_guard.autState) !=shallow_final_choice2B_guard.end())))))) || KLEENE_NOTSTARTED == ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.kleeneState) && (FST == FST && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && S0 == S0))) || (FST == FST && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && S0 == S0)))) || (NOTCALLED == CALLED && (((((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.interruptState == FST && 0) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.interruptState == SND && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.guardState == GUARD_NOTSTARTED && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9)  && ((NONE == NONE && (std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end() || std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), S0) !=shallow_final_choice2B_guard.end())) || (NONE == LEFT && std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end()) || (NONE == RIGHT && std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice2B_guard.autState) !=shallow_final_choice2B_guard.end())))) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.guardState == GUARD_STARTED && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == NONE && (std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end() || std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), S0) !=shallow_final_choice2B_guard.end())) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == LEFT && std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end()) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == RIGHT && std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice2B_guard.autState) !=shallow_final_choice2B_guard.end())))))) || KLEENE_NOTSTARTED == ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.kleeneState) && (FST == FST && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && S0 == S0))) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.interruptState == FST && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_pguardB.ts_C.autState == S0))))))))
				{
					ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.callState = CALLED;
					ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.right_clock_F1.reset_clock();
					ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.left_clock_F2.reset_clock();
					ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F2.callState = NOTCALLED;
					ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.callState = NOTCALLED;
					if(((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F2.callState == NOTCALLED && ((S0 == S0 && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F2.ts_E.h <= ts_J.avg - 3 * ts_J.stddev ) || (S0 == S0 && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F2.ts_E.h > ts_J.avg - 3 * ts_J.stddev ))) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F2.callState == CALLED && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F2.ts_E.autState == S0 && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F2.ts_E.h <= ts_J.avg - 3 * ts_J.stddev ) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F2.ts_E.autState == S0 && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F2.ts_E.h > ts_J.avg - 3 * ts_J.stddev )))))
					{
						if((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F2.callState == NOTCALLED && ((S0 == S0 && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F2.ts_E.h <= ts_J.avg - 3 * ts_J.stddev ) || (S0 == S0 && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F2.ts_E.h > ts_J.avg - 3 * ts_J.stddev ))))
						{
							ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F2.callState = CALLED;
							ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F2.ts_E.autState = S0;
							ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F2.ts_E.h.reset_clock();
							if((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F2.ts_E.autState == S0 && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F2.ts_E.h <= ts_J.avg - 3 * ts_J.stddev ))
							{
								Alert(1);ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F2.ts_E.autState = S0;
								exec = 1;
							
							}else if((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F2.ts_E.autState == S0 && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F2.ts_E.h > ts_J.avg - 3 * ts_J.stddev ))
							{
								ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F2.ts_E.h.reset_clock();ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F2.ts_E.autState = S0;
								exec = 1;
							
							}
							ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.left_clock_F2.reset_clock();
						}else if((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F2.callState == CALLED && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F2.ts_E.autState == S0 && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F2.ts_E.h <= ts_J.avg - 3 * ts_J.stddev ) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F2.ts_E.autState == S0 && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F2.ts_E.h > ts_J.avg - 3 * ts_J.stddev ))))
						{
							if((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F2.ts_E.autState == S0 && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F2.ts_E.h <= ts_J.avg - 3 * ts_J.stddev ))
							{
								Alert(1);ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F2.ts_E.autState = S0;
								exec = 1;
							
							}else if((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F2.ts_E.autState == S0 && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F2.ts_E.h > ts_J.avg - 3 * ts_J.stddev ))
							{
								ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F2.ts_E.h.reset_clock();ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F2.ts_E.autState = S0;
								exec = 1;
							
							}
							ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.left_clock_F2.reset_clock();
						}
					
					}
					if(((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.callState == NOTCALLED && (((((FST == FST && 0) || (FST == SND && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.guardState == GUARD_NOTSTARTED && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9)  && ((NONE == NONE && (std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end() || std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), S0) !=shallow_final_choice2B_guard.end())) || (NONE == LEFT && std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end()) || (NONE == RIGHT && std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice2B_guard.autState) !=shallow_final_choice2B_guard.end())))) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.guardState == GUARD_STARTED && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == NONE && (std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end() || std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), S0) !=shallow_final_choice2B_guard.end())) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == LEFT && std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end()) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == RIGHT && std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice2B_guard.autState) !=shallow_final_choice2B_guard.end())))))) || KLEENE_NOTSTARTED == ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.kleeneState) && (FST == FST && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && S0 == S0))) || (FST == FST && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && S0 == S0)))) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.callState == CALLED && (((((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.interruptState == FST && 0) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.interruptState == SND && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.guardState == GUARD_NOTSTARTED && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9)  && ((NONE == NONE && (std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end() || std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), S0) !=shallow_final_choice2B_guard.end())) || (NONE == LEFT && std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end()) || (NONE == RIGHT && std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice2B_guard.autState) !=shallow_final_choice2B_guard.end())))) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.guardState == GUARD_STARTED && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == NONE && (std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end() || std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), S0) !=shallow_final_choice2B_guard.end())) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == LEFT && std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end()) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == RIGHT && std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice2B_guard.autState) !=shallow_final_choice2B_guard.end())))))) || KLEENE_NOTSTARTED == ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.kleeneState) && (FST == FST && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && S0 == S0))) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.interruptState == FST && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_pguardB.ts_C.autState == S0))))))
					{
						if((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.callState == NOTCALLED && (((((FST == FST && 0) || (FST == SND && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.guardState == GUARD_NOTSTARTED && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9)  && ((NONE == NONE && (std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end() || std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), S0) !=shallow_final_choice2B_guard.end())) || (NONE == LEFT && std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end()) || (NONE == RIGHT && std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice2B_guard.autState) !=shallow_final_choice2B_guard.end())))) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.guardState == GUARD_STARTED && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == NONE && (std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end() || std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), S0) !=shallow_final_choice2B_guard.end())) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == LEFT && std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end()) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == RIGHT && std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice2B_guard.autState) !=shallow_final_choice2B_guard.end())))))) || KLEENE_NOTSTARTED == ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.kleeneState) && (FST == FST && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && S0 == S0))) || (FST == FST && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && S0 == S0)))))
						{
							ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.callState = CALLED;
							ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.kleeneState = KLEENE_NOTSTARTED;
							ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.interruptState = FST;
							ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_pguardB.ts_C.autState = S0;
							if(((((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.interruptState == FST && 0) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.interruptState == SND && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.guardState == GUARD_NOTSTARTED && (last_event_time.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9)  && ((NONE == NONE && (std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end() || std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), S0) !=shallow_final_choice2B_guard.end())) || (NONE == LEFT && std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end()) || (NONE == RIGHT && std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice2B_guard.autState) !=shallow_final_choice2B_guard.end())))) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.guardState == GUARD_STARTED && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == NONE && (std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end() || std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), S0) !=shallow_final_choice2B_guard.end())) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == LEFT && std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end()) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == RIGHT && std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice2B_guard.autState) !=shallow_final_choice2B_guard.end())))))) || KLEENE_NOTSTARTED == ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.kleeneState) && (FST == FST && (last_event_time.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && S0 == S0))))
							{
								ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.kleeneState = KLEENE_STARTED;
								ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.interruptState = FST;
								ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_pguardB.ts_C.autState = S0;
								if((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.interruptState == FST && (last_event_time.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_pguardB.ts_C.autState == S0)))
								{
									if((last_event_time.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_pguardB.ts_C.autState == S0))
									{
										if(ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_pguardB.ts_C.autState == S0)
										{
											ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_pguardB.ts_C.autState = S0;
											exec = 1;
										
										}
									
									}
								
								}
							
							}else if((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.interruptState == FST && (last_event_time.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_pguardB.ts_C.autState == S0)))
							{
								ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.kleeneState = KLEENE_STARTED;
								if((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.interruptState == FST && (last_event_time.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_pguardB.ts_C.autState == S0)))
								{
									if((last_event_time.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_pguardB.ts_C.autState == S0))
									{
										if(ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_pguardB.ts_C.autState == S0)
										{
											ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_pguardB.ts_C.autState = S0;
											exec = 1;
										
										}
									
									}
								
								}
							
							}
							ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.right_clock_F1.reset_clock();
						}else if((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.callState == CALLED && (((((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.interruptState == FST && 0) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.interruptState == SND && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.guardState == GUARD_NOTSTARTED && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9)  && ((NONE == NONE && (std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end() || std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), S0) !=shallow_final_choice2B_guard.end())) || (NONE == LEFT && std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end()) || (NONE == RIGHT && std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice2B_guard.autState) !=shallow_final_choice2B_guard.end())))) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.guardState == GUARD_STARTED && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == NONE && (std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end() || std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), S0) !=shallow_final_choice2B_guard.end())) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == LEFT && std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end()) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == RIGHT && std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice2B_guard.autState) !=shallow_final_choice2B_guard.end())))))) || KLEENE_NOTSTARTED == ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.kleeneState) && (FST == FST && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && S0 == S0))) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.interruptState == FST && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_pguardB.ts_C.autState == S0)))))
						{
							if(((((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.interruptState == FST && 0) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.interruptState == SND && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.guardState == GUARD_NOTSTARTED && (last_event_time.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9)  && ((NONE == NONE && (std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end() || std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), S0) !=shallow_final_choice2B_guard.end())) || (NONE == LEFT && std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end()) || (NONE == RIGHT && std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice2B_guard.autState) !=shallow_final_choice2B_guard.end())))) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.guardState == GUARD_STARTED && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == NONE && (std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end() || std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), S0) !=shallow_final_choice2B_guard.end())) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == LEFT && std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end()) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == RIGHT && std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice2B_guard.autState) !=shallow_final_choice2B_guard.end())))))) || KLEENE_NOTSTARTED == ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.kleeneState) && (FST == FST && (last_event_time.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && S0 == S0))))
							{
								ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.kleeneState = KLEENE_STARTED;
								ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.interruptState = FST;
								ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_pguardB.ts_C.autState = S0;
								if((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.interruptState == FST && (last_event_time.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_pguardB.ts_C.autState == S0)))
								{
									if((last_event_time.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_pguardB.ts_C.autState == S0))
									{
										if(ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_pguardB.ts_C.autState == S0)
										{
											ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_pguardB.ts_C.autState = S0;
											exec = 1;
										
										}
									
									}
								
								}
							
							}else if((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.interruptState == FST && (last_event_time.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_pguardB.ts_C.autState == S0)))
							{
								ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.kleeneState = KLEENE_STARTED;
								if((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.interruptState == FST && (last_event_time.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_pguardB.ts_C.autState == S0)))
								{
									if((last_event_time.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_pguardB.ts_C.autState == S0))
									{
										if(ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_pguardB.ts_C.autState == S0)
										{
											ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_pguardB.ts_C.autState = S0;
											exec = 1;
										
										}
									
									}
								
								}
							
							}
							ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.right_clock_F1.reset_clock();
						}
					
					}
				
				}else if((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.callState == CALLED && (((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F2.callState == NOTCALLED && ((S0 == S0 && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F2.ts_E.h <= ts_J.avg - 3 * ts_J.stddev ) || (S0 == S0 && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F2.ts_E.h > ts_J.avg - 3 * ts_J.stddev ))) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F2.callState == CALLED && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F2.ts_E.autState == S0 && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F2.ts_E.h <= ts_J.avg - 3 * ts_J.stddev ) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F2.ts_E.autState == S0 && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F2.ts_E.h > ts_J.avg - 3 * ts_J.stddev )))) || ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.callState == NOTCALLED && (((((FST == FST && 0) || (FST == SND && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.guardState == GUARD_NOTSTARTED && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9)  && ((NONE == NONE && (std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end() || std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), S0) !=shallow_final_choice2B_guard.end())) || (NONE == LEFT && std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end()) || (NONE == RIGHT && std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice2B_guard.autState) !=shallow_final_choice2B_guard.end())))) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.guardState == GUARD_STARTED && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == NONE && (std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end() || std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), S0) !=shallow_final_choice2B_guard.end())) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == LEFT && std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end()) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == RIGHT && std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice2B_guard.autState) !=shallow_final_choice2B_guard.end())))))) || KLEENE_NOTSTARTED == ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.kleeneState) && (FST == FST && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && S0 == S0))) || (FST == FST && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && S0 == S0)))) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.callState == CALLED && (((((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.interruptState == FST && 0) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.interruptState == SND && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.guardState == GUARD_NOTSTARTED && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9)  && ((NONE == NONE && (std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end() || std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), S0) !=shallow_final_choice2B_guard.end())) || (NONE == LEFT && std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end()) || (NONE == RIGHT && std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice2B_guard.autState) !=shallow_final_choice2B_guard.end())))) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.guardState == GUARD_STARTED && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == NONE && (std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end() || std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), S0) !=shallow_final_choice2B_guard.end())) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == LEFT && std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end()) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == RIGHT && std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice2B_guard.autState) !=shallow_final_choice2B_guard.end())))))) || KLEENE_NOTSTARTED == ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.kleeneState) && (FST == FST && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && S0 == S0))) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.interruptState == FST && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_pguardB.ts_C.autState == S0))))))))
				{
					if(((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F2.callState == NOTCALLED && ((S0 == S0 && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F2.ts_E.h <= ts_J.avg - 3 * ts_J.stddev ) || (S0 == S0 && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F2.ts_E.h > ts_J.avg - 3 * ts_J.stddev ))) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F2.callState == CALLED && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F2.ts_E.autState == S0 && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F2.ts_E.h <= ts_J.avg - 3 * ts_J.stddev ) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F2.ts_E.autState == S0 && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F2.ts_E.h > ts_J.avg - 3 * ts_J.stddev )))))
					{
						if((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F2.callState == NOTCALLED && ((S0 == S0 && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F2.ts_E.h <= ts_J.avg - 3 * ts_J.stddev ) || (S0 == S0 && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F2.ts_E.h > ts_J.avg - 3 * ts_J.stddev ))))
						{
							ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F2.callState = CALLED;
							ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F2.ts_E.autState = S0;
							ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F2.ts_E.h.reset_clock();
							if((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F2.ts_E.autState == S0 && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F2.ts_E.h <= ts_J.avg - 3 * ts_J.stddev ))
							{
								Alert(1);ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F2.ts_E.autState = S0;
								exec = 1;
							
							}else if((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F2.ts_E.autState == S0 && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F2.ts_E.h > ts_J.avg - 3 * ts_J.stddev ))
							{
								ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F2.ts_E.h.reset_clock();ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F2.ts_E.autState = S0;
								exec = 1;
							
							}
							ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.left_clock_F2.reset_clock();
						}else if((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F2.callState == CALLED && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F2.ts_E.autState == S0 && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F2.ts_E.h <= ts_J.avg - 3 * ts_J.stddev ) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F2.ts_E.autState == S0 && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F2.ts_E.h > ts_J.avg - 3 * ts_J.stddev ))))
						{
							if((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F2.ts_E.autState == S0 && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F2.ts_E.h <= ts_J.avg - 3 * ts_J.stddev ))
							{
								Alert(1);ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F2.ts_E.autState = S0;
								exec = 1;
							
							}else if((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F2.ts_E.autState == S0 && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F2.ts_E.h > ts_J.avg - 3 * ts_J.stddev ))
							{
								ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F2.ts_E.h.reset_clock();ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F2.ts_E.autState = S0;
								exec = 1;
							
							}
							ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.left_clock_F2.reset_clock();
						}
					
					}
					if(((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.callState == NOTCALLED && (((((FST == FST && 0) || (FST == SND && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.guardState == GUARD_NOTSTARTED && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9)  && ((NONE == NONE && (std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end() || std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), S0) !=shallow_final_choice2B_guard.end())) || (NONE == LEFT && std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end()) || (NONE == RIGHT && std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice2B_guard.autState) !=shallow_final_choice2B_guard.end())))) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.guardState == GUARD_STARTED && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == NONE && (std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end() || std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), S0) !=shallow_final_choice2B_guard.end())) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == LEFT && std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end()) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == RIGHT && std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice2B_guard.autState) !=shallow_final_choice2B_guard.end())))))) || KLEENE_NOTSTARTED == ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.kleeneState) && (FST == FST && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && S0 == S0))) || (FST == FST && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && S0 == S0)))) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.callState == CALLED && (((((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.interruptState == FST && 0) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.interruptState == SND && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.guardState == GUARD_NOTSTARTED && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9)  && ((NONE == NONE && (std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end() || std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), S0) !=shallow_final_choice2B_guard.end())) || (NONE == LEFT && std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end()) || (NONE == RIGHT && std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice2B_guard.autState) !=shallow_final_choice2B_guard.end())))) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.guardState == GUARD_STARTED && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == NONE && (std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end() || std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), S0) !=shallow_final_choice2B_guard.end())) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == LEFT && std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end()) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == RIGHT && std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice2B_guard.autState) !=shallow_final_choice2B_guard.end())))))) || KLEENE_NOTSTARTED == ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.kleeneState) && (FST == FST && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && S0 == S0))) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.interruptState == FST && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_pguardB.ts_C.autState == S0))))))
					{
						if((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.callState == NOTCALLED && (((((FST == FST && 0) || (FST == SND && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.guardState == GUARD_NOTSTARTED && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9)  && ((NONE == NONE && (std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end() || std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), S0) !=shallow_final_choice2B_guard.end())) || (NONE == LEFT && std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end()) || (NONE == RIGHT && std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice2B_guard.autState) !=shallow_final_choice2B_guard.end())))) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.guardState == GUARD_STARTED && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == NONE && (std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end() || std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), S0) !=shallow_final_choice2B_guard.end())) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == LEFT && std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end()) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == RIGHT && std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice2B_guard.autState) !=shallow_final_choice2B_guard.end())))))) || KLEENE_NOTSTARTED == ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.kleeneState) && (FST == FST && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && S0 == S0))) || (FST == FST && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && S0 == S0)))))
						{
							ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.callState = CALLED;
							ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.kleeneState = KLEENE_NOTSTARTED;
							ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.interruptState = FST;
							ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_pguardB.ts_C.autState = S0;
							if(((((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.interruptState == FST && 0) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.interruptState == SND && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.guardState == GUARD_NOTSTARTED && (last_event_time.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9)  && ((NONE == NONE && (std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end() || std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), S0) !=shallow_final_choice2B_guard.end())) || (NONE == LEFT && std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end()) || (NONE == RIGHT && std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice2B_guard.autState) !=shallow_final_choice2B_guard.end())))) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.guardState == GUARD_STARTED && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == NONE && (std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end() || std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), S0) !=shallow_final_choice2B_guard.end())) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == LEFT && std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end()) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == RIGHT && std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice2B_guard.autState) !=shallow_final_choice2B_guard.end())))))) || KLEENE_NOTSTARTED == ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.kleeneState) && (FST == FST && (last_event_time.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && S0 == S0))))
							{
								ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.kleeneState = KLEENE_STARTED;
								ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.interruptState = FST;
								ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_pguardB.ts_C.autState = S0;
								if((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.interruptState == FST && (last_event_time.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_pguardB.ts_C.autState == S0)))
								{
									if((last_event_time.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_pguardB.ts_C.autState == S0))
									{
										if(ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_pguardB.ts_C.autState == S0)
										{
											ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_pguardB.ts_C.autState = S0;
											exec = 1;
										
										}
									
									}
								
								}
							
							}else if((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.interruptState == FST && (last_event_time.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_pguardB.ts_C.autState == S0)))
							{
								ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.kleeneState = KLEENE_STARTED;
								if((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.interruptState == FST && (last_event_time.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_pguardB.ts_C.autState == S0)))
								{
									if((last_event_time.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_pguardB.ts_C.autState == S0))
									{
										if(ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_pguardB.ts_C.autState == S0)
										{
											ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_pguardB.ts_C.autState = S0;
											exec = 1;
										
										}
									
									}
								
								}
							
							}
							ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.right_clock_F1.reset_clock();
						}else if((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.callState == CALLED && (((((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.interruptState == FST && 0) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.interruptState == SND && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.guardState == GUARD_NOTSTARTED && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9)  && ((NONE == NONE && (std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end() || std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), S0) !=shallow_final_choice2B_guard.end())) || (NONE == LEFT && std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end()) || (NONE == RIGHT && std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice2B_guard.autState) !=shallow_final_choice2B_guard.end())))) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.guardState == GUARD_STARTED && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == NONE && (std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end() || std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), S0) !=shallow_final_choice2B_guard.end())) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == LEFT && std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end()) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == RIGHT && std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice2B_guard.autState) !=shallow_final_choice2B_guard.end())))))) || KLEENE_NOTSTARTED == ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.kleeneState) && (FST == FST && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && S0 == S0))) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.interruptState == FST && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_pguardB.ts_C.autState == S0)))))
						{
							if(((((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.interruptState == FST && 0) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.interruptState == SND && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.guardState == GUARD_NOTSTARTED && (last_event_time.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9)  && ((NONE == NONE && (std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end() || std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), S0) !=shallow_final_choice2B_guard.end())) || (NONE == LEFT && std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end()) || (NONE == RIGHT && std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice2B_guard.autState) !=shallow_final_choice2B_guard.end())))) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.guardState == GUARD_STARTED && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == NONE && (std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end() || std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), S0) !=shallow_final_choice2B_guard.end())) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == LEFT && std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end()) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == RIGHT && std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice2B_guard.autState) !=shallow_final_choice2B_guard.end())))))) || KLEENE_NOTSTARTED == ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.kleeneState) && (FST == FST && (last_event_time.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && S0 == S0))))
							{
								ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.kleeneState = KLEENE_STARTED;
								ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.interruptState = FST;
								ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_pguardB.ts_C.autState = S0;
								if((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.interruptState == FST && (last_event_time.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_pguardB.ts_C.autState == S0)))
								{
									if((last_event_time.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_pguardB.ts_C.autState == S0))
									{
										if(ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_pguardB.ts_C.autState == S0)
										{
											ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_pguardB.ts_C.autState = S0;
											exec = 1;
										
										}
									
									}
								
								}
							
							}else if((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.interruptState == FST && (last_event_time.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_pguardB.ts_C.autState == S0)))
							{
								ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.kleeneState = KLEENE_STARTED;
								if((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.interruptState == FST && (last_event_time.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_pguardB.ts_C.autState == S0)))
								{
									if((last_event_time.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_pguardB.ts_C.autState == S0))
									{
										if(ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_pguardB.ts_C.autState == S0)
										{
											ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_pguardB.ts_C.autState = S0;
											exec = 1;
										
										}
									
									}
								
								}
							
							}
							ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.right_clock_F1.reset_clock();
						}
					
					}
				
				}
			
			}
		
		}else if((ts_J.ts_guardJ.guardState == GUARD_STARTED && ((ts_J.ts_guardJ.ts_choiceJ_guard.choiceState == NONE && (S0 == J2 && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.callState == NOTCALLED && (((NOTCALLED == NOTCALLED && ((S0 == S0 && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.ts_E.h <= ts_J.avg - 3 * ts_J.stddev ) || (S0 == S0 && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.ts_E.h > ts_J.avg - 3 * ts_J.stddev ))) || (NOTCALLED == CALLED && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.ts_E.autState == S0 && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.ts_E.h <= ts_J.avg - 3 * ts_J.stddev ) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.ts_E.autState == S0 && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.ts_E.h > ts_J.avg - 3 * ts_J.stddev )))) || ((NOTCALLED == NOTCALLED && (((((FST == FST && 0) || (FST == SND && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.guardState == GUARD_NOTSTARTED && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9)  && ((NONE == NONE && (std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end() || std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), S0) !=shallow_final_choice2B_guard.end())) || (NONE == LEFT && std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end()) || (NONE == RIGHT && std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice2B_guard.autState) !=shallow_final_choice2B_guard.end())))) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.guardState == GUARD_STARTED && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == NONE && (std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end() || std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), S0) !=shallow_final_choice2B_guard.end())) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == LEFT && std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end()) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == RIGHT && std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice2B_guard.autState) !=shallow_final_choice2B_guard.end())))))) || KLEENE_NOTSTARTED == ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.kleeneState) && (FST == FST && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && S0 == S0))) || (FST == FST && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && S0 == S0)))) || (NOTCALLED == CALLED && (((((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.interruptState == FST && 0) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.interruptState == SND && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.guardState == GUARD_NOTSTARTED && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9)  && ((NONE == NONE && (std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end() || std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), S0) !=shallow_final_choice2B_guard.end())) || (NONE == LEFT && std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end()) || (NONE == RIGHT && std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice2B_guard.autState) !=shallow_final_choice2B_guard.end())))) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.guardState == GUARD_STARTED && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == NONE && (std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end() || std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), S0) !=shallow_final_choice2B_guard.end())) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == LEFT && std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end()) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == RIGHT && std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice2B_guard.autState) !=shallow_final_choice2B_guard.end())))))) || KLEENE_NOTSTARTED == ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.kleeneState) && (FST == FST && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && S0 == S0))) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.interruptState == FST && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_pguardB.ts_C.autState == S0))))))) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.callState == CALLED && (((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.callState == NOTCALLED && ((S0 == S0 && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.ts_E.h <= ts_J.avg - 3 * ts_J.stddev ) || (S0 == S0 && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.ts_E.h > ts_J.avg - 3 * ts_J.stddev ))) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.callState == CALLED && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.ts_E.autState == S0 && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.ts_E.h <= ts_J.avg - 3 * ts_J.stddev ) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.ts_E.autState == S0 && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.ts_E.h > ts_J.avg - 3 * ts_J.stddev )))) || ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.callState == NOTCALLED && (((((FST == FST && 0) || (FST == SND && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.guardState == GUARD_NOTSTARTED && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9)  && ((NONE == NONE && (std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end() || std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), S0) !=shallow_final_choice2B_guard.end())) || (NONE == LEFT && std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end()) || (NONE == RIGHT && std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice2B_guard.autState) !=shallow_final_choice2B_guard.end())))) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.guardState == GUARD_STARTED && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == NONE && (std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end() || std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), S0) !=shallow_final_choice2B_guard.end())) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == LEFT && std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end()) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == RIGHT && std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice2B_guard.autState) !=shallow_final_choice2B_guard.end())))))) || KLEENE_NOTSTARTED == ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.kleeneState) && (FST == FST && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && S0 == S0))) || (FST == FST && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && S0 == S0)))) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.callState == CALLED && (((((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.interruptState == FST && 0) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.interruptState == SND && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.guardState == GUARD_NOTSTARTED && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9)  && ((NONE == NONE && (std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end() || std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), S0) !=shallow_final_choice2B_guard.end())) || (NONE == LEFT && std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end()) || (NONE == RIGHT && std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice2B_guard.autState) !=shallow_final_choice2B_guard.end())))) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.guardState == GUARD_STARTED && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == NONE && (std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end() || std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), S0) !=shallow_final_choice2B_guard.end())) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == LEFT && std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end()) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == RIGHT && std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice2B_guard.autState) !=shallow_final_choice2B_guard.end())))))) || KLEENE_NOTSTARTED == ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.kleeneState) && (FST == FST && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && S0 == S0))) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.interruptState == FST && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_pguardB.ts_C.autState == S0)))))))))) || (ts_J.ts_guardJ.ts_choiceJ_guard.choiceState == LEFT && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.autState == J2 && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.callState == NOTCALLED && (((NOTCALLED == NOTCALLED && ((S0 == S0 && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.ts_E.h <= ts_J.avg - 3 * ts_J.stddev ) || (S0 == S0 && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.ts_E.h > ts_J.avg - 3 * ts_J.stddev ))) || (NOTCALLED == CALLED && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.ts_E.autState == S0 && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.ts_E.h <= ts_J.avg - 3 * ts_J.stddev ) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.ts_E.autState == S0 && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.ts_E.h > ts_J.avg - 3 * ts_J.stddev )))) || ((NOTCALLED == NOTCALLED && (((((FST == FST && 0) || (FST == SND && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.guardState == GUARD_NOTSTARTED && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9)  && ((NONE == NONE && (std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end() || std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), S0) !=shallow_final_choice2B_guard.end())) || (NONE == LEFT && std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end()) || (NONE == RIGHT && std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice2B_guard.autState) !=shallow_final_choice2B_guard.end())))) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.guardState == GUARD_STARTED && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == NONE && (std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end() || std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), S0) !=shallow_final_choice2B_guard.end())) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == LEFT && std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end()) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == RIGHT && std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice2B_guard.autState) !=shallow_final_choice2B_guard.end())))))) || KLEENE_NOTSTARTED == ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.kleeneState) && (FST == FST && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && S0 == S0))) || (FST == FST && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && S0 == S0)))) || (NOTCALLED == CALLED && (((((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.interruptState == FST && 0) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.interruptState == SND && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.guardState == GUARD_NOTSTARTED && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9)  && ((NONE == NONE && (std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end() || std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), S0) !=shallow_final_choice2B_guard.end())) || (NONE == LEFT && std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end()) || (NONE == RIGHT && std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice2B_guard.autState) !=shallow_final_choice2B_guard.end())))) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.guardState == GUARD_STARTED && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == NONE && (std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end() || std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), S0) !=shallow_final_choice2B_guard.end())) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == LEFT && std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end()) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == RIGHT && std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice2B_guard.autState) !=shallow_final_choice2B_guard.end())))))) || KLEENE_NOTSTARTED == ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.kleeneState) && (FST == FST && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && S0 == S0))) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.interruptState == FST && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_pguardB.ts_C.autState == S0))))))) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.callState == CALLED && (((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.callState == NOTCALLED && ((S0 == S0 && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.ts_E.h <= ts_J.avg - 3 * ts_J.stddev ) || (S0 == S0 && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.ts_E.h > ts_J.avg - 3 * ts_J.stddev ))) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.callState == CALLED && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.ts_E.autState == S0 && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.ts_E.h <= ts_J.avg - 3 * ts_J.stddev ) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.ts_E.autState == S0 && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.ts_E.h > ts_J.avg - 3 * ts_J.stddev )))) || ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.callState == NOTCALLED && (((((FST == FST && 0) || (FST == SND && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.guardState == GUARD_NOTSTARTED && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9)  && ((NONE == NONE && (std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end() || std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), S0) !=shallow_final_choice2B_guard.end())) || (NONE == LEFT && std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end()) || (NONE == RIGHT && std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice2B_guard.autState) !=shallow_final_choice2B_guard.end())))) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.guardState == GUARD_STARTED && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == NONE && (std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end() || std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), S0) !=shallow_final_choice2B_guard.end())) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == LEFT && std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end()) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == RIGHT && std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice2B_guard.autState) !=shallow_final_choice2B_guard.end())))))) || KLEENE_NOTSTARTED == ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.kleeneState) && (FST == FST && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && S0 == S0))) || (FST == FST && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && S0 == S0)))) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.callState == CALLED && (((((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.interruptState == FST && 0) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.interruptState == SND && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.guardState == GUARD_NOTSTARTED && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9)  && ((NONE == NONE && (std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end() || std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), S0) !=shallow_final_choice2B_guard.end())) || (NONE == LEFT && std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end()) || (NONE == RIGHT && std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice2B_guard.autState) !=shallow_final_choice2B_guard.end())))) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.guardState == GUARD_STARTED && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == NONE && (std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end() || std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), S0) !=shallow_final_choice2B_guard.end())) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == LEFT && std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end()) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == RIGHT && std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice2B_guard.autState) !=shallow_final_choice2B_guard.end())))))) || KLEENE_NOTSTARTED == ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.kleeneState) && (FST == FST && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && S0 == S0))) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.interruptState == FST && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_pguardB.ts_C.autState == S0)))))))))) || (ts_J.ts_guardJ.ts_choiceJ_guard.choiceState == NONE && ((NOTCALLED == NOTCALLED && (((NOTCALLED == NOTCALLED && ((S0 == S0 && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F2.ts_E.h <= ts_J.avg - 3 * ts_J.stddev ) || (S0 == S0 && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F2.ts_E.h > ts_J.avg - 3 * ts_J.stddev ))) || (NOTCALLED == CALLED && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F2.ts_E.autState == S0 && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F2.ts_E.h <= ts_J.avg - 3 * ts_J.stddev ) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F2.ts_E.autState == S0 && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F2.ts_E.h > ts_J.avg - 3 * ts_J.stddev )))) || ((NOTCALLED == NOTCALLED && (((((FST == FST && 0) || (FST == SND && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.guardState == GUARD_NOTSTARTED && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9)  && ((NONE == NONE && (std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end() || std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), S0) !=shallow_final_choice2B_guard.end())) || (NONE == LEFT && std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end()) || (NONE == RIGHT && std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice2B_guard.autState) !=shallow_final_choice2B_guard.end())))) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.guardState == GUARD_STARTED && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == NONE && (std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end() || std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), S0) !=shallow_final_choice2B_guard.end())) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == LEFT && std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end()) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == RIGHT && std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice2B_guard.autState) !=shallow_final_choice2B_guard.end())))))) || KLEENE_NOTSTARTED == ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.kleeneState) && (FST == FST && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && S0 == S0))) || (FST == FST && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && S0 == S0)))) || (NOTCALLED == CALLED && (((((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.interruptState == FST && 0) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.interruptState == SND && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.guardState == GUARD_NOTSTARTED && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9)  && ((NONE == NONE && (std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end() || std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), S0) !=shallow_final_choice2B_guard.end())) || (NONE == LEFT && std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end()) || (NONE == RIGHT && std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice2B_guard.autState) !=shallow_final_choice2B_guard.end())))) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.guardState == GUARD_STARTED && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == NONE && (std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end() || std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), S0) !=shallow_final_choice2B_guard.end())) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == LEFT && std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end()) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == RIGHT && std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice2B_guard.autState) !=shallow_final_choice2B_guard.end())))))) || KLEENE_NOTSTARTED == ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.kleeneState) && (FST == FST && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && S0 == S0))) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.interruptState == FST && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_pguardB.ts_C.autState == S0))))))) || (NOTCALLED == CALLED && (((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F2.callState == NOTCALLED && ((S0 == S0 && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F2.ts_E.h <= ts_J.avg - 3 * ts_J.stddev ) || (S0 == S0 && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F2.ts_E.h > ts_J.avg - 3 * ts_J.stddev ))) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F2.callState == CALLED && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F2.ts_E.autState == S0 && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F2.ts_E.h <= ts_J.avg - 3 * ts_J.stddev ) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F2.ts_E.autState == S0 && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F2.ts_E.h > ts_J.avg - 3 * ts_J.stddev )))) || ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.callState == NOTCALLED && (((((FST == FST && 0) || (FST == SND && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.guardState == GUARD_NOTSTARTED && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9)  && ((NONE == NONE && (std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end() || std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), S0) !=shallow_final_choice2B_guard.end())) || (NONE == LEFT && std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end()) || (NONE == RIGHT && std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice2B_guard.autState) !=shallow_final_choice2B_guard.end())))) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.guardState == GUARD_STARTED && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == NONE && (std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end() || std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), S0) !=shallow_final_choice2B_guard.end())) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == LEFT && std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end()) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == RIGHT && std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice2B_guard.autState) !=shallow_final_choice2B_guard.end())))))) || KLEENE_NOTSTARTED == ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.kleeneState) && (FST == FST && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && S0 == S0))) || (FST == FST && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && S0 == S0)))) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.callState == CALLED && (((((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.interruptState == FST && 0) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.interruptState == SND && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.guardState == GUARD_NOTSTARTED && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9)  && ((NONE == NONE && (std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end() || std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), S0) !=shallow_final_choice2B_guard.end())) || (NONE == LEFT && std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end()) || (NONE == RIGHT && std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice2B_guard.autState) !=shallow_final_choice2B_guard.end())))) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.guardState == GUARD_STARTED && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == NONE && (std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end() || std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), S0) !=shallow_final_choice2B_guard.end())) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == LEFT && std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end()) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == RIGHT && std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice2B_guard.autState) !=shallow_final_choice2B_guard.end())))))) || KLEENE_NOTSTARTED == ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.kleeneState) && (FST == FST && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && S0 == S0))) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.interruptState == FST && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_pguardB.ts_C.autState == S0))))))))) || (ts_J.ts_guardJ.ts_choiceJ_guard.choiceState == RIGHT && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.callState == NOTCALLED && (((NOTCALLED == NOTCALLED && ((S0 == S0 && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F2.ts_E.h <= ts_J.avg - 3 * ts_J.stddev ) || (S0 == S0 && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F2.ts_E.h > ts_J.avg - 3 * ts_J.stddev ))) || (NOTCALLED == CALLED && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F2.ts_E.autState == S0 && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F2.ts_E.h <= ts_J.avg - 3 * ts_J.stddev ) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F2.ts_E.autState == S0 && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F2.ts_E.h > ts_J.avg - 3 * ts_J.stddev )))) || ((NOTCALLED == NOTCALLED && (((((FST == FST && 0) || (FST == SND && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.guardState == GUARD_NOTSTARTED && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9)  && ((NONE == NONE && (std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end() || std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), S0) !=shallow_final_choice2B_guard.end())) || (NONE == LEFT && std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end()) || (NONE == RIGHT && std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice2B_guard.autState) !=shallow_final_choice2B_guard.end())))) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.guardState == GUARD_STARTED && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == NONE && (std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end() || std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), S0) !=shallow_final_choice2B_guard.end())) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == LEFT && std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end()) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == RIGHT && std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice2B_guard.autState) !=shallow_final_choice2B_guard.end())))))) || KLEENE_NOTSTARTED == ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.kleeneState) && (FST == FST && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && S0 == S0))) || (FST == FST && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && S0 == S0)))) || (NOTCALLED == CALLED && (((((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.interruptState == FST && 0) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.interruptState == SND && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.guardState == GUARD_NOTSTARTED && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9)  && ((NONE == NONE && (std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end() || std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), S0) !=shallow_final_choice2B_guard.end())) || (NONE == LEFT && std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end()) || (NONE == RIGHT && std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice2B_guard.autState) !=shallow_final_choice2B_guard.end())))) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.guardState == GUARD_STARTED && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == NONE && (std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end() || std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), S0) !=shallow_final_choice2B_guard.end())) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == LEFT && std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end()) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == RIGHT && std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice2B_guard.autState) !=shallow_final_choice2B_guard.end())))))) || KLEENE_NOTSTARTED == ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.kleeneState) && (FST == FST && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && S0 == S0))) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.interruptState == FST && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_pguardB.ts_C.autState == S0))))))) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.callState == CALLED && (((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F2.callState == NOTCALLED && ((S0 == S0 && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F2.ts_E.h <= ts_J.avg - 3 * ts_J.stddev ) || (S0 == S0 && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F2.ts_E.h > ts_J.avg - 3 * ts_J.stddev ))) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F2.callState == CALLED && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F2.ts_E.autState == S0 && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F2.ts_E.h <= ts_J.avg - 3 * ts_J.stddev ) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F2.ts_E.autState == S0 && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F2.ts_E.h > ts_J.avg - 3 * ts_J.stddev )))) || ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.callState == NOTCALLED && (((((FST == FST && 0) || (FST == SND && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.guardState == GUARD_NOTSTARTED && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9)  && ((NONE == NONE && (std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end() || std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), S0) !=shallow_final_choice2B_guard.end())) || (NONE == LEFT && std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end()) || (NONE == RIGHT && std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice2B_guard.autState) !=shallow_final_choice2B_guard.end())))) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.guardState == GUARD_STARTED && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == NONE && (std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end() || std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), S0) !=shallow_final_choice2B_guard.end())) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == LEFT && std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end()) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == RIGHT && std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice2B_guard.autState) !=shallow_final_choice2B_guard.end())))))) || KLEENE_NOTSTARTED == ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.kleeneState) && (FST == FST && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && S0 == S0))) || (FST == FST && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && S0 == S0)))) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.callState == CALLED && (((((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.interruptState == FST && 0) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.interruptState == SND && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.guardState == GUARD_NOTSTARTED && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9)  && ((NONE == NONE && (std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end() || std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), S0) !=shallow_final_choice2B_guard.end())) || (NONE == LEFT && std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end()) || (NONE == RIGHT && std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice2B_guard.autState) !=shallow_final_choice2B_guard.end())))) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.guardState == GUARD_STARTED && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == NONE && (std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end() || std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), S0) !=shallow_final_choice2B_guard.end())) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == LEFT && std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end()) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == RIGHT && std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice2B_guard.autState) !=shallow_final_choice2B_guard.end())))))) || KLEENE_NOTSTARTED == ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.kleeneState) && (FST == FST && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && S0 == S0))) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.interruptState == FST && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_pguardB.ts_C.autState == S0))))))))))))
		{
			if((ts_J.ts_guardJ.ts_choiceJ_guard.choiceState == NONE && (S0 == J2 && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.callState == NOTCALLED && (((NOTCALLED == NOTCALLED && ((S0 == S0 && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.ts_E.h <= ts_J.avg - 3 * ts_J.stddev ) || (S0 == S0 && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.ts_E.h > ts_J.avg - 3 * ts_J.stddev ))) || (NOTCALLED == CALLED && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.ts_E.autState == S0 && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.ts_E.h <= ts_J.avg - 3 * ts_J.stddev ) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.ts_E.autState == S0 && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.ts_E.h > ts_J.avg - 3 * ts_J.stddev )))) || ((NOTCALLED == NOTCALLED && (((((FST == FST && 0) || (FST == SND && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.guardState == GUARD_NOTSTARTED && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9)  && ((NONE == NONE && (std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end() || std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), S0) !=shallow_final_choice2B_guard.end())) || (NONE == LEFT && std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end()) || (NONE == RIGHT && std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice2B_guard.autState) !=shallow_final_choice2B_guard.end())))) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.guardState == GUARD_STARTED && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == NONE && (std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end() || std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), S0) !=shallow_final_choice2B_guard.end())) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == LEFT && std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end()) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == RIGHT && std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice2B_guard.autState) !=shallow_final_choice2B_guard.end())))))) || KLEENE_NOTSTARTED == ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.kleeneState) && (FST == FST && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && S0 == S0))) || (FST == FST && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && S0 == S0)))) || (NOTCALLED == CALLED && (((((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.interruptState == FST && 0) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.interruptState == SND && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.guardState == GUARD_NOTSTARTED && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9)  && ((NONE == NONE && (std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end() || std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), S0) !=shallow_final_choice2B_guard.end())) || (NONE == LEFT && std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end()) || (NONE == RIGHT && std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice2B_guard.autState) !=shallow_final_choice2B_guard.end())))) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.guardState == GUARD_STARTED && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == NONE && (std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end() || std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), S0) !=shallow_final_choice2B_guard.end())) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == LEFT && std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end()) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == RIGHT && std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice2B_guard.autState) !=shallow_final_choice2B_guard.end())))))) || KLEENE_NOTSTARTED == ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.kleeneState) && (FST == FST && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && S0 == S0))) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.interruptState == FST && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_pguardB.ts_C.autState == S0))))))) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.callState == CALLED && (((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.callState == NOTCALLED && ((S0 == S0 && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.ts_E.h <= ts_J.avg - 3 * ts_J.stddev ) || (S0 == S0 && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.ts_E.h > ts_J.avg - 3 * ts_J.stddev ))) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.callState == CALLED && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.ts_E.autState == S0 && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.ts_E.h <= ts_J.avg - 3 * ts_J.stddev ) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.ts_E.autState == S0 && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.ts_E.h > ts_J.avg - 3 * ts_J.stddev )))) || ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.callState == NOTCALLED && (((((FST == FST && 0) || (FST == SND && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.guardState == GUARD_NOTSTARTED && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9)  && ((NONE == NONE && (std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end() || std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), S0) !=shallow_final_choice2B_guard.end())) || (NONE == LEFT && std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end()) || (NONE == RIGHT && std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice2B_guard.autState) !=shallow_final_choice2B_guard.end())))) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.guardState == GUARD_STARTED && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == NONE && (std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end() || std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), S0) !=shallow_final_choice2B_guard.end())) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == LEFT && std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end()) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == RIGHT && std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice2B_guard.autState) !=shallow_final_choice2B_guard.end())))))) || KLEENE_NOTSTARTED == ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.kleeneState) && (FST == FST && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && S0 == S0))) || (FST == FST && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && S0 == S0)))) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.callState == CALLED && (((((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.interruptState == FST && 0) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.interruptState == SND && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.guardState == GUARD_NOTSTARTED && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9)  && ((NONE == NONE && (std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end() || std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), S0) !=shallow_final_choice2B_guard.end())) || (NONE == LEFT && std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end()) || (NONE == RIGHT && std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice2B_guard.autState) !=shallow_final_choice2B_guard.end())))) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.guardState == GUARD_STARTED && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == NONE && (std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end() || std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), S0) !=shallow_final_choice2B_guard.end())) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == LEFT && std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end()) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == RIGHT && std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice2B_guard.autState) !=shallow_final_choice2B_guard.end())))))) || KLEENE_NOTSTARTED == ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.kleeneState) && (FST == FST && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && S0 == S0))) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.interruptState == FST && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_pguardB.ts_C.autState == S0)))))))))))
			{
				ts_J.ts_guardJ.ts_choiceJ_guard.choiceState = LEFT;
				ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.autState = S0;
				if((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.autState == J2 && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.callState == NOTCALLED && (((NOTCALLED == NOTCALLED && ((S0 == S0 && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.ts_E.h <= ts_J.avg - 3 * ts_J.stddev ) || (S0 == S0 && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.ts_E.h > ts_J.avg - 3 * ts_J.stddev ))) || (NOTCALLED == CALLED && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.ts_E.autState == S0 && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.ts_E.h <= ts_J.avg - 3 * ts_J.stddev ) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.ts_E.autState == S0 && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.ts_E.h > ts_J.avg - 3 * ts_J.stddev )))) || ((NOTCALLED == NOTCALLED && (((((FST == FST && 0) || (FST == SND && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.guardState == GUARD_NOTSTARTED && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9)  && ((NONE == NONE && (std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end() || std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), S0) !=shallow_final_choice2B_guard.end())) || (NONE == LEFT && std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end()) || (NONE == RIGHT && std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice2B_guard.autState) !=shallow_final_choice2B_guard.end())))) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.guardState == GUARD_STARTED && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == NONE && (std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end() || std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), S0) !=shallow_final_choice2B_guard.end())) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == LEFT && std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end()) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == RIGHT && std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice2B_guard.autState) !=shallow_final_choice2B_guard.end())))))) || KLEENE_NOTSTARTED == ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.kleeneState) && (FST == FST && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && S0 == S0))) || (FST == FST && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && S0 == S0)))) || (NOTCALLED == CALLED && (((((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.interruptState == FST && 0) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.interruptState == SND && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.guardState == GUARD_NOTSTARTED && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9)  && ((NONE == NONE && (std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end() || std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), S0) !=shallow_final_choice2B_guard.end())) || (NONE == LEFT && std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end()) || (NONE == RIGHT && std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice2B_guard.autState) !=shallow_final_choice2B_guard.end())))) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.guardState == GUARD_STARTED && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == NONE && (std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end() || std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), S0) !=shallow_final_choice2B_guard.end())) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == LEFT && std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end()) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == RIGHT && std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice2B_guard.autState) !=shallow_final_choice2B_guard.end())))))) || KLEENE_NOTSTARTED == ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.kleeneState) && (FST == FST && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && S0 == S0))) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.interruptState == FST && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_pguardB.ts_C.autState == S0))))))) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.callState == CALLED && (((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.callState == NOTCALLED && ((S0 == S0 && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.ts_E.h <= ts_J.avg - 3 * ts_J.stddev ) || (S0 == S0 && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.ts_E.h > ts_J.avg - 3 * ts_J.stddev ))) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.callState == CALLED && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.ts_E.autState == S0 && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.ts_E.h <= ts_J.avg - 3 * ts_J.stddev ) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.ts_E.autState == S0 && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.ts_E.h > ts_J.avg - 3 * ts_J.stddev )))) || ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.callState == NOTCALLED && (((((FST == FST && 0) || (FST == SND && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.guardState == GUARD_NOTSTARTED && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9)  && ((NONE == NONE && (std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end() || std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), S0) !=shallow_final_choice2B_guard.end())) || (NONE == LEFT && std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end()) || (NONE == RIGHT && std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice2B_guard.autState) !=shallow_final_choice2B_guard.end())))) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.guardState == GUARD_STARTED && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == NONE && (std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end() || std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), S0) !=shallow_final_choice2B_guard.end())) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == LEFT && std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end()) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == RIGHT && std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice2B_guard.autState) !=shallow_final_choice2B_guard.end())))))) || KLEENE_NOTSTARTED == ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.kleeneState) && (FST == FST && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && S0 == S0))) || (FST == FST && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && S0 == S0)))) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.callState == CALLED && (((((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.interruptState == FST && 0) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.interruptState == SND && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.guardState == GUARD_NOTSTARTED && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9)  && ((NONE == NONE && (std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end() || std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), S0) !=shallow_final_choice2B_guard.end())) || (NONE == LEFT && std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end()) || (NONE == RIGHT && std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice2B_guard.autState) !=shallow_final_choice2B_guard.end())))) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.guardState == GUARD_STARTED && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == NONE && (std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end() || std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), S0) !=shallow_final_choice2B_guard.end())) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == LEFT && std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end()) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == RIGHT && std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice2B_guard.autState) !=shallow_final_choice2B_guard.end())))))) || KLEENE_NOTSTARTED == ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.kleeneState) && (FST == FST && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && S0 == S0))) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.interruptState == FST && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_pguardB.ts_C.autState == S0))))))))))
				{
					if((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.callState == NOTCALLED && (((NOTCALLED == NOTCALLED && ((S0 == S0 && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.ts_E.h <= ts_J.avg - 3 * ts_J.stddev ) || (S0 == S0 && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.ts_E.h > ts_J.avg - 3 * ts_J.stddev ))) || (NOTCALLED == CALLED && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.ts_E.autState == S0 && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.ts_E.h <= ts_J.avg - 3 * ts_J.stddev ) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.ts_E.autState == S0 && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.ts_E.h > ts_J.avg - 3 * ts_J.stddev )))) || ((NOTCALLED == NOTCALLED && (((((FST == FST && 0) || (FST == SND && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.guardState == GUARD_NOTSTARTED && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9)  && ((NONE == NONE && (std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end() || std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), S0) !=shallow_final_choice2B_guard.end())) || (NONE == LEFT && std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end()) || (NONE == RIGHT && std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice2B_guard.autState) !=shallow_final_choice2B_guard.end())))) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.guardState == GUARD_STARTED && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == NONE && (std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end() || std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), S0) !=shallow_final_choice2B_guard.end())) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == LEFT && std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end()) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == RIGHT && std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice2B_guard.autState) !=shallow_final_choice2B_guard.end())))))) || KLEENE_NOTSTARTED == ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.kleeneState) && (FST == FST && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && S0 == S0))) || (FST == FST && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && S0 == S0)))) || (NOTCALLED == CALLED && (((((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.interruptState == FST && 0) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.interruptState == SND && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.guardState == GUARD_NOTSTARTED && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9)  && ((NONE == NONE && (std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end() || std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), S0) !=shallow_final_choice2B_guard.end())) || (NONE == LEFT && std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end()) || (NONE == RIGHT && std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice2B_guard.autState) !=shallow_final_choice2B_guard.end())))) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.guardState == GUARD_STARTED && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == NONE && (std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end() || std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), S0) !=shallow_final_choice2B_guard.end())) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == LEFT && std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end()) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == RIGHT && std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice2B_guard.autState) !=shallow_final_choice2B_guard.end())))))) || KLEENE_NOTSTARTED == ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.kleeneState) && (FST == FST && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && S0 == S0))) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.interruptState == FST && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_pguardB.ts_C.autState == S0))))))))
					{
						ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.callState = CALLED;
						ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.right_clock_F1.reset_clock();
						ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.left_clock_F2.reset_clock();
						ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.callState = NOTCALLED;
						ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.callState = NOTCALLED;
						if(((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.callState == NOTCALLED && ((S0 == S0 && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.ts_E.h <= ts_J.avg - 3 * ts_J.stddev ) || (S0 == S0 && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.ts_E.h > ts_J.avg - 3 * ts_J.stddev ))) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.callState == CALLED && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.ts_E.autState == S0 && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.ts_E.h <= ts_J.avg - 3 * ts_J.stddev ) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.ts_E.autState == S0 && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.ts_E.h > ts_J.avg - 3 * ts_J.stddev )))))
						{
							if((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.callState == NOTCALLED && ((S0 == S0 && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.ts_E.h <= ts_J.avg - 3 * ts_J.stddev ) || (S0 == S0 && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.ts_E.h > ts_J.avg - 3 * ts_J.stddev ))))
							{
								ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.callState = CALLED;
								ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.ts_E.autState = S0;
								ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.ts_E.h.reset_clock();
								if((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.ts_E.autState == S0 && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.ts_E.h <= ts_J.avg - 3 * ts_J.stddev ))
								{
									Alert(1);ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.ts_E.autState = S0;
									exec = 1;
								
								}else if((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.ts_E.autState == S0 && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.ts_E.h > ts_J.avg - 3 * ts_J.stddev ))
								{
									ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.ts_E.h.reset_clock();ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.ts_E.autState = S0;
									exec = 1;
								
								}
								ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.left_clock_F2.reset_clock();
							}else if((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.callState == CALLED && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.ts_E.autState == S0 && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.ts_E.h <= ts_J.avg - 3 * ts_J.stddev ) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.ts_E.autState == S0 && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.ts_E.h > ts_J.avg - 3 * ts_J.stddev ))))
							{
								if((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.ts_E.autState == S0 && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.ts_E.h <= ts_J.avg - 3 * ts_J.stddev ))
								{
									Alert(1);ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.ts_E.autState = S0;
									exec = 1;
								
								}else if((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.ts_E.autState == S0 && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.ts_E.h > ts_J.avg - 3 * ts_J.stddev ))
								{
									ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.ts_E.h.reset_clock();ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.ts_E.autState = S0;
									exec = 1;
								
								}
								ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.left_clock_F2.reset_clock();
							}
						
						}
						if(((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.callState == NOTCALLED && (((((FST == FST && 0) || (FST == SND && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.guardState == GUARD_NOTSTARTED && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9)  && ((NONE == NONE && (std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end() || std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), S0) !=shallow_final_choice2B_guard.end())) || (NONE == LEFT && std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end()) || (NONE == RIGHT && std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice2B_guard.autState) !=shallow_final_choice2B_guard.end())))) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.guardState == GUARD_STARTED && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == NONE && (std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end() || std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), S0) !=shallow_final_choice2B_guard.end())) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == LEFT && std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end()) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == RIGHT && std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice2B_guard.autState) !=shallow_final_choice2B_guard.end())))))) || KLEENE_NOTSTARTED == ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.kleeneState) && (FST == FST && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && S0 == S0))) || (FST == FST && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && S0 == S0)))) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.callState == CALLED && (((((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.interruptState == FST && 0) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.interruptState == SND && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.guardState == GUARD_NOTSTARTED && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9)  && ((NONE == NONE && (std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end() || std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), S0) !=shallow_final_choice2B_guard.end())) || (NONE == LEFT && std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end()) || (NONE == RIGHT && std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice2B_guard.autState) !=shallow_final_choice2B_guard.end())))) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.guardState == GUARD_STARTED && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == NONE && (std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end() || std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), S0) !=shallow_final_choice2B_guard.end())) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == LEFT && std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end()) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == RIGHT && std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice2B_guard.autState) !=shallow_final_choice2B_guard.end())))))) || KLEENE_NOTSTARTED == ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.kleeneState) && (FST == FST && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && S0 == S0))) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.interruptState == FST && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_pguardB.ts_C.autState == S0))))))
						{
							if((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.callState == NOTCALLED && (((((FST == FST && 0) || (FST == SND && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.guardState == GUARD_NOTSTARTED && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9)  && ((NONE == NONE && (std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end() || std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), S0) !=shallow_final_choice2B_guard.end())) || (NONE == LEFT && std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end()) || (NONE == RIGHT && std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice2B_guard.autState) !=shallow_final_choice2B_guard.end())))) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.guardState == GUARD_STARTED && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == NONE && (std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end() || std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), S0) !=shallow_final_choice2B_guard.end())) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == LEFT && std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end()) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == RIGHT && std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice2B_guard.autState) !=shallow_final_choice2B_guard.end())))))) || KLEENE_NOTSTARTED == ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.kleeneState) && (FST == FST && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && S0 == S0))) || (FST == FST && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && S0 == S0)))))
							{
								ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.callState = CALLED;
								ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.kleeneState = KLEENE_NOTSTARTED;
								ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.interruptState = FST;
								ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_pguardB.ts_C.autState = S0;
								if(((((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.interruptState == FST && 0) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.interruptState == SND && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.guardState == GUARD_NOTSTARTED && (last_event_time.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9)  && ((NONE == NONE && (std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end() || std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), S0) !=shallow_final_choice2B_guard.end())) || (NONE == LEFT && std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end()) || (NONE == RIGHT && std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice2B_guard.autState) !=shallow_final_choice2B_guard.end())))) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.guardState == GUARD_STARTED && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == NONE && (std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end() || std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), S0) !=shallow_final_choice2B_guard.end())) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == LEFT && std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end()) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == RIGHT && std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice2B_guard.autState) !=shallow_final_choice2B_guard.end())))))) || KLEENE_NOTSTARTED == ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.kleeneState) && (FST == FST && (last_event_time.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && S0 == S0))))
								{
									ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.kleeneState = KLEENE_STARTED;
									ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.interruptState = FST;
									ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_pguardB.ts_C.autState = S0;
									if((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.interruptState == FST && (last_event_time.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_pguardB.ts_C.autState == S0)))
									{
										if((last_event_time.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_pguardB.ts_C.autState == S0))
										{
											if(ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_pguardB.ts_C.autState == S0)
											{
												ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_pguardB.ts_C.autState = S0;
												exec = 1;
											
											}
										
										}
									
									}
								
								}else if((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.interruptState == FST && (last_event_time.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_pguardB.ts_C.autState == S0)))
								{
									ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.kleeneState = KLEENE_STARTED;
									if((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.interruptState == FST && (last_event_time.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_pguardB.ts_C.autState == S0)))
									{
										if((last_event_time.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_pguardB.ts_C.autState == S0))
										{
											if(ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_pguardB.ts_C.autState == S0)
											{
												ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_pguardB.ts_C.autState = S0;
												exec = 1;
											
											}
										
										}
									
									}
								
								}
								ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.right_clock_F1.reset_clock();
							}else if((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.callState == CALLED && (((((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.interruptState == FST && 0) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.interruptState == SND && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.guardState == GUARD_NOTSTARTED && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9)  && ((NONE == NONE && (std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end() || std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), S0) !=shallow_final_choice2B_guard.end())) || (NONE == LEFT && std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end()) || (NONE == RIGHT && std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice2B_guard.autState) !=shallow_final_choice2B_guard.end())))) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.guardState == GUARD_STARTED && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == NONE && (std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end() || std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), S0) !=shallow_final_choice2B_guard.end())) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == LEFT && std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end()) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == RIGHT && std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice2B_guard.autState) !=shallow_final_choice2B_guard.end())))))) || KLEENE_NOTSTARTED == ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.kleeneState) && (FST == FST && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && S0 == S0))) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.interruptState == FST && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_pguardB.ts_C.autState == S0)))))
							{
								if(((((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.interruptState == FST && 0) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.interruptState == SND && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.guardState == GUARD_NOTSTARTED && (last_event_time.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9)  && ((NONE == NONE && (std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end() || std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), S0) !=shallow_final_choice2B_guard.end())) || (NONE == LEFT && std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end()) || (NONE == RIGHT && std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice2B_guard.autState) !=shallow_final_choice2B_guard.end())))) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.guardState == GUARD_STARTED && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == NONE && (std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end() || std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), S0) !=shallow_final_choice2B_guard.end())) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == LEFT && std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end()) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == RIGHT && std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice2B_guard.autState) !=shallow_final_choice2B_guard.end())))))) || KLEENE_NOTSTARTED == ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.kleeneState) && (FST == FST && (last_event_time.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && S0 == S0))))
								{
									ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.kleeneState = KLEENE_STARTED;
									ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.interruptState = FST;
									ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_pguardB.ts_C.autState = S0;
									if((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.interruptState == FST && (last_event_time.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_pguardB.ts_C.autState == S0)))
									{
										if((last_event_time.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_pguardB.ts_C.autState == S0))
										{
											if(ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_pguardB.ts_C.autState == S0)
											{
												ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_pguardB.ts_C.autState = S0;
												exec = 1;
											
											}
										
										}
									
									}
								
								}else if((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.interruptState == FST && (last_event_time.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_pguardB.ts_C.autState == S0)))
								{
									ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.kleeneState = KLEENE_STARTED;
									if((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.interruptState == FST && (last_event_time.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_pguardB.ts_C.autState == S0)))
									{
										if((last_event_time.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_pguardB.ts_C.autState == S0))
										{
											if(ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_pguardB.ts_C.autState == S0)
											{
												ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_pguardB.ts_C.autState = S0;
												exec = 1;
											
											}
										
										}
									
									}
								
								}
								ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.right_clock_F1.reset_clock();
							}
						
						}
					
					}else if((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.callState == CALLED && (((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.callState == NOTCALLED && ((S0 == S0 && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.ts_E.h <= ts_J.avg - 3 * ts_J.stddev ) || (S0 == S0 && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.ts_E.h > ts_J.avg - 3 * ts_J.stddev ))) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.callState == CALLED && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.ts_E.autState == S0 && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.ts_E.h <= ts_J.avg - 3 * ts_J.stddev ) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.ts_E.autState == S0 && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.ts_E.h > ts_J.avg - 3 * ts_J.stddev )))) || ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.callState == NOTCALLED && (((((FST == FST && 0) || (FST == SND && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.guardState == GUARD_NOTSTARTED && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9)  && ((NONE == NONE && (std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end() || std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), S0) !=shallow_final_choice2B_guard.end())) || (NONE == LEFT && std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end()) || (NONE == RIGHT && std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice2B_guard.autState) !=shallow_final_choice2B_guard.end())))) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.guardState == GUARD_STARTED && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == NONE && (std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end() || std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), S0) !=shallow_final_choice2B_guard.end())) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == LEFT && std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end()) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == RIGHT && std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice2B_guard.autState) !=shallow_final_choice2B_guard.end())))))) || KLEENE_NOTSTARTED == ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.kleeneState) && (FST == FST && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && S0 == S0))) || (FST == FST && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && S0 == S0)))) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.callState == CALLED && (((((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.interruptState == FST && 0) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.interruptState == SND && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.guardState == GUARD_NOTSTARTED && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9)  && ((NONE == NONE && (std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end() || std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), S0) !=shallow_final_choice2B_guard.end())) || (NONE == LEFT && std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end()) || (NONE == RIGHT && std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice2B_guard.autState) !=shallow_final_choice2B_guard.end())))) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.guardState == GUARD_STARTED && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == NONE && (std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end() || std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), S0) !=shallow_final_choice2B_guard.end())) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == LEFT && std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end()) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == RIGHT && std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice2B_guard.autState) !=shallow_final_choice2B_guard.end())))))) || KLEENE_NOTSTARTED == ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.kleeneState) && (FST == FST && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && S0 == S0))) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.interruptState == FST && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_pguardB.ts_C.autState == S0))))))))
					{
						if(((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.callState == NOTCALLED && ((S0 == S0 && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.ts_E.h <= ts_J.avg - 3 * ts_J.stddev ) || (S0 == S0 && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.ts_E.h > ts_J.avg - 3 * ts_J.stddev ))) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.callState == CALLED && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.ts_E.autState == S0 && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.ts_E.h <= ts_J.avg - 3 * ts_J.stddev ) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.ts_E.autState == S0 && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.ts_E.h > ts_J.avg - 3 * ts_J.stddev )))))
						{
							if((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.callState == NOTCALLED && ((S0 == S0 && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.ts_E.h <= ts_J.avg - 3 * ts_J.stddev ) || (S0 == S0 && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.ts_E.h > ts_J.avg - 3 * ts_J.stddev ))))
							{
								ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.callState = CALLED;
								ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.ts_E.autState = S0;
								ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.ts_E.h.reset_clock();
								if((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.ts_E.autState == S0 && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.ts_E.h <= ts_J.avg - 3 * ts_J.stddev ))
								{
									Alert(1);ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.ts_E.autState = S0;
									exec = 1;
								
								}else if((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.ts_E.autState == S0 && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.ts_E.h > ts_J.avg - 3 * ts_J.stddev ))
								{
									ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.ts_E.h.reset_clock();ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.ts_E.autState = S0;
									exec = 1;
								
								}
								ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.left_clock_F2.reset_clock();
							}else if((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.callState == CALLED && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.ts_E.autState == S0 && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.ts_E.h <= ts_J.avg - 3 * ts_J.stddev ) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.ts_E.autState == S0 && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.ts_E.h > ts_J.avg - 3 * ts_J.stddev ))))
							{
								if((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.ts_E.autState == S0 && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.ts_E.h <= ts_J.avg - 3 * ts_J.stddev ))
								{
									Alert(1);ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.ts_E.autState = S0;
									exec = 1;
								
								}else if((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.ts_E.autState == S0 && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.ts_E.h > ts_J.avg - 3 * ts_J.stddev ))
								{
									ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.ts_E.h.reset_clock();ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.ts_E.autState = S0;
									exec = 1;
								
								}
								ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.left_clock_F2.reset_clock();
							}
						
						}
						if(((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.callState == NOTCALLED && (((((FST == FST && 0) || (FST == SND && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.guardState == GUARD_NOTSTARTED && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9)  && ((NONE == NONE && (std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end() || std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), S0) !=shallow_final_choice2B_guard.end())) || (NONE == LEFT && std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end()) || (NONE == RIGHT && std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice2B_guard.autState) !=shallow_final_choice2B_guard.end())))) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.guardState == GUARD_STARTED && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == NONE && (std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end() || std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), S0) !=shallow_final_choice2B_guard.end())) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == LEFT && std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end()) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == RIGHT && std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice2B_guard.autState) !=shallow_final_choice2B_guard.end())))))) || KLEENE_NOTSTARTED == ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.kleeneState) && (FST == FST && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && S0 == S0))) || (FST == FST && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && S0 == S0)))) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.callState == CALLED && (((((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.interruptState == FST && 0) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.interruptState == SND && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.guardState == GUARD_NOTSTARTED && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9)  && ((NONE == NONE && (std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end() || std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), S0) !=shallow_final_choice2B_guard.end())) || (NONE == LEFT && std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end()) || (NONE == RIGHT && std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice2B_guard.autState) !=shallow_final_choice2B_guard.end())))) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.guardState == GUARD_STARTED && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == NONE && (std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end() || std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), S0) !=shallow_final_choice2B_guard.end())) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == LEFT && std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end()) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == RIGHT && std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice2B_guard.autState) !=shallow_final_choice2B_guard.end())))))) || KLEENE_NOTSTARTED == ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.kleeneState) && (FST == FST && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && S0 == S0))) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.interruptState == FST && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_pguardB.ts_C.autState == S0))))))
						{
							if((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.callState == NOTCALLED && (((((FST == FST && 0) || (FST == SND && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.guardState == GUARD_NOTSTARTED && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9)  && ((NONE == NONE && (std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end() || std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), S0) !=shallow_final_choice2B_guard.end())) || (NONE == LEFT && std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end()) || (NONE == RIGHT && std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice2B_guard.autState) !=shallow_final_choice2B_guard.end())))) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.guardState == GUARD_STARTED && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == NONE && (std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end() || std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), S0) !=shallow_final_choice2B_guard.end())) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == LEFT && std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end()) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == RIGHT && std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice2B_guard.autState) !=shallow_final_choice2B_guard.end())))))) || KLEENE_NOTSTARTED == ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.kleeneState) && (FST == FST && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && S0 == S0))) || (FST == FST && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && S0 == S0)))))
							{
								ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.callState = CALLED;
								ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.kleeneState = KLEENE_NOTSTARTED;
								ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.interruptState = FST;
								ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_pguardB.ts_C.autState = S0;
								if(((((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.interruptState == FST && 0) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.interruptState == SND && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.guardState == GUARD_NOTSTARTED && (last_event_time.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9)  && ((NONE == NONE && (std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end() || std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), S0) !=shallow_final_choice2B_guard.end())) || (NONE == LEFT && std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end()) || (NONE == RIGHT && std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice2B_guard.autState) !=shallow_final_choice2B_guard.end())))) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.guardState == GUARD_STARTED && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == NONE && (std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end() || std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), S0) !=shallow_final_choice2B_guard.end())) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == LEFT && std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end()) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == RIGHT && std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice2B_guard.autState) !=shallow_final_choice2B_guard.end())))))) || KLEENE_NOTSTARTED == ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.kleeneState) && (FST == FST && (last_event_time.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && S0 == S0))))
								{
									ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.kleeneState = KLEENE_STARTED;
									ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.interruptState = FST;
									ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_pguardB.ts_C.autState = S0;
									if((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.interruptState == FST && (last_event_time.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_pguardB.ts_C.autState == S0)))
									{
										if((last_event_time.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_pguardB.ts_C.autState == S0))
										{
											if(ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_pguardB.ts_C.autState == S0)
											{
												ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_pguardB.ts_C.autState = S0;
												exec = 1;
											
											}
										
										}
									
									}
								
								}else if((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.interruptState == FST && (last_event_time.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_pguardB.ts_C.autState == S0)))
								{
									ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.kleeneState = KLEENE_STARTED;
									if((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.interruptState == FST && (last_event_time.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_pguardB.ts_C.autState == S0)))
									{
										if((last_event_time.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_pguardB.ts_C.autState == S0))
										{
											if(ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_pguardB.ts_C.autState == S0)
											{
												ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_pguardB.ts_C.autState = S0;
												exec = 1;
											
											}
										
										}
									
									}
								
								}
								ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.right_clock_F1.reset_clock();
							}else if((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.callState == CALLED && (((((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.interruptState == FST && 0) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.interruptState == SND && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.guardState == GUARD_NOTSTARTED && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9)  && ((NONE == NONE && (std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end() || std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), S0) !=shallow_final_choice2B_guard.end())) || (NONE == LEFT && std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end()) || (NONE == RIGHT && std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice2B_guard.autState) !=shallow_final_choice2B_guard.end())))) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.guardState == GUARD_STARTED && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == NONE && (std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end() || std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), S0) !=shallow_final_choice2B_guard.end())) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == LEFT && std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end()) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == RIGHT && std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice2B_guard.autState) !=shallow_final_choice2B_guard.end())))))) || KLEENE_NOTSTARTED == ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.kleeneState) && (FST == FST && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && S0 == S0))) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.interruptState == FST && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_pguardB.ts_C.autState == S0)))))
							{
								if(((((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.interruptState == FST && 0) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.interruptState == SND && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.guardState == GUARD_NOTSTARTED && (last_event_time.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9)  && ((NONE == NONE && (std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end() || std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), S0) !=shallow_final_choice2B_guard.end())) || (NONE == LEFT && std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end()) || (NONE == RIGHT && std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice2B_guard.autState) !=shallow_final_choice2B_guard.end())))) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.guardState == GUARD_STARTED && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == NONE && (std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end() || std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), S0) !=shallow_final_choice2B_guard.end())) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == LEFT && std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end()) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == RIGHT && std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice2B_guard.autState) !=shallow_final_choice2B_guard.end())))))) || KLEENE_NOTSTARTED == ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.kleeneState) && (FST == FST && (last_event_time.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && S0 == S0))))
								{
									ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.kleeneState = KLEENE_STARTED;
									ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.interruptState = FST;
									ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_pguardB.ts_C.autState = S0;
									if((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.interruptState == FST && (last_event_time.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_pguardB.ts_C.autState == S0)))
									{
										if((last_event_time.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_pguardB.ts_C.autState == S0))
										{
											if(ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_pguardB.ts_C.autState == S0)
											{
												ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_pguardB.ts_C.autState = S0;
												exec = 1;
											
											}
										
										}
									
									}
								
								}else if((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.interruptState == FST && (last_event_time.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_pguardB.ts_C.autState == S0)))
								{
									ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.kleeneState = KLEENE_STARTED;
									if((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.interruptState == FST && (last_event_time.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_pguardB.ts_C.autState == S0)))
									{
										if((last_event_time.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_pguardB.ts_C.autState == S0))
										{
											if(ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_pguardB.ts_C.autState == S0)
											{
												ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_pguardB.ts_C.autState = S0;
												exec = 1;
											
											}
										
										}
									
									}
								
								}
								ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.right_clock_F1.reset_clock();
							}
						
						}
					
					}
				
				}
			
			}else if((ts_J.ts_guardJ.ts_choiceJ_guard.choiceState == LEFT && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.autState == J2 && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.callState == NOTCALLED && (((NOTCALLED == NOTCALLED && ((S0 == S0 && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.ts_E.h <= ts_J.avg - 3 * ts_J.stddev ) || (S0 == S0 && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.ts_E.h > ts_J.avg - 3 * ts_J.stddev ))) || (NOTCALLED == CALLED && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.ts_E.autState == S0 && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.ts_E.h <= ts_J.avg - 3 * ts_J.stddev ) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.ts_E.autState == S0 && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.ts_E.h > ts_J.avg - 3 * ts_J.stddev )))) || ((NOTCALLED == NOTCALLED && (((((FST == FST && 0) || (FST == SND && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.guardState == GUARD_NOTSTARTED && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9)  && ((NONE == NONE && (std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end() || std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), S0) !=shallow_final_choice2B_guard.end())) || (NONE == LEFT && std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end()) || (NONE == RIGHT && std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice2B_guard.autState) !=shallow_final_choice2B_guard.end())))) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.guardState == GUARD_STARTED && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == NONE && (std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end() || std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), S0) !=shallow_final_choice2B_guard.end())) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == LEFT && std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end()) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == RIGHT && std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice2B_guard.autState) !=shallow_final_choice2B_guard.end())))))) || KLEENE_NOTSTARTED == ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.kleeneState) && (FST == FST && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && S0 == S0))) || (FST == FST && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && S0 == S0)))) || (NOTCALLED == CALLED && (((((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.interruptState == FST && 0) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.interruptState == SND && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.guardState == GUARD_NOTSTARTED && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9)  && ((NONE == NONE && (std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end() || std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), S0) !=shallow_final_choice2B_guard.end())) || (NONE == LEFT && std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end()) || (NONE == RIGHT && std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice2B_guard.autState) !=shallow_final_choice2B_guard.end())))) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.guardState == GUARD_STARTED && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == NONE && (std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end() || std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), S0) !=shallow_final_choice2B_guard.end())) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == LEFT && std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end()) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == RIGHT && std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice2B_guard.autState) !=shallow_final_choice2B_guard.end())))))) || KLEENE_NOTSTARTED == ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.kleeneState) && (FST == FST && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && S0 == S0))) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.interruptState == FST && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_pguardB.ts_C.autState == S0))))))) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.callState == CALLED && (((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.callState == NOTCALLED && ((S0 == S0 && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.ts_E.h <= ts_J.avg - 3 * ts_J.stddev ) || (S0 == S0 && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.ts_E.h > ts_J.avg - 3 * ts_J.stddev ))) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.callState == CALLED && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.ts_E.autState == S0 && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.ts_E.h <= ts_J.avg - 3 * ts_J.stddev ) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.ts_E.autState == S0 && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.ts_E.h > ts_J.avg - 3 * ts_J.stddev )))) || ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.callState == NOTCALLED && (((((FST == FST && 0) || (FST == SND && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.guardState == GUARD_NOTSTARTED && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9)  && ((NONE == NONE && (std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end() || std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), S0) !=shallow_final_choice2B_guard.end())) || (NONE == LEFT && std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end()) || (NONE == RIGHT && std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice2B_guard.autState) !=shallow_final_choice2B_guard.end())))) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.guardState == GUARD_STARTED && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == NONE && (std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end() || std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), S0) !=shallow_final_choice2B_guard.end())) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == LEFT && std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end()) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == RIGHT && std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice2B_guard.autState) !=shallow_final_choice2B_guard.end())))))) || KLEENE_NOTSTARTED == ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.kleeneState) && (FST == FST && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && S0 == S0))) || (FST == FST && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && S0 == S0)))) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.callState == CALLED && (((((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.interruptState == FST && 0) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.interruptState == SND && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.guardState == GUARD_NOTSTARTED && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9)  && ((NONE == NONE && (std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end() || std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), S0) !=shallow_final_choice2B_guard.end())) || (NONE == LEFT && std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end()) || (NONE == RIGHT && std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice2B_guard.autState) !=shallow_final_choice2B_guard.end())))) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.guardState == GUARD_STARTED && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == NONE && (std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end() || std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), S0) !=shallow_final_choice2B_guard.end())) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == LEFT && std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end()) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == RIGHT && std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice2B_guard.autState) !=shallow_final_choice2B_guard.end())))))) || KLEENE_NOTSTARTED == ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.kleeneState) && (FST == FST && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && S0 == S0))) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.interruptState == FST && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_pguardB.ts_C.autState == S0)))))))))))
			{
				if((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.autState == J2 && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.callState == NOTCALLED && (((NOTCALLED == NOTCALLED && ((S0 == S0 && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.ts_E.h <= ts_J.avg - 3 * ts_J.stddev ) || (S0 == S0 && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.ts_E.h > ts_J.avg - 3 * ts_J.stddev ))) || (NOTCALLED == CALLED && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.ts_E.autState == S0 && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.ts_E.h <= ts_J.avg - 3 * ts_J.stddev ) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.ts_E.autState == S0 && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.ts_E.h > ts_J.avg - 3 * ts_J.stddev )))) || ((NOTCALLED == NOTCALLED && (((((FST == FST && 0) || (FST == SND && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.guardState == GUARD_NOTSTARTED && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9)  && ((NONE == NONE && (std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end() || std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), S0) !=shallow_final_choice2B_guard.end())) || (NONE == LEFT && std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end()) || (NONE == RIGHT && std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice2B_guard.autState) !=shallow_final_choice2B_guard.end())))) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.guardState == GUARD_STARTED && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == NONE && (std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end() || std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), S0) !=shallow_final_choice2B_guard.end())) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == LEFT && std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end()) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == RIGHT && std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice2B_guard.autState) !=shallow_final_choice2B_guard.end())))))) || KLEENE_NOTSTARTED == ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.kleeneState) && (FST == FST && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && S0 == S0))) || (FST == FST && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && S0 == S0)))) || (NOTCALLED == CALLED && (((((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.interruptState == FST && 0) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.interruptState == SND && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.guardState == GUARD_NOTSTARTED && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9)  && ((NONE == NONE && (std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end() || std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), S0) !=shallow_final_choice2B_guard.end())) || (NONE == LEFT && std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end()) || (NONE == RIGHT && std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice2B_guard.autState) !=shallow_final_choice2B_guard.end())))) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.guardState == GUARD_STARTED && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == NONE && (std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end() || std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), S0) !=shallow_final_choice2B_guard.end())) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == LEFT && std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end()) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == RIGHT && std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice2B_guard.autState) !=shallow_final_choice2B_guard.end())))))) || KLEENE_NOTSTARTED == ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.kleeneState) && (FST == FST && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && S0 == S0))) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.interruptState == FST && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_pguardB.ts_C.autState == S0))))))) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.callState == CALLED && (((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.callState == NOTCALLED && ((S0 == S0 && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.ts_E.h <= ts_J.avg - 3 * ts_J.stddev ) || (S0 == S0 && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.ts_E.h > ts_J.avg - 3 * ts_J.stddev ))) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.callState == CALLED && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.ts_E.autState == S0 && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.ts_E.h <= ts_J.avg - 3 * ts_J.stddev ) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.ts_E.autState == S0 && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.ts_E.h > ts_J.avg - 3 * ts_J.stddev )))) || ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.callState == NOTCALLED && (((((FST == FST && 0) || (FST == SND && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.guardState == GUARD_NOTSTARTED && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9)  && ((NONE == NONE && (std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end() || std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), S0) !=shallow_final_choice2B_guard.end())) || (NONE == LEFT && std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end()) || (NONE == RIGHT && std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice2B_guard.autState) !=shallow_final_choice2B_guard.end())))) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.guardState == GUARD_STARTED && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == NONE && (std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end() || std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), S0) !=shallow_final_choice2B_guard.end())) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == LEFT && std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end()) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == RIGHT && std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice2B_guard.autState) !=shallow_final_choice2B_guard.end())))))) || KLEENE_NOTSTARTED == ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.kleeneState) && (FST == FST && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && S0 == S0))) || (FST == FST && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && S0 == S0)))) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.callState == CALLED && (((((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.interruptState == FST && 0) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.interruptState == SND && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.guardState == GUARD_NOTSTARTED && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9)  && ((NONE == NONE && (std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end() || std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), S0) !=shallow_final_choice2B_guard.end())) || (NONE == LEFT && std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end()) || (NONE == RIGHT && std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice2B_guard.autState) !=shallow_final_choice2B_guard.end())))) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.guardState == GUARD_STARTED && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == NONE && (std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end() || std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), S0) !=shallow_final_choice2B_guard.end())) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == LEFT && std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end()) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == RIGHT && std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice2B_guard.autState) !=shallow_final_choice2B_guard.end())))))) || KLEENE_NOTSTARTED == ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.kleeneState) && (FST == FST && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && S0 == S0))) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.interruptState == FST && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_pguardB.ts_C.autState == S0))))))))))
				{
					if((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.callState == NOTCALLED && (((NOTCALLED == NOTCALLED && ((S0 == S0 && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.ts_E.h <= ts_J.avg - 3 * ts_J.stddev ) || (S0 == S0 && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.ts_E.h > ts_J.avg - 3 * ts_J.stddev ))) || (NOTCALLED == CALLED && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.ts_E.autState == S0 && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.ts_E.h <= ts_J.avg - 3 * ts_J.stddev ) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.ts_E.autState == S0 && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.ts_E.h > ts_J.avg - 3 * ts_J.stddev )))) || ((NOTCALLED == NOTCALLED && (((((FST == FST && 0) || (FST == SND && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.guardState == GUARD_NOTSTARTED && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9)  && ((NONE == NONE && (std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end() || std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), S0) !=shallow_final_choice2B_guard.end())) || (NONE == LEFT && std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end()) || (NONE == RIGHT && std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice2B_guard.autState) !=shallow_final_choice2B_guard.end())))) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.guardState == GUARD_STARTED && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == NONE && (std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end() || std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), S0) !=shallow_final_choice2B_guard.end())) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == LEFT && std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end()) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == RIGHT && std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice2B_guard.autState) !=shallow_final_choice2B_guard.end())))))) || KLEENE_NOTSTARTED == ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.kleeneState) && (FST == FST && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && S0 == S0))) || (FST == FST && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && S0 == S0)))) || (NOTCALLED == CALLED && (((((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.interruptState == FST && 0) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.interruptState == SND && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.guardState == GUARD_NOTSTARTED && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9)  && ((NONE == NONE && (std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end() || std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), S0) !=shallow_final_choice2B_guard.end())) || (NONE == LEFT && std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end()) || (NONE == RIGHT && std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice2B_guard.autState) !=shallow_final_choice2B_guard.end())))) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.guardState == GUARD_STARTED && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == NONE && (std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end() || std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), S0) !=shallow_final_choice2B_guard.end())) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == LEFT && std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end()) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == RIGHT && std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice2B_guard.autState) !=shallow_final_choice2B_guard.end())))))) || KLEENE_NOTSTARTED == ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.kleeneState) && (FST == FST && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && S0 == S0))) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.interruptState == FST && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_pguardB.ts_C.autState == S0))))))))
					{
						ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.callState = CALLED;
						ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.right_clock_F1.reset_clock();
						ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.left_clock_F2.reset_clock();
						ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.callState = NOTCALLED;
						ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.callState = NOTCALLED;
						if(((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.callState == NOTCALLED && ((S0 == S0 && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.ts_E.h <= ts_J.avg - 3 * ts_J.stddev ) || (S0 == S0 && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.ts_E.h > ts_J.avg - 3 * ts_J.stddev ))) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.callState == CALLED && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.ts_E.autState == S0 && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.ts_E.h <= ts_J.avg - 3 * ts_J.stddev ) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.ts_E.autState == S0 && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.ts_E.h > ts_J.avg - 3 * ts_J.stddev )))))
						{
							if((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.callState == NOTCALLED && ((S0 == S0 && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.ts_E.h <= ts_J.avg - 3 * ts_J.stddev ) || (S0 == S0 && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.ts_E.h > ts_J.avg - 3 * ts_J.stddev ))))
							{
								ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.callState = CALLED;
								ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.ts_E.autState = S0;
								ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.ts_E.h.reset_clock();
								if((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.ts_E.autState == S0 && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.ts_E.h <= ts_J.avg - 3 * ts_J.stddev ))
								{
									Alert(1);ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.ts_E.autState = S0;
									exec = 1;
								
								}else if((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.ts_E.autState == S0 && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.ts_E.h > ts_J.avg - 3 * ts_J.stddev ))
								{
									ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.ts_E.h.reset_clock();ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.ts_E.autState = S0;
									exec = 1;
								
								}
								ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.left_clock_F2.reset_clock();
							}else if((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.callState == CALLED && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.ts_E.autState == S0 && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.ts_E.h <= ts_J.avg - 3 * ts_J.stddev ) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.ts_E.autState == S0 && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.ts_E.h > ts_J.avg - 3 * ts_J.stddev ))))
							{
								if((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.ts_E.autState == S0 && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.ts_E.h <= ts_J.avg - 3 * ts_J.stddev ))
								{
									Alert(1);ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.ts_E.autState = S0;
									exec = 1;
								
								}else if((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.ts_E.autState == S0 && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.ts_E.h > ts_J.avg - 3 * ts_J.stddev ))
								{
									ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.ts_E.h.reset_clock();ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.ts_E.autState = S0;
									exec = 1;
								
								}
								ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.left_clock_F2.reset_clock();
							}
						
						}
						if(((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.callState == NOTCALLED && (((((FST == FST && 0) || (FST == SND && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.guardState == GUARD_NOTSTARTED && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9)  && ((NONE == NONE && (std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end() || std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), S0) !=shallow_final_choice2B_guard.end())) || (NONE == LEFT && std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end()) || (NONE == RIGHT && std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice2B_guard.autState) !=shallow_final_choice2B_guard.end())))) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.guardState == GUARD_STARTED && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == NONE && (std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end() || std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), S0) !=shallow_final_choice2B_guard.end())) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == LEFT && std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end()) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == RIGHT && std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice2B_guard.autState) !=shallow_final_choice2B_guard.end())))))) || KLEENE_NOTSTARTED == ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.kleeneState) && (FST == FST && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && S0 == S0))) || (FST == FST && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && S0 == S0)))) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.callState == CALLED && (((((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.interruptState == FST && 0) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.interruptState == SND && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.guardState == GUARD_NOTSTARTED && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9)  && ((NONE == NONE && (std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end() || std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), S0) !=shallow_final_choice2B_guard.end())) || (NONE == LEFT && std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end()) || (NONE == RIGHT && std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice2B_guard.autState) !=shallow_final_choice2B_guard.end())))) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.guardState == GUARD_STARTED && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == NONE && (std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end() || std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), S0) !=shallow_final_choice2B_guard.end())) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == LEFT && std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end()) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == RIGHT && std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice2B_guard.autState) !=shallow_final_choice2B_guard.end())))))) || KLEENE_NOTSTARTED == ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.kleeneState) && (FST == FST && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && S0 == S0))) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.interruptState == FST && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_pguardB.ts_C.autState == S0))))))
						{
							if((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.callState == NOTCALLED && (((((FST == FST && 0) || (FST == SND && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.guardState == GUARD_NOTSTARTED && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9)  && ((NONE == NONE && (std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end() || std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), S0) !=shallow_final_choice2B_guard.end())) || (NONE == LEFT && std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end()) || (NONE == RIGHT && std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice2B_guard.autState) !=shallow_final_choice2B_guard.end())))) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.guardState == GUARD_STARTED && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == NONE && (std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end() || std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), S0) !=shallow_final_choice2B_guard.end())) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == LEFT && std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end()) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == RIGHT && std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice2B_guard.autState) !=shallow_final_choice2B_guard.end())))))) || KLEENE_NOTSTARTED == ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.kleeneState) && (FST == FST && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && S0 == S0))) || (FST == FST && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && S0 == S0)))))
							{
								ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.callState = CALLED;
								ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.kleeneState = KLEENE_NOTSTARTED;
								ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.interruptState = FST;
								ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_pguardB.ts_C.autState = S0;
								if(((((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.interruptState == FST && 0) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.interruptState == SND && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.guardState == GUARD_NOTSTARTED && (last_event_time.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9)  && ((NONE == NONE && (std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end() || std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), S0) !=shallow_final_choice2B_guard.end())) || (NONE == LEFT && std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end()) || (NONE == RIGHT && std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice2B_guard.autState) !=shallow_final_choice2B_guard.end())))) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.guardState == GUARD_STARTED && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == NONE && (std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end() || std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), S0) !=shallow_final_choice2B_guard.end())) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == LEFT && std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end()) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == RIGHT && std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice2B_guard.autState) !=shallow_final_choice2B_guard.end())))))) || KLEENE_NOTSTARTED == ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.kleeneState) && (FST == FST && (last_event_time.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && S0 == S0))))
								{
									ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.kleeneState = KLEENE_STARTED;
									ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.interruptState = FST;
									ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_pguardB.ts_C.autState = S0;
									if((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.interruptState == FST && (last_event_time.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_pguardB.ts_C.autState == S0)))
									{
										if((last_event_time.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_pguardB.ts_C.autState == S0))
										{
											if(ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_pguardB.ts_C.autState == S0)
											{
												ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_pguardB.ts_C.autState = S0;
												exec = 1;
											
											}
										
										}
									
									}
								
								}else if((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.interruptState == FST && (last_event_time.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_pguardB.ts_C.autState == S0)))
								{
									ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.kleeneState = KLEENE_STARTED;
									if((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.interruptState == FST && (last_event_time.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_pguardB.ts_C.autState == S0)))
									{
										if((last_event_time.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_pguardB.ts_C.autState == S0))
										{
											if(ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_pguardB.ts_C.autState == S0)
											{
												ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_pguardB.ts_C.autState = S0;
												exec = 1;
											
											}
										
										}
									
									}
								
								}
								ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.right_clock_F1.reset_clock();
							}else if((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.callState == CALLED && (((((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.interruptState == FST && 0) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.interruptState == SND && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.guardState == GUARD_NOTSTARTED && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9)  && ((NONE == NONE && (std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end() || std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), S0) !=shallow_final_choice2B_guard.end())) || (NONE == LEFT && std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end()) || (NONE == RIGHT && std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice2B_guard.autState) !=shallow_final_choice2B_guard.end())))) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.guardState == GUARD_STARTED && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == NONE && (std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end() || std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), S0) !=shallow_final_choice2B_guard.end())) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == LEFT && std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end()) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == RIGHT && std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice2B_guard.autState) !=shallow_final_choice2B_guard.end())))))) || KLEENE_NOTSTARTED == ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.kleeneState) && (FST == FST && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && S0 == S0))) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.interruptState == FST && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_pguardB.ts_C.autState == S0)))))
							{
								if(((((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.interruptState == FST && 0) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.interruptState == SND && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.guardState == GUARD_NOTSTARTED && (last_event_time.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9)  && ((NONE == NONE && (std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end() || std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), S0) !=shallow_final_choice2B_guard.end())) || (NONE == LEFT && std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end()) || (NONE == RIGHT && std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice2B_guard.autState) !=shallow_final_choice2B_guard.end())))) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.guardState == GUARD_STARTED && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == NONE && (std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end() || std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), S0) !=shallow_final_choice2B_guard.end())) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == LEFT && std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end()) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == RIGHT && std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice2B_guard.autState) !=shallow_final_choice2B_guard.end())))))) || KLEENE_NOTSTARTED == ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.kleeneState) && (FST == FST && (last_event_time.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && S0 == S0))))
								{
									ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.kleeneState = KLEENE_STARTED;
									ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.interruptState = FST;
									ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_pguardB.ts_C.autState = S0;
									if((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.interruptState == FST && (last_event_time.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_pguardB.ts_C.autState == S0)))
									{
										if((last_event_time.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_pguardB.ts_C.autState == S0))
										{
											if(ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_pguardB.ts_C.autState == S0)
											{
												ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_pguardB.ts_C.autState = S0;
												exec = 1;
											
											}
										
										}
									
									}
								
								}else if((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.interruptState == FST && (last_event_time.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_pguardB.ts_C.autState == S0)))
								{
									ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.kleeneState = KLEENE_STARTED;
									if((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.interruptState == FST && (last_event_time.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_pguardB.ts_C.autState == S0)))
									{
										if((last_event_time.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_pguardB.ts_C.autState == S0))
										{
											if(ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_pguardB.ts_C.autState == S0)
											{
												ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_pguardB.ts_C.autState = S0;
												exec = 1;
											
											}
										
										}
									
									}
								
								}
								ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.right_clock_F1.reset_clock();
							}
						
						}
					
					}else if((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.callState == CALLED && (((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.callState == NOTCALLED && ((S0 == S0 && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.ts_E.h <= ts_J.avg - 3 * ts_J.stddev ) || (S0 == S0 && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.ts_E.h > ts_J.avg - 3 * ts_J.stddev ))) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.callState == CALLED && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.ts_E.autState == S0 && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.ts_E.h <= ts_J.avg - 3 * ts_J.stddev ) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.ts_E.autState == S0 && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.ts_E.h > ts_J.avg - 3 * ts_J.stddev )))) || ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.callState == NOTCALLED && (((((FST == FST && 0) || (FST == SND && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.guardState == GUARD_NOTSTARTED && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9)  && ((NONE == NONE && (std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end() || std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), S0) !=shallow_final_choice2B_guard.end())) || (NONE == LEFT && std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end()) || (NONE == RIGHT && std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice2B_guard.autState) !=shallow_final_choice2B_guard.end())))) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.guardState == GUARD_STARTED && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == NONE && (std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end() || std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), S0) !=shallow_final_choice2B_guard.end())) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == LEFT && std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end()) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == RIGHT && std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice2B_guard.autState) !=shallow_final_choice2B_guard.end())))))) || KLEENE_NOTSTARTED == ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.kleeneState) && (FST == FST && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && S0 == S0))) || (FST == FST && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && S0 == S0)))) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.callState == CALLED && (((((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.interruptState == FST && 0) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.interruptState == SND && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.guardState == GUARD_NOTSTARTED && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9)  && ((NONE == NONE && (std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end() || std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), S0) !=shallow_final_choice2B_guard.end())) || (NONE == LEFT && std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end()) || (NONE == RIGHT && std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice2B_guard.autState) !=shallow_final_choice2B_guard.end())))) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.guardState == GUARD_STARTED && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == NONE && (std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end() || std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), S0) !=shallow_final_choice2B_guard.end())) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == LEFT && std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end()) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == RIGHT && std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice2B_guard.autState) !=shallow_final_choice2B_guard.end())))))) || KLEENE_NOTSTARTED == ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.kleeneState) && (FST == FST && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && S0 == S0))) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.interruptState == FST && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_pguardB.ts_C.autState == S0))))))))
					{
						if(((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.callState == NOTCALLED && ((S0 == S0 && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.ts_E.h <= ts_J.avg - 3 * ts_J.stddev ) || (S0 == S0 && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.ts_E.h > ts_J.avg - 3 * ts_J.stddev ))) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.callState == CALLED && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.ts_E.autState == S0 && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.ts_E.h <= ts_J.avg - 3 * ts_J.stddev ) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.ts_E.autState == S0 && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.ts_E.h > ts_J.avg - 3 * ts_J.stddev )))))
						{
							if((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.callState == NOTCALLED && ((S0 == S0 && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.ts_E.h <= ts_J.avg - 3 * ts_J.stddev ) || (S0 == S0 && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.ts_E.h > ts_J.avg - 3 * ts_J.stddev ))))
							{
								ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.callState = CALLED;
								ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.ts_E.autState = S0;
								ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.ts_E.h.reset_clock();
								if((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.ts_E.autState == S0 && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.ts_E.h <= ts_J.avg - 3 * ts_J.stddev ))
								{
									Alert(1);ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.ts_E.autState = S0;
									exec = 1;
								
								}else if((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.ts_E.autState == S0 && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.ts_E.h > ts_J.avg - 3 * ts_J.stddev ))
								{
									ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.ts_E.h.reset_clock();ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.ts_E.autState = S0;
									exec = 1;
								
								}
								ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.left_clock_F2.reset_clock();
							}else if((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.callState == CALLED && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.ts_E.autState == S0 && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.ts_E.h <= ts_J.avg - 3 * ts_J.stddev ) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.ts_E.autState == S0 && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.ts_E.h > ts_J.avg - 3 * ts_J.stddev ))))
							{
								if((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.ts_E.autState == S0 && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.ts_E.h <= ts_J.avg - 3 * ts_J.stddev ))
								{
									Alert(1);ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.ts_E.autState = S0;
									exec = 1;
								
								}else if((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.ts_E.autState == S0 && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.ts_E.h > ts_J.avg - 3 * ts_J.stddev ))
								{
									ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.ts_E.h.reset_clock();ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F2.ts_E.autState = S0;
									exec = 1;
								
								}
								ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.left_clock_F2.reset_clock();
							}
						
						}
						if(((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.callState == NOTCALLED && (((((FST == FST && 0) || (FST == SND && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.guardState == GUARD_NOTSTARTED && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9)  && ((NONE == NONE && (std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end() || std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), S0) !=shallow_final_choice2B_guard.end())) || (NONE == LEFT && std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end()) || (NONE == RIGHT && std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice2B_guard.autState) !=shallow_final_choice2B_guard.end())))) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.guardState == GUARD_STARTED && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == NONE && (std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end() || std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), S0) !=shallow_final_choice2B_guard.end())) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == LEFT && std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end()) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == RIGHT && std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice2B_guard.autState) !=shallow_final_choice2B_guard.end())))))) || KLEENE_NOTSTARTED == ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.kleeneState) && (FST == FST && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && S0 == S0))) || (FST == FST && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && S0 == S0)))) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.callState == CALLED && (((((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.interruptState == FST && 0) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.interruptState == SND && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.guardState == GUARD_NOTSTARTED && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9)  && ((NONE == NONE && (std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end() || std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), S0) !=shallow_final_choice2B_guard.end())) || (NONE == LEFT && std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end()) || (NONE == RIGHT && std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice2B_guard.autState) !=shallow_final_choice2B_guard.end())))) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.guardState == GUARD_STARTED && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == NONE && (std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end() || std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), S0) !=shallow_final_choice2B_guard.end())) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == LEFT && std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end()) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == RIGHT && std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice2B_guard.autState) !=shallow_final_choice2B_guard.end())))))) || KLEENE_NOTSTARTED == ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.kleeneState) && (FST == FST && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && S0 == S0))) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.interruptState == FST && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_pguardB.ts_C.autState == S0))))))
						{
							if((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.callState == NOTCALLED && (((((FST == FST && 0) || (FST == SND && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.guardState == GUARD_NOTSTARTED && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9)  && ((NONE == NONE && (std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end() || std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), S0) !=shallow_final_choice2B_guard.end())) || (NONE == LEFT && std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end()) || (NONE == RIGHT && std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice2B_guard.autState) !=shallow_final_choice2B_guard.end())))) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.guardState == GUARD_STARTED && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == NONE && (std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end() || std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), S0) !=shallow_final_choice2B_guard.end())) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == LEFT && std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end()) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == RIGHT && std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice2B_guard.autState) !=shallow_final_choice2B_guard.end())))))) || KLEENE_NOTSTARTED == ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.kleeneState) && (FST == FST && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && S0 == S0))) || (FST == FST && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && S0 == S0)))))
							{
								ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.callState = CALLED;
								ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.kleeneState = KLEENE_NOTSTARTED;
								ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.interruptState = FST;
								ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_pguardB.ts_C.autState = S0;
								if(((((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.interruptState == FST && 0) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.interruptState == SND && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.guardState == GUARD_NOTSTARTED && (last_event_time.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9)  && ((NONE == NONE && (std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end() || std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), S0) !=shallow_final_choice2B_guard.end())) || (NONE == LEFT && std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end()) || (NONE == RIGHT && std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice2B_guard.autState) !=shallow_final_choice2B_guard.end())))) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.guardState == GUARD_STARTED && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == NONE && (std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end() || std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), S0) !=shallow_final_choice2B_guard.end())) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == LEFT && std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end()) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == RIGHT && std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice2B_guard.autState) !=shallow_final_choice2B_guard.end())))))) || KLEENE_NOTSTARTED == ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.kleeneState) && (FST == FST && (last_event_time.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && S0 == S0))))
								{
									ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.kleeneState = KLEENE_STARTED;
									ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.interruptState = FST;
									ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_pguardB.ts_C.autState = S0;
									if((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.interruptState == FST && (last_event_time.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_pguardB.ts_C.autState == S0)))
									{
										if((last_event_time.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_pguardB.ts_C.autState == S0))
										{
											if(ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_pguardB.ts_C.autState == S0)
											{
												ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_pguardB.ts_C.autState = S0;
												exec = 1;
											
											}
										
										}
									
									}
								
								}else if((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.interruptState == FST && (last_event_time.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_pguardB.ts_C.autState == S0)))
								{
									ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.kleeneState = KLEENE_STARTED;
									if((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.interruptState == FST && (last_event_time.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_pguardB.ts_C.autState == S0)))
									{
										if((last_event_time.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_pguardB.ts_C.autState == S0))
										{
											if(ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_pguardB.ts_C.autState == S0)
											{
												ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_pguardB.ts_C.autState = S0;
												exec = 1;
											
											}
										
										}
									
									}
								
								}
								ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.right_clock_F1.reset_clock();
							}else if((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.callState == CALLED && (((((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.interruptState == FST && 0) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.interruptState == SND && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.guardState == GUARD_NOTSTARTED && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9)  && ((NONE == NONE && (std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end() || std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), S0) !=shallow_final_choice2B_guard.end())) || (NONE == LEFT && std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end()) || (NONE == RIGHT && std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice2B_guard.autState) !=shallow_final_choice2B_guard.end())))) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.guardState == GUARD_STARTED && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == NONE && (std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end() || std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), S0) !=shallow_final_choice2B_guard.end())) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == LEFT && std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end()) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == RIGHT && std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice2B_guard.autState) !=shallow_final_choice2B_guard.end())))))) || KLEENE_NOTSTARTED == ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.kleeneState) && (FST == FST && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && S0 == S0))) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.interruptState == FST && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_pguardB.ts_C.autState == S0)))))
							{
								if(((((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.interruptState == FST && 0) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.interruptState == SND && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.guardState == GUARD_NOTSTARTED && (last_event_time.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9)  && ((NONE == NONE && (std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end() || std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), S0) !=shallow_final_choice2B_guard.end())) || (NONE == LEFT && std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end()) || (NONE == RIGHT && std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice2B_guard.autState) !=shallow_final_choice2B_guard.end())))) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.guardState == GUARD_STARTED && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == NONE && (std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end() || std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), S0) !=shallow_final_choice2B_guard.end())) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == LEFT && std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end()) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == RIGHT && std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice2B_guard.autState) !=shallow_final_choice2B_guard.end())))))) || KLEENE_NOTSTARTED == ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.kleeneState) && (FST == FST && (last_event_time.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && S0 == S0))))
								{
									ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.kleeneState = KLEENE_STARTED;
									ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.interruptState = FST;
									ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_pguardB.ts_C.autState = S0;
									if((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.interruptState == FST && (last_event_time.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_pguardB.ts_C.autState == S0)))
									{
										if((last_event_time.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_pguardB.ts_C.autState == S0))
										{
											if(ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_pguardB.ts_C.autState == S0)
											{
												ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_pguardB.ts_C.autState = S0;
												exec = 1;
											
											}
										
										}
									
									}
								
								}else if((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.interruptState == FST && (last_event_time.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_pguardB.ts_C.autState == S0)))
								{
									ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.kleeneState = KLEENE_STARTED;
									if((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.interruptState == FST && (last_event_time.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_pguardB.ts_C.autState == S0)))
									{
										if((last_event_time.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_pguardB.ts_C.autState == S0))
										{
											if(ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_pguardB.ts_C.autState == S0)
											{
												ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.ts_F1.ts_A.ts_B.ts_pguardB.ts_C.autState = S0;
												exec = 1;
											
											}
										
										}
									
									}
								
								}
								ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice_1choiceJ_guard.ts_J2.ts_F.right_clock_F1.reset_clock();
							}
						
						}
					
					}
				
				}
			
			}else if((ts_J.ts_guardJ.ts_choiceJ_guard.choiceState == NONE && ((NOTCALLED == NOTCALLED && (((NOTCALLED == NOTCALLED && ((S0 == S0 && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F2.ts_E.h <= ts_J.avg - 3 * ts_J.stddev ) || (S0 == S0 && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F2.ts_E.h > ts_J.avg - 3 * ts_J.stddev ))) || (NOTCALLED == CALLED && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F2.ts_E.autState == S0 && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F2.ts_E.h <= ts_J.avg - 3 * ts_J.stddev ) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F2.ts_E.autState == S0 && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F2.ts_E.h > ts_J.avg - 3 * ts_J.stddev )))) || ((NOTCALLED == NOTCALLED && (((((FST == FST && 0) || (FST == SND && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.guardState == GUARD_NOTSTARTED && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9)  && ((NONE == NONE && (std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end() || std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), S0) !=shallow_final_choice2B_guard.end())) || (NONE == LEFT && std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end()) || (NONE == RIGHT && std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice2B_guard.autState) !=shallow_final_choice2B_guard.end())))) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.guardState == GUARD_STARTED && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == NONE && (std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end() || std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), S0) !=shallow_final_choice2B_guard.end())) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == LEFT && std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end()) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == RIGHT && std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice2B_guard.autState) !=shallow_final_choice2B_guard.end())))))) || KLEENE_NOTSTARTED == ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.kleeneState) && (FST == FST && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && S0 == S0))) || (FST == FST && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && S0 == S0)))) || (NOTCALLED == CALLED && (((((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.interruptState == FST && 0) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.interruptState == SND && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.guardState == GUARD_NOTSTARTED && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9)  && ((NONE == NONE && (std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end() || std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), S0) !=shallow_final_choice2B_guard.end())) || (NONE == LEFT && std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end()) || (NONE == RIGHT && std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice2B_guard.autState) !=shallow_final_choice2B_guard.end())))) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.guardState == GUARD_STARTED && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == NONE && (std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end() || std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), S0) !=shallow_final_choice2B_guard.end())) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == LEFT && std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end()) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == RIGHT && std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice2B_guard.autState) !=shallow_final_choice2B_guard.end())))))) || KLEENE_NOTSTARTED == ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.kleeneState) && (FST == FST && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && S0 == S0))) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.interruptState == FST && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_pguardB.ts_C.autState == S0))))))) || (NOTCALLED == CALLED && (((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F2.callState == NOTCALLED && ((S0 == S0 && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F2.ts_E.h <= ts_J.avg - 3 * ts_J.stddev ) || (S0 == S0 && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F2.ts_E.h > ts_J.avg - 3 * ts_J.stddev ))) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F2.callState == CALLED && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F2.ts_E.autState == S0 && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F2.ts_E.h <= ts_J.avg - 3 * ts_J.stddev ) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F2.ts_E.autState == S0 && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F2.ts_E.h > ts_J.avg - 3 * ts_J.stddev )))) || ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.callState == NOTCALLED && (((((FST == FST && 0) || (FST == SND && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.guardState == GUARD_NOTSTARTED && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9)  && ((NONE == NONE && (std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end() || std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), S0) !=shallow_final_choice2B_guard.end())) || (NONE == LEFT && std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end()) || (NONE == RIGHT && std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice2B_guard.autState) !=shallow_final_choice2B_guard.end())))) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.guardState == GUARD_STARTED && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == NONE && (std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end() || std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), S0) !=shallow_final_choice2B_guard.end())) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == LEFT && std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end()) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == RIGHT && std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice2B_guard.autState) !=shallow_final_choice2B_guard.end())))))) || KLEENE_NOTSTARTED == ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.kleeneState) && (FST == FST && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && S0 == S0))) || (FST == FST && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && S0 == S0)))) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.callState == CALLED && (((((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.interruptState == FST && 0) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.interruptState == SND && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.guardState == GUARD_NOTSTARTED && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9)  && ((NONE == NONE && (std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end() || std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), S0) !=shallow_final_choice2B_guard.end())) || (NONE == LEFT && std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end()) || (NONE == RIGHT && std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice2B_guard.autState) !=shallow_final_choice2B_guard.end())))) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.guardState == GUARD_STARTED && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == NONE && (std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end() || std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), S0) !=shallow_final_choice2B_guard.end())) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == LEFT && std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end()) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == RIGHT && std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice2B_guard.autState) !=shallow_final_choice2B_guard.end())))))) || KLEENE_NOTSTARTED == ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.kleeneState) && (FST == FST && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && S0 == S0))) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.interruptState == FST && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_pguardB.ts_C.autState == S0))))))))))
			{
				ts_J.ts_guardJ.ts_choiceJ_guard.choiceState = RIGHT;
				ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.callState = NOTCALLED;
				if((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.callState == NOTCALLED && (((NOTCALLED == NOTCALLED && ((S0 == S0 && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F2.ts_E.h <= ts_J.avg - 3 * ts_J.stddev ) || (S0 == S0 && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F2.ts_E.h > ts_J.avg - 3 * ts_J.stddev ))) || (NOTCALLED == CALLED && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F2.ts_E.autState == S0 && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F2.ts_E.h <= ts_J.avg - 3 * ts_J.stddev ) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F2.ts_E.autState == S0 && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F2.ts_E.h > ts_J.avg - 3 * ts_J.stddev )))) || ((NOTCALLED == NOTCALLED && (((((FST == FST && 0) || (FST == SND && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.guardState == GUARD_NOTSTARTED && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9)  && ((NONE == NONE && (std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end() || std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), S0) !=shallow_final_choice2B_guard.end())) || (NONE == LEFT && std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end()) || (NONE == RIGHT && std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice2B_guard.autState) !=shallow_final_choice2B_guard.end())))) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.guardState == GUARD_STARTED && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == NONE && (std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end() || std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), S0) !=shallow_final_choice2B_guard.end())) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == LEFT && std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end()) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == RIGHT && std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice2B_guard.autState) !=shallow_final_choice2B_guard.end())))))) || KLEENE_NOTSTARTED == ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.kleeneState) && (FST == FST && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && S0 == S0))) || (FST == FST && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && S0 == S0)))) || (NOTCALLED == CALLED && (((((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.interruptState == FST && 0) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.interruptState == SND && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.guardState == GUARD_NOTSTARTED && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9)  && ((NONE == NONE && (std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end() || std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), S0) !=shallow_final_choice2B_guard.end())) || (NONE == LEFT && std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end()) || (NONE == RIGHT && std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice2B_guard.autState) !=shallow_final_choice2B_guard.end())))) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.guardState == GUARD_STARTED && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == NONE && (std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end() || std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), S0) !=shallow_final_choice2B_guard.end())) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == LEFT && std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end()) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == RIGHT && std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice2B_guard.autState) !=shallow_final_choice2B_guard.end())))))) || KLEENE_NOTSTARTED == ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.kleeneState) && (FST == FST && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && S0 == S0))) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.interruptState == FST && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_pguardB.ts_C.autState == S0))))))))
				{
					ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.callState = CALLED;
					ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.right_clock_F1.reset_clock();
					ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.left_clock_F2.reset_clock();
					ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F2.callState = NOTCALLED;
					ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.callState = NOTCALLED;
					if(((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F2.callState == NOTCALLED && ((S0 == S0 && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F2.ts_E.h <= ts_J.avg - 3 * ts_J.stddev ) || (S0 == S0 && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F2.ts_E.h > ts_J.avg - 3 * ts_J.stddev ))) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F2.callState == CALLED && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F2.ts_E.autState == S0 && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F2.ts_E.h <= ts_J.avg - 3 * ts_J.stddev ) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F2.ts_E.autState == S0 && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F2.ts_E.h > ts_J.avg - 3 * ts_J.stddev )))))
					{
						if((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F2.callState == NOTCALLED && ((S0 == S0 && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F2.ts_E.h <= ts_J.avg - 3 * ts_J.stddev ) || (S0 == S0 && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F2.ts_E.h > ts_J.avg - 3 * ts_J.stddev ))))
						{
							ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F2.callState = CALLED;
							ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F2.ts_E.autState = S0;
							ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F2.ts_E.h.reset_clock();
							if((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F2.ts_E.autState == S0 && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F2.ts_E.h <= ts_J.avg - 3 * ts_J.stddev ))
							{
								Alert(1);ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F2.ts_E.autState = S0;
								exec = 1;
							
							}else if((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F2.ts_E.autState == S0 && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F2.ts_E.h > ts_J.avg - 3 * ts_J.stddev ))
							{
								ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F2.ts_E.h.reset_clock();ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F2.ts_E.autState = S0;
								exec = 1;
							
							}
							ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.left_clock_F2.reset_clock();
						}else if((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F2.callState == CALLED && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F2.ts_E.autState == S0 && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F2.ts_E.h <= ts_J.avg - 3 * ts_J.stddev ) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F2.ts_E.autState == S0 && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F2.ts_E.h > ts_J.avg - 3 * ts_J.stddev ))))
						{
							if((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F2.ts_E.autState == S0 && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F2.ts_E.h <= ts_J.avg - 3 * ts_J.stddev ))
							{
								Alert(1);ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F2.ts_E.autState = S0;
								exec = 1;
							
							}else if((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F2.ts_E.autState == S0 && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F2.ts_E.h > ts_J.avg - 3 * ts_J.stddev ))
							{
								ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F2.ts_E.h.reset_clock();ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F2.ts_E.autState = S0;
								exec = 1;
							
							}
							ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.left_clock_F2.reset_clock();
						}
					
					}
					if(((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.callState == NOTCALLED && (((((FST == FST && 0) || (FST == SND && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.guardState == GUARD_NOTSTARTED && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9)  && ((NONE == NONE && (std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end() || std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), S0) !=shallow_final_choice2B_guard.end())) || (NONE == LEFT && std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end()) || (NONE == RIGHT && std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice2B_guard.autState) !=shallow_final_choice2B_guard.end())))) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.guardState == GUARD_STARTED && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == NONE && (std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end() || std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), S0) !=shallow_final_choice2B_guard.end())) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == LEFT && std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end()) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == RIGHT && std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice2B_guard.autState) !=shallow_final_choice2B_guard.end())))))) || KLEENE_NOTSTARTED == ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.kleeneState) && (FST == FST && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && S0 == S0))) || (FST == FST && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && S0 == S0)))) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.callState == CALLED && (((((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.interruptState == FST && 0) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.interruptState == SND && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.guardState == GUARD_NOTSTARTED && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9)  && ((NONE == NONE && (std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end() || std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), S0) !=shallow_final_choice2B_guard.end())) || (NONE == LEFT && std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end()) || (NONE == RIGHT && std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice2B_guard.autState) !=shallow_final_choice2B_guard.end())))) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.guardState == GUARD_STARTED && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == NONE && (std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end() || std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), S0) !=shallow_final_choice2B_guard.end())) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == LEFT && std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end()) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == RIGHT && std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice2B_guard.autState) !=shallow_final_choice2B_guard.end())))))) || KLEENE_NOTSTARTED == ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.kleeneState) && (FST == FST && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && S0 == S0))) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.interruptState == FST && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_pguardB.ts_C.autState == S0))))))
					{
						if((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.callState == NOTCALLED && (((((FST == FST && 0) || (FST == SND && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.guardState == GUARD_NOTSTARTED && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9)  && ((NONE == NONE && (std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end() || std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), S0) !=shallow_final_choice2B_guard.end())) || (NONE == LEFT && std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end()) || (NONE == RIGHT && std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice2B_guard.autState) !=shallow_final_choice2B_guard.end())))) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.guardState == GUARD_STARTED && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == NONE && (std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end() || std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), S0) !=shallow_final_choice2B_guard.end())) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == LEFT && std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end()) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == RIGHT && std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice2B_guard.autState) !=shallow_final_choice2B_guard.end())))))) || KLEENE_NOTSTARTED == ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.kleeneState) && (FST == FST && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && S0 == S0))) || (FST == FST && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && S0 == S0)))))
						{
							ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.callState = CALLED;
							ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.kleeneState = KLEENE_NOTSTARTED;
							ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.interruptState = FST;
							ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_pguardB.ts_C.autState = S0;
							if(((((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.interruptState == FST && 0) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.interruptState == SND && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.guardState == GUARD_NOTSTARTED && (last_event_time.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9)  && ((NONE == NONE && (std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end() || std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), S0) !=shallow_final_choice2B_guard.end())) || (NONE == LEFT && std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end()) || (NONE == RIGHT && std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice2B_guard.autState) !=shallow_final_choice2B_guard.end())))) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.guardState == GUARD_STARTED && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == NONE && (std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end() || std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), S0) !=shallow_final_choice2B_guard.end())) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == LEFT && std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end()) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == RIGHT && std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice2B_guard.autState) !=shallow_final_choice2B_guard.end())))))) || KLEENE_NOTSTARTED == ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.kleeneState) && (FST == FST && (last_event_time.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && S0 == S0))))
							{
								ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.kleeneState = KLEENE_STARTED;
								ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.interruptState = FST;
								ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_pguardB.ts_C.autState = S0;
								if((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.interruptState == FST && (last_event_time.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_pguardB.ts_C.autState == S0)))
								{
									if((last_event_time.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_pguardB.ts_C.autState == S0))
									{
										if(ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_pguardB.ts_C.autState == S0)
										{
											ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_pguardB.ts_C.autState = S0;
											exec = 1;
										
										}
									
									}
								
								}
							
							}else if((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.interruptState == FST && (last_event_time.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_pguardB.ts_C.autState == S0)))
							{
								ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.kleeneState = KLEENE_STARTED;
								if((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.interruptState == FST && (last_event_time.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_pguardB.ts_C.autState == S0)))
								{
									if((last_event_time.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_pguardB.ts_C.autState == S0))
									{
										if(ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_pguardB.ts_C.autState == S0)
										{
											ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_pguardB.ts_C.autState = S0;
											exec = 1;
										
										}
									
									}
								
								}
							
							}
							ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.right_clock_F1.reset_clock();
						}else if((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.callState == CALLED && (((((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.interruptState == FST && 0) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.interruptState == SND && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.guardState == GUARD_NOTSTARTED && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9)  && ((NONE == NONE && (std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end() || std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), S0) !=shallow_final_choice2B_guard.end())) || (NONE == LEFT && std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end()) || (NONE == RIGHT && std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice2B_guard.autState) !=shallow_final_choice2B_guard.end())))) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.guardState == GUARD_STARTED && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == NONE && (std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end() || std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), S0) !=shallow_final_choice2B_guard.end())) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == LEFT && std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end()) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == RIGHT && std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice2B_guard.autState) !=shallow_final_choice2B_guard.end())))))) || KLEENE_NOTSTARTED == ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.kleeneState) && (FST == FST && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && S0 == S0))) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.interruptState == FST && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_pguardB.ts_C.autState == S0)))))
						{
							if(((((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.interruptState == FST && 0) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.interruptState == SND && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.guardState == GUARD_NOTSTARTED && (last_event_time.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9)  && ((NONE == NONE && (std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end() || std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), S0) !=shallow_final_choice2B_guard.end())) || (NONE == LEFT && std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end()) || (NONE == RIGHT && std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice2B_guard.autState) !=shallow_final_choice2B_guard.end())))) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.guardState == GUARD_STARTED && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == NONE && (std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end() || std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), S0) !=shallow_final_choice2B_guard.end())) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == LEFT && std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end()) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == RIGHT && std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice2B_guard.autState) !=shallow_final_choice2B_guard.end())))))) || KLEENE_NOTSTARTED == ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.kleeneState) && (FST == FST && (last_event_time.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && S0 == S0))))
							{
								ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.kleeneState = KLEENE_STARTED;
								ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.interruptState = FST;
								ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_pguardB.ts_C.autState = S0;
								if((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.interruptState == FST && (last_event_time.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_pguardB.ts_C.autState == S0)))
								{
									if((last_event_time.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_pguardB.ts_C.autState == S0))
									{
										if(ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_pguardB.ts_C.autState == S0)
										{
											ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_pguardB.ts_C.autState = S0;
											exec = 1;
										
										}
									
									}
								
								}
							
							}else if((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.interruptState == FST && (last_event_time.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_pguardB.ts_C.autState == S0)))
							{
								ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.kleeneState = KLEENE_STARTED;
								if((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.interruptState == FST && (last_event_time.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_pguardB.ts_C.autState == S0)))
								{
									if((last_event_time.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_pguardB.ts_C.autState == S0))
									{
										if(ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_pguardB.ts_C.autState == S0)
										{
											ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_pguardB.ts_C.autState = S0;
											exec = 1;
										
										}
									
									}
								
								}
							
							}
							ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.right_clock_F1.reset_clock();
						}
					
					}
				
				}else if((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.callState == CALLED && (((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F2.callState == NOTCALLED && ((S0 == S0 && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F2.ts_E.h <= ts_J.avg - 3 * ts_J.stddev ) || (S0 == S0 && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F2.ts_E.h > ts_J.avg - 3 * ts_J.stddev ))) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F2.callState == CALLED && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F2.ts_E.autState == S0 && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F2.ts_E.h <= ts_J.avg - 3 * ts_J.stddev ) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F2.ts_E.autState == S0 && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F2.ts_E.h > ts_J.avg - 3 * ts_J.stddev )))) || ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.callState == NOTCALLED && (((((FST == FST && 0) || (FST == SND && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.guardState == GUARD_NOTSTARTED && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9)  && ((NONE == NONE && (std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end() || std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), S0) !=shallow_final_choice2B_guard.end())) || (NONE == LEFT && std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end()) || (NONE == RIGHT && std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice2B_guard.autState) !=shallow_final_choice2B_guard.end())))) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.guardState == GUARD_STARTED && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == NONE && (std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end() || std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), S0) !=shallow_final_choice2B_guard.end())) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == LEFT && std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end()) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == RIGHT && std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice2B_guard.autState) !=shallow_final_choice2B_guard.end())))))) || KLEENE_NOTSTARTED == ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.kleeneState) && (FST == FST && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && S0 == S0))) || (FST == FST && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && S0 == S0)))) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.callState == CALLED && (((((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.interruptState == FST && 0) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.interruptState == SND && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.guardState == GUARD_NOTSTARTED && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9)  && ((NONE == NONE && (std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end() || std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), S0) !=shallow_final_choice2B_guard.end())) || (NONE == LEFT && std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end()) || (NONE == RIGHT && std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice2B_guard.autState) !=shallow_final_choice2B_guard.end())))) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.guardState == GUARD_STARTED && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == NONE && (std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end() || std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), S0) !=shallow_final_choice2B_guard.end())) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == LEFT && std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end()) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == RIGHT && std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice2B_guard.autState) !=shallow_final_choice2B_guard.end())))))) || KLEENE_NOTSTARTED == ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.kleeneState) && (FST == FST && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && S0 == S0))) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.interruptState == FST && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_pguardB.ts_C.autState == S0))))))))
				{
					if(((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F2.callState == NOTCALLED && ((S0 == S0 && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F2.ts_E.h <= ts_J.avg - 3 * ts_J.stddev ) || (S0 == S0 && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F2.ts_E.h > ts_J.avg - 3 * ts_J.stddev ))) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F2.callState == CALLED && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F2.ts_E.autState == S0 && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F2.ts_E.h <= ts_J.avg - 3 * ts_J.stddev ) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F2.ts_E.autState == S0 && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F2.ts_E.h > ts_J.avg - 3 * ts_J.stddev )))))
					{
						if((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F2.callState == NOTCALLED && ((S0 == S0 && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F2.ts_E.h <= ts_J.avg - 3 * ts_J.stddev ) || (S0 == S0 && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F2.ts_E.h > ts_J.avg - 3 * ts_J.stddev ))))
						{
							ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F2.callState = CALLED;
							ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F2.ts_E.autState = S0;
							ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F2.ts_E.h.reset_clock();
							if((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F2.ts_E.autState == S0 && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F2.ts_E.h <= ts_J.avg - 3 * ts_J.stddev ))
							{
								Alert(1);ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F2.ts_E.autState = S0;
								exec = 1;
							
							}else if((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F2.ts_E.autState == S0 && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F2.ts_E.h > ts_J.avg - 3 * ts_J.stddev ))
							{
								ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F2.ts_E.h.reset_clock();ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F2.ts_E.autState = S0;
								exec = 1;
							
							}
							ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.left_clock_F2.reset_clock();
						}else if((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F2.callState == CALLED && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F2.ts_E.autState == S0 && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F2.ts_E.h <= ts_J.avg - 3 * ts_J.stddev ) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F2.ts_E.autState == S0 && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F2.ts_E.h > ts_J.avg - 3 * ts_J.stddev ))))
						{
							if((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F2.ts_E.autState == S0 && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F2.ts_E.h <= ts_J.avg - 3 * ts_J.stddev ))
							{
								Alert(1);ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F2.ts_E.autState = S0;
								exec = 1;
							
							}else if((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F2.ts_E.autState == S0 && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F2.ts_E.h > ts_J.avg - 3 * ts_J.stddev ))
							{
								ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F2.ts_E.h.reset_clock();ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F2.ts_E.autState = S0;
								exec = 1;
							
							}
							ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.left_clock_F2.reset_clock();
						}
					
					}
					if(((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.callState == NOTCALLED && (((((FST == FST && 0) || (FST == SND && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.guardState == GUARD_NOTSTARTED && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9)  && ((NONE == NONE && (std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end() || std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), S0) !=shallow_final_choice2B_guard.end())) || (NONE == LEFT && std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end()) || (NONE == RIGHT && std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice2B_guard.autState) !=shallow_final_choice2B_guard.end())))) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.guardState == GUARD_STARTED && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == NONE && (std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end() || std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), S0) !=shallow_final_choice2B_guard.end())) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == LEFT && std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end()) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == RIGHT && std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice2B_guard.autState) !=shallow_final_choice2B_guard.end())))))) || KLEENE_NOTSTARTED == ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.kleeneState) && (FST == FST && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && S0 == S0))) || (FST == FST && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && S0 == S0)))) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.callState == CALLED && (((((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.interruptState == FST && 0) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.interruptState == SND && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.guardState == GUARD_NOTSTARTED && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9)  && ((NONE == NONE && (std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end() || std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), S0) !=shallow_final_choice2B_guard.end())) || (NONE == LEFT && std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end()) || (NONE == RIGHT && std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice2B_guard.autState) !=shallow_final_choice2B_guard.end())))) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.guardState == GUARD_STARTED && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == NONE && (std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end() || std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), S0) !=shallow_final_choice2B_guard.end())) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == LEFT && std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end()) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == RIGHT && std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice2B_guard.autState) !=shallow_final_choice2B_guard.end())))))) || KLEENE_NOTSTARTED == ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.kleeneState) && (FST == FST && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && S0 == S0))) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.interruptState == FST && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_pguardB.ts_C.autState == S0))))))
					{
						if((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.callState == NOTCALLED && (((((FST == FST && 0) || (FST == SND && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.guardState == GUARD_NOTSTARTED && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9)  && ((NONE == NONE && (std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end() || std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), S0) !=shallow_final_choice2B_guard.end())) || (NONE == LEFT && std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end()) || (NONE == RIGHT && std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice2B_guard.autState) !=shallow_final_choice2B_guard.end())))) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.guardState == GUARD_STARTED && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == NONE && (std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end() || std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), S0) !=shallow_final_choice2B_guard.end())) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == LEFT && std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end()) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == RIGHT && std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice2B_guard.autState) !=shallow_final_choice2B_guard.end())))))) || KLEENE_NOTSTARTED == ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.kleeneState) && (FST == FST && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && S0 == S0))) || (FST == FST && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && S0 == S0)))))
						{
							ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.callState = CALLED;
							ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.kleeneState = KLEENE_NOTSTARTED;
							ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.interruptState = FST;
							ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_pguardB.ts_C.autState = S0;
							if(((((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.interruptState == FST && 0) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.interruptState == SND && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.guardState == GUARD_NOTSTARTED && (last_event_time.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9)  && ((NONE == NONE && (std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end() || std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), S0) !=shallow_final_choice2B_guard.end())) || (NONE == LEFT && std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end()) || (NONE == RIGHT && std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice2B_guard.autState) !=shallow_final_choice2B_guard.end())))) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.guardState == GUARD_STARTED && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == NONE && (std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end() || std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), S0) !=shallow_final_choice2B_guard.end())) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == LEFT && std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end()) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == RIGHT && std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice2B_guard.autState) !=shallow_final_choice2B_guard.end())))))) || KLEENE_NOTSTARTED == ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.kleeneState) && (FST == FST && (last_event_time.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && S0 == S0))))
							{
								ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.kleeneState = KLEENE_STARTED;
								ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.interruptState = FST;
								ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_pguardB.ts_C.autState = S0;
								if((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.interruptState == FST && (last_event_time.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_pguardB.ts_C.autState == S0)))
								{
									if((last_event_time.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_pguardB.ts_C.autState == S0))
									{
										if(ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_pguardB.ts_C.autState == S0)
										{
											ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_pguardB.ts_C.autState = S0;
											exec = 1;
										
										}
									
									}
								
								}
							
							}else if((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.interruptState == FST && (last_event_time.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_pguardB.ts_C.autState == S0)))
							{
								ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.kleeneState = KLEENE_STARTED;
								if((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.interruptState == FST && (last_event_time.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_pguardB.ts_C.autState == S0)))
								{
									if((last_event_time.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_pguardB.ts_C.autState == S0))
									{
										if(ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_pguardB.ts_C.autState == S0)
										{
											ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_pguardB.ts_C.autState = S0;
											exec = 1;
										
										}
									
									}
								
								}
							
							}
							ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.right_clock_F1.reset_clock();
						}else if((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.callState == CALLED && (((((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.interruptState == FST && 0) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.interruptState == SND && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.guardState == GUARD_NOTSTARTED && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9)  && ((NONE == NONE && (std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end() || std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), S0) !=shallow_final_choice2B_guard.end())) || (NONE == LEFT && std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end()) || (NONE == RIGHT && std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice2B_guard.autState) !=shallow_final_choice2B_guard.end())))) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.guardState == GUARD_STARTED && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == NONE && (std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end() || std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), S0) !=shallow_final_choice2B_guard.end())) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == LEFT && std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end()) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == RIGHT && std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice2B_guard.autState) !=shallow_final_choice2B_guard.end())))))) || KLEENE_NOTSTARTED == ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.kleeneState) && (FST == FST && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && S0 == S0))) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.interruptState == FST && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_pguardB.ts_C.autState == S0)))))
						{
							if(((((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.interruptState == FST && 0) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.interruptState == SND && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.guardState == GUARD_NOTSTARTED && (last_event_time.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9)  && ((NONE == NONE && (std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end() || std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), S0) !=shallow_final_choice2B_guard.end())) || (NONE == LEFT && std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end()) || (NONE == RIGHT && std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice2B_guard.autState) !=shallow_final_choice2B_guard.end())))) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.guardState == GUARD_STARTED && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == NONE && (std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end() || std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), S0) !=shallow_final_choice2B_guard.end())) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == LEFT && std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end()) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == RIGHT && std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice2B_guard.autState) !=shallow_final_choice2B_guard.end())))))) || KLEENE_NOTSTARTED == ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.kleeneState) && (FST == FST && (last_event_time.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && S0 == S0))))
							{
								ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.kleeneState = KLEENE_STARTED;
								ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.interruptState = FST;
								ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_pguardB.ts_C.autState = S0;
								if((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.interruptState == FST && (last_event_time.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_pguardB.ts_C.autState == S0)))
								{
									if((last_event_time.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_pguardB.ts_C.autState == S0))
									{
										if(ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_pguardB.ts_C.autState == S0)
										{
											ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_pguardB.ts_C.autState = S0;
											exec = 1;
										
										}
									
									}
								
								}
							
							}else if((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.interruptState == FST && (last_event_time.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_pguardB.ts_C.autState == S0)))
							{
								ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.kleeneState = KLEENE_STARTED;
								if((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.interruptState == FST && (last_event_time.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_pguardB.ts_C.autState == S0)))
								{
									if((last_event_time.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_pguardB.ts_C.autState == S0))
									{
										if(ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_pguardB.ts_C.autState == S0)
										{
											ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_pguardB.ts_C.autState = S0;
											exec = 1;
										
										}
									
									}
								
								}
							
							}
							ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.right_clock_F1.reset_clock();
						}
					
					}
				
				}
			
			}else if((ts_J.ts_guardJ.ts_choiceJ_guard.choiceState == RIGHT && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.callState == NOTCALLED && (((NOTCALLED == NOTCALLED && ((S0 == S0 && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F2.ts_E.h <= ts_J.avg - 3 * ts_J.stddev ) || (S0 == S0 && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F2.ts_E.h > ts_J.avg - 3 * ts_J.stddev ))) || (NOTCALLED == CALLED && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F2.ts_E.autState == S0 && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F2.ts_E.h <= ts_J.avg - 3 * ts_J.stddev ) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F2.ts_E.autState == S0 && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F2.ts_E.h > ts_J.avg - 3 * ts_J.stddev )))) || ((NOTCALLED == NOTCALLED && (((((FST == FST && 0) || (FST == SND && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.guardState == GUARD_NOTSTARTED && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9)  && ((NONE == NONE && (std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end() || std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), S0) !=shallow_final_choice2B_guard.end())) || (NONE == LEFT && std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end()) || (NONE == RIGHT && std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice2B_guard.autState) !=shallow_final_choice2B_guard.end())))) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.guardState == GUARD_STARTED && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == NONE && (std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end() || std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), S0) !=shallow_final_choice2B_guard.end())) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == LEFT && std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end()) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == RIGHT && std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice2B_guard.autState) !=shallow_final_choice2B_guard.end())))))) || KLEENE_NOTSTARTED == ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.kleeneState) && (FST == FST && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && S0 == S0))) || (FST == FST && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && S0 == S0)))) || (NOTCALLED == CALLED && (((((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.interruptState == FST && 0) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.interruptState == SND && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.guardState == GUARD_NOTSTARTED && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9)  && ((NONE == NONE && (std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end() || std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), S0) !=shallow_final_choice2B_guard.end())) || (NONE == LEFT && std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end()) || (NONE == RIGHT && std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice2B_guard.autState) !=shallow_final_choice2B_guard.end())))) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.guardState == GUARD_STARTED && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == NONE && (std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end() || std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), S0) !=shallow_final_choice2B_guard.end())) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == LEFT && std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end()) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == RIGHT && std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice2B_guard.autState) !=shallow_final_choice2B_guard.end())))))) || KLEENE_NOTSTARTED == ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.kleeneState) && (FST == FST && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && S0 == S0))) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.interruptState == FST && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_pguardB.ts_C.autState == S0))))))) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.callState == CALLED && (((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F2.callState == NOTCALLED && ((S0 == S0 && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F2.ts_E.h <= ts_J.avg - 3 * ts_J.stddev ) || (S0 == S0 && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F2.ts_E.h > ts_J.avg - 3 * ts_J.stddev ))) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F2.callState == CALLED && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F2.ts_E.autState == S0 && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F2.ts_E.h <= ts_J.avg - 3 * ts_J.stddev ) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F2.ts_E.autState == S0 && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F2.ts_E.h > ts_J.avg - 3 * ts_J.stddev )))) || ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.callState == NOTCALLED && (((((FST == FST && 0) || (FST == SND && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.guardState == GUARD_NOTSTARTED && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9)  && ((NONE == NONE && (std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end() || std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), S0) !=shallow_final_choice2B_guard.end())) || (NONE == LEFT && std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end()) || (NONE == RIGHT && std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice2B_guard.autState) !=shallow_final_choice2B_guard.end())))) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.guardState == GUARD_STARTED && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == NONE && (std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end() || std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), S0) !=shallow_final_choice2B_guard.end())) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == LEFT && std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end()) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == RIGHT && std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice2B_guard.autState) !=shallow_final_choice2B_guard.end())))))) || KLEENE_NOTSTARTED == ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.kleeneState) && (FST == FST && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && S0 == S0))) || (FST == FST && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && S0 == S0)))) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.callState == CALLED && (((((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.interruptState == FST && 0) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.interruptState == SND && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.guardState == GUARD_NOTSTARTED && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9)  && ((NONE == NONE && (std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end() || std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), S0) !=shallow_final_choice2B_guard.end())) || (NONE == LEFT && std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end()) || (NONE == RIGHT && std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice2B_guard.autState) !=shallow_final_choice2B_guard.end())))) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.guardState == GUARD_STARTED && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == NONE && (std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end() || std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), S0) !=shallow_final_choice2B_guard.end())) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == LEFT && std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end()) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == RIGHT && std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice2B_guard.autState) !=shallow_final_choice2B_guard.end())))))) || KLEENE_NOTSTARTED == ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.kleeneState) && (FST == FST && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && S0 == S0))) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.interruptState == FST && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_pguardB.ts_C.autState == S0))))))))))
			{
				if((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.callState == NOTCALLED && (((NOTCALLED == NOTCALLED && ((S0 == S0 && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F2.ts_E.h <= ts_J.avg - 3 * ts_J.stddev ) || (S0 == S0 && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F2.ts_E.h > ts_J.avg - 3 * ts_J.stddev ))) || (NOTCALLED == CALLED && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F2.ts_E.autState == S0 && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F2.ts_E.h <= ts_J.avg - 3 * ts_J.stddev ) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F2.ts_E.autState == S0 && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F2.ts_E.h > ts_J.avg - 3 * ts_J.stddev )))) || ((NOTCALLED == NOTCALLED && (((((FST == FST && 0) || (FST == SND && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.guardState == GUARD_NOTSTARTED && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9)  && ((NONE == NONE && (std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end() || std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), S0) !=shallow_final_choice2B_guard.end())) || (NONE == LEFT && std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end()) || (NONE == RIGHT && std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice2B_guard.autState) !=shallow_final_choice2B_guard.end())))) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.guardState == GUARD_STARTED && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == NONE && (std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end() || std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), S0) !=shallow_final_choice2B_guard.end())) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == LEFT && std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end()) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == RIGHT && std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice2B_guard.autState) !=shallow_final_choice2B_guard.end())))))) || KLEENE_NOTSTARTED == ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.kleeneState) && (FST == FST && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && S0 == S0))) || (FST == FST && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && S0 == S0)))) || (NOTCALLED == CALLED && (((((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.interruptState == FST && 0) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.interruptState == SND && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.guardState == GUARD_NOTSTARTED && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9)  && ((NONE == NONE && (std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end() || std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), S0) !=shallow_final_choice2B_guard.end())) || (NONE == LEFT && std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end()) || (NONE == RIGHT && std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice2B_guard.autState) !=shallow_final_choice2B_guard.end())))) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.guardState == GUARD_STARTED && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == NONE && (std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end() || std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), S0) !=shallow_final_choice2B_guard.end())) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == LEFT && std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end()) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == RIGHT && std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice2B_guard.autState) !=shallow_final_choice2B_guard.end())))))) || KLEENE_NOTSTARTED == ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.kleeneState) && (FST == FST && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && S0 == S0))) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.interruptState == FST && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_pguardB.ts_C.autState == S0))))))))
				{
					ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.callState = CALLED;
					ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.right_clock_F1.reset_clock();
					ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.left_clock_F2.reset_clock();
					ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F2.callState = NOTCALLED;
					ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.callState = NOTCALLED;
					if(((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F2.callState == NOTCALLED && ((S0 == S0 && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F2.ts_E.h <= ts_J.avg - 3 * ts_J.stddev ) || (S0 == S0 && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F2.ts_E.h > ts_J.avg - 3 * ts_J.stddev ))) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F2.callState == CALLED && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F2.ts_E.autState == S0 && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F2.ts_E.h <= ts_J.avg - 3 * ts_J.stddev ) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F2.ts_E.autState == S0 && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F2.ts_E.h > ts_J.avg - 3 * ts_J.stddev )))))
					{
						if((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F2.callState == NOTCALLED && ((S0 == S0 && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F2.ts_E.h <= ts_J.avg - 3 * ts_J.stddev ) || (S0 == S0 && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F2.ts_E.h > ts_J.avg - 3 * ts_J.stddev ))))
						{
							ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F2.callState = CALLED;
							ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F2.ts_E.autState = S0;
							ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F2.ts_E.h.reset_clock();
							if((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F2.ts_E.autState == S0 && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F2.ts_E.h <= ts_J.avg - 3 * ts_J.stddev ))
							{
								Alert(1);ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F2.ts_E.autState = S0;
								exec = 1;
							
							}else if((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F2.ts_E.autState == S0 && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F2.ts_E.h > ts_J.avg - 3 * ts_J.stddev ))
							{
								ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F2.ts_E.h.reset_clock();ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F2.ts_E.autState = S0;
								exec = 1;
							
							}
							ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.left_clock_F2.reset_clock();
						}else if((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F2.callState == CALLED && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F2.ts_E.autState == S0 && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F2.ts_E.h <= ts_J.avg - 3 * ts_J.stddev ) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F2.ts_E.autState == S0 && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F2.ts_E.h > ts_J.avg - 3 * ts_J.stddev ))))
						{
							if((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F2.ts_E.autState == S0 && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F2.ts_E.h <= ts_J.avg - 3 * ts_J.stddev ))
							{
								Alert(1);ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F2.ts_E.autState = S0;
								exec = 1;
							
							}else if((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F2.ts_E.autState == S0 && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F2.ts_E.h > ts_J.avg - 3 * ts_J.stddev ))
							{
								ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F2.ts_E.h.reset_clock();ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F2.ts_E.autState = S0;
								exec = 1;
							
							}
							ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.left_clock_F2.reset_clock();
						}
					
					}
					if(((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.callState == NOTCALLED && (((((FST == FST && 0) || (FST == SND && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.guardState == GUARD_NOTSTARTED && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9)  && ((NONE == NONE && (std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end() || std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), S0) !=shallow_final_choice2B_guard.end())) || (NONE == LEFT && std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end()) || (NONE == RIGHT && std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice2B_guard.autState) !=shallow_final_choice2B_guard.end())))) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.guardState == GUARD_STARTED && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == NONE && (std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end() || std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), S0) !=shallow_final_choice2B_guard.end())) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == LEFT && std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end()) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == RIGHT && std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice2B_guard.autState) !=shallow_final_choice2B_guard.end())))))) || KLEENE_NOTSTARTED == ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.kleeneState) && (FST == FST && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && S0 == S0))) || (FST == FST && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && S0 == S0)))) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.callState == CALLED && (((((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.interruptState == FST && 0) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.interruptState == SND && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.guardState == GUARD_NOTSTARTED && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9)  && ((NONE == NONE && (std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end() || std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), S0) !=shallow_final_choice2B_guard.end())) || (NONE == LEFT && std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end()) || (NONE == RIGHT && std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice2B_guard.autState) !=shallow_final_choice2B_guard.end())))) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.guardState == GUARD_STARTED && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == NONE && (std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end() || std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), S0) !=shallow_final_choice2B_guard.end())) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == LEFT && std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end()) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == RIGHT && std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice2B_guard.autState) !=shallow_final_choice2B_guard.end())))))) || KLEENE_NOTSTARTED == ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.kleeneState) && (FST == FST && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && S0 == S0))) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.interruptState == FST && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_pguardB.ts_C.autState == S0))))))
					{
						if((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.callState == NOTCALLED && (((((FST == FST && 0) || (FST == SND && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.guardState == GUARD_NOTSTARTED && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9)  && ((NONE == NONE && (std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end() || std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), S0) !=shallow_final_choice2B_guard.end())) || (NONE == LEFT && std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end()) || (NONE == RIGHT && std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice2B_guard.autState) !=shallow_final_choice2B_guard.end())))) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.guardState == GUARD_STARTED && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == NONE && (std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end() || std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), S0) !=shallow_final_choice2B_guard.end())) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == LEFT && std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end()) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == RIGHT && std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice2B_guard.autState) !=shallow_final_choice2B_guard.end())))))) || KLEENE_NOTSTARTED == ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.kleeneState) && (FST == FST && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && S0 == S0))) || (FST == FST && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && S0 == S0)))))
						{
							ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.callState = CALLED;
							ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.kleeneState = KLEENE_NOTSTARTED;
							ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.interruptState = FST;
							ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_pguardB.ts_C.autState = S0;
							if(((((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.interruptState == FST && 0) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.interruptState == SND && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.guardState == GUARD_NOTSTARTED && (last_event_time.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9)  && ((NONE == NONE && (std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end() || std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), S0) !=shallow_final_choice2B_guard.end())) || (NONE == LEFT && std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end()) || (NONE == RIGHT && std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice2B_guard.autState) !=shallow_final_choice2B_guard.end())))) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.guardState == GUARD_STARTED && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == NONE && (std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end() || std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), S0) !=shallow_final_choice2B_guard.end())) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == LEFT && std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end()) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == RIGHT && std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice2B_guard.autState) !=shallow_final_choice2B_guard.end())))))) || KLEENE_NOTSTARTED == ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.kleeneState) && (FST == FST && (last_event_time.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && S0 == S0))))
							{
								ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.kleeneState = KLEENE_STARTED;
								ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.interruptState = FST;
								ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_pguardB.ts_C.autState = S0;
								if((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.interruptState == FST && (last_event_time.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_pguardB.ts_C.autState == S0)))
								{
									if((last_event_time.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_pguardB.ts_C.autState == S0))
									{
										if(ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_pguardB.ts_C.autState == S0)
										{
											ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_pguardB.ts_C.autState = S0;
											exec = 1;
										
										}
									
									}
								
								}
							
							}else if((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.interruptState == FST && (last_event_time.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_pguardB.ts_C.autState == S0)))
							{
								ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.kleeneState = KLEENE_STARTED;
								if((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.interruptState == FST && (last_event_time.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_pguardB.ts_C.autState == S0)))
								{
									if((last_event_time.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_pguardB.ts_C.autState == S0))
									{
										if(ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_pguardB.ts_C.autState == S0)
										{
											ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_pguardB.ts_C.autState = S0;
											exec = 1;
										
										}
									
									}
								
								}
							
							}
							ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.right_clock_F1.reset_clock();
						}else if((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.callState == CALLED && (((((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.interruptState == FST && 0) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.interruptState == SND && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.guardState == GUARD_NOTSTARTED && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9)  && ((NONE == NONE && (std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end() || std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), S0) !=shallow_final_choice2B_guard.end())) || (NONE == LEFT && std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end()) || (NONE == RIGHT && std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice2B_guard.autState) !=shallow_final_choice2B_guard.end())))) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.guardState == GUARD_STARTED && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == NONE && (std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end() || std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), S0) !=shallow_final_choice2B_guard.end())) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == LEFT && std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end()) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == RIGHT && std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice2B_guard.autState) !=shallow_final_choice2B_guard.end())))))) || KLEENE_NOTSTARTED == ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.kleeneState) && (FST == FST && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && S0 == S0))) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.interruptState == FST && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_pguardB.ts_C.autState == S0)))))
						{
							if(((((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.interruptState == FST && 0) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.interruptState == SND && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.guardState == GUARD_NOTSTARTED && (last_event_time.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9)  && ((NONE == NONE && (std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end() || std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), S0) !=shallow_final_choice2B_guard.end())) || (NONE == LEFT && std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end()) || (NONE == RIGHT && std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice2B_guard.autState) !=shallow_final_choice2B_guard.end())))) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.guardState == GUARD_STARTED && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == NONE && (std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end() || std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), S0) !=shallow_final_choice2B_guard.end())) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == LEFT && std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end()) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == RIGHT && std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice2B_guard.autState) !=shallow_final_choice2B_guard.end())))))) || KLEENE_NOTSTARTED == ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.kleeneState) && (FST == FST && (last_event_time.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && S0 == S0))))
							{
								ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.kleeneState = KLEENE_STARTED;
								ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.interruptState = FST;
								ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_pguardB.ts_C.autState = S0;
								if((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.interruptState == FST && (last_event_time.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_pguardB.ts_C.autState == S0)))
								{
									if((last_event_time.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_pguardB.ts_C.autState == S0))
									{
										if(ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_pguardB.ts_C.autState == S0)
										{
											ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_pguardB.ts_C.autState = S0;
											exec = 1;
										
										}
									
									}
								
								}
							
							}else if((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.interruptState == FST && (last_event_time.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_pguardB.ts_C.autState == S0)))
							{
								ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.kleeneState = KLEENE_STARTED;
								if((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.interruptState == FST && (last_event_time.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_pguardB.ts_C.autState == S0)))
								{
									if((last_event_time.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_pguardB.ts_C.autState == S0))
									{
										if(ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_pguardB.ts_C.autState == S0)
										{
											ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_pguardB.ts_C.autState = S0;
											exec = 1;
										
										}
									
									}
								
								}
							
							}
							ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.right_clock_F1.reset_clock();
						}
					
					}
				
				}else if((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.callState == CALLED && (((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F2.callState == NOTCALLED && ((S0 == S0 && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F2.ts_E.h <= ts_J.avg - 3 * ts_J.stddev ) || (S0 == S0 && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F2.ts_E.h > ts_J.avg - 3 * ts_J.stddev ))) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F2.callState == CALLED && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F2.ts_E.autState == S0 && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F2.ts_E.h <= ts_J.avg - 3 * ts_J.stddev ) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F2.ts_E.autState == S0 && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F2.ts_E.h > ts_J.avg - 3 * ts_J.stddev )))) || ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.callState == NOTCALLED && (((((FST == FST && 0) || (FST == SND && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.guardState == GUARD_NOTSTARTED && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9)  && ((NONE == NONE && (std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end() || std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), S0) !=shallow_final_choice2B_guard.end())) || (NONE == LEFT && std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end()) || (NONE == RIGHT && std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice2B_guard.autState) !=shallow_final_choice2B_guard.end())))) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.guardState == GUARD_STARTED && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == NONE && (std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end() || std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), S0) !=shallow_final_choice2B_guard.end())) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == LEFT && std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end()) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == RIGHT && std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice2B_guard.autState) !=shallow_final_choice2B_guard.end())))))) || KLEENE_NOTSTARTED == ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.kleeneState) && (FST == FST && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && S0 == S0))) || (FST == FST && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && S0 == S0)))) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.callState == CALLED && (((((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.interruptState == FST && 0) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.interruptState == SND && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.guardState == GUARD_NOTSTARTED && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9)  && ((NONE == NONE && (std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end() || std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), S0) !=shallow_final_choice2B_guard.end())) || (NONE == LEFT && std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end()) || (NONE == RIGHT && std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice2B_guard.autState) !=shallow_final_choice2B_guard.end())))) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.guardState == GUARD_STARTED && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == NONE && (std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end() || std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), S0) !=shallow_final_choice2B_guard.end())) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == LEFT && std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end()) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == RIGHT && std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice2B_guard.autState) !=shallow_final_choice2B_guard.end())))))) || KLEENE_NOTSTARTED == ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.kleeneState) && (FST == FST && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && S0 == S0))) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.interruptState == FST && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_pguardB.ts_C.autState == S0))))))))
				{
					if(((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F2.callState == NOTCALLED && ((S0 == S0 && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F2.ts_E.h <= ts_J.avg - 3 * ts_J.stddev ) || (S0 == S0 && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F2.ts_E.h > ts_J.avg - 3 * ts_J.stddev ))) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F2.callState == CALLED && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F2.ts_E.autState == S0 && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F2.ts_E.h <= ts_J.avg - 3 * ts_J.stddev ) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F2.ts_E.autState == S0 && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F2.ts_E.h > ts_J.avg - 3 * ts_J.stddev )))))
					{
						if((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F2.callState == NOTCALLED && ((S0 == S0 && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F2.ts_E.h <= ts_J.avg - 3 * ts_J.stddev ) || (S0 == S0 && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F2.ts_E.h > ts_J.avg - 3 * ts_J.stddev ))))
						{
							ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F2.callState = CALLED;
							ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F2.ts_E.autState = S0;
							ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F2.ts_E.h.reset_clock();
							if((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F2.ts_E.autState == S0 && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F2.ts_E.h <= ts_J.avg - 3 * ts_J.stddev ))
							{
								Alert(1);ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F2.ts_E.autState = S0;
								exec = 1;
							
							}else if((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F2.ts_E.autState == S0 && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F2.ts_E.h > ts_J.avg - 3 * ts_J.stddev ))
							{
								ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F2.ts_E.h.reset_clock();ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F2.ts_E.autState = S0;
								exec = 1;
							
							}
							ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.left_clock_F2.reset_clock();
						}else if((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F2.callState == CALLED && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F2.ts_E.autState == S0 && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F2.ts_E.h <= ts_J.avg - 3 * ts_J.stddev ) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F2.ts_E.autState == S0 && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F2.ts_E.h > ts_J.avg - 3 * ts_J.stddev ))))
						{
							if((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F2.ts_E.autState == S0 && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F2.ts_E.h <= ts_J.avg - 3 * ts_J.stddev ))
							{
								Alert(1);ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F2.ts_E.autState = S0;
								exec = 1;
							
							}else if((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F2.ts_E.autState == S0 && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F2.ts_E.h > ts_J.avg - 3 * ts_J.stddev ))
							{
								ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F2.ts_E.h.reset_clock();ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F2.ts_E.autState = S0;
								exec = 1;
							
							}
							ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.left_clock_F2.reset_clock();
						}
					
					}
					if(((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.callState == NOTCALLED && (((((FST == FST && 0) || (FST == SND && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.guardState == GUARD_NOTSTARTED && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9)  && ((NONE == NONE && (std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end() || std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), S0) !=shallow_final_choice2B_guard.end())) || (NONE == LEFT && std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end()) || (NONE == RIGHT && std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice2B_guard.autState) !=shallow_final_choice2B_guard.end())))) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.guardState == GUARD_STARTED && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == NONE && (std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end() || std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), S0) !=shallow_final_choice2B_guard.end())) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == LEFT && std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end()) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == RIGHT && std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice2B_guard.autState) !=shallow_final_choice2B_guard.end())))))) || KLEENE_NOTSTARTED == ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.kleeneState) && (FST == FST && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && S0 == S0))) || (FST == FST && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && S0 == S0)))) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.callState == CALLED && (((((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.interruptState == FST && 0) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.interruptState == SND && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.guardState == GUARD_NOTSTARTED && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9)  && ((NONE == NONE && (std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end() || std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), S0) !=shallow_final_choice2B_guard.end())) || (NONE == LEFT && std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end()) || (NONE == RIGHT && std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice2B_guard.autState) !=shallow_final_choice2B_guard.end())))) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.guardState == GUARD_STARTED && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == NONE && (std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end() || std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), S0) !=shallow_final_choice2B_guard.end())) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == LEFT && std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end()) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == RIGHT && std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice2B_guard.autState) !=shallow_final_choice2B_guard.end())))))) || KLEENE_NOTSTARTED == ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.kleeneState) && (FST == FST && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && S0 == S0))) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.interruptState == FST && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_pguardB.ts_C.autState == S0))))))
					{
						if((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.callState == NOTCALLED && (((((FST == FST && 0) || (FST == SND && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.guardState == GUARD_NOTSTARTED && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9)  && ((NONE == NONE && (std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end() || std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), S0) !=shallow_final_choice2B_guard.end())) || (NONE == LEFT && std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end()) || (NONE == RIGHT && std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice2B_guard.autState) !=shallow_final_choice2B_guard.end())))) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.guardState == GUARD_STARTED && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == NONE && (std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end() || std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), S0) !=shallow_final_choice2B_guard.end())) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == LEFT && std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end()) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == RIGHT && std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice2B_guard.autState) !=shallow_final_choice2B_guard.end())))))) || KLEENE_NOTSTARTED == ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.kleeneState) && (FST == FST && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && S0 == S0))) || (FST == FST && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && S0 == S0)))))
						{
							ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.callState = CALLED;
							ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.kleeneState = KLEENE_NOTSTARTED;
							ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.interruptState = FST;
							ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_pguardB.ts_C.autState = S0;
							if(((((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.interruptState == FST && 0) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.interruptState == SND && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.guardState == GUARD_NOTSTARTED && (last_event_time.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9)  && ((NONE == NONE && (std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end() || std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), S0) !=shallow_final_choice2B_guard.end())) || (NONE == LEFT && std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end()) || (NONE == RIGHT && std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice2B_guard.autState) !=shallow_final_choice2B_guard.end())))) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.guardState == GUARD_STARTED && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == NONE && (std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end() || std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), S0) !=shallow_final_choice2B_guard.end())) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == LEFT && std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end()) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == RIGHT && std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice2B_guard.autState) !=shallow_final_choice2B_guard.end())))))) || KLEENE_NOTSTARTED == ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.kleeneState) && (FST == FST && (last_event_time.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && S0 == S0))))
							{
								ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.kleeneState = KLEENE_STARTED;
								ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.interruptState = FST;
								ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_pguardB.ts_C.autState = S0;
								if((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.interruptState == FST && (last_event_time.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_pguardB.ts_C.autState == S0)))
								{
									if((last_event_time.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_pguardB.ts_C.autState == S0))
									{
										if(ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_pguardB.ts_C.autState == S0)
										{
											ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_pguardB.ts_C.autState = S0;
											exec = 1;
										
										}
									
									}
								
								}
							
							}else if((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.interruptState == FST && (last_event_time.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_pguardB.ts_C.autState == S0)))
							{
								ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.kleeneState = KLEENE_STARTED;
								if((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.interruptState == FST && (last_event_time.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_pguardB.ts_C.autState == S0)))
								{
									if((last_event_time.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_pguardB.ts_C.autState == S0))
									{
										if(ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_pguardB.ts_C.autState == S0)
										{
											ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_pguardB.ts_C.autState = S0;
											exec = 1;
										
										}
									
									}
								
								}
							
							}
							ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.right_clock_F1.reset_clock();
						}else if((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.callState == CALLED && (((((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.interruptState == FST && 0) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.interruptState == SND && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.guardState == GUARD_NOTSTARTED && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9)  && ((NONE == NONE && (std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end() || std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), S0) !=shallow_final_choice2B_guard.end())) || (NONE == LEFT && std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end()) || (NONE == RIGHT && std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice2B_guard.autState) !=shallow_final_choice2B_guard.end())))) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.guardState == GUARD_STARTED && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == NONE && (std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end() || std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), S0) !=shallow_final_choice2B_guard.end())) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == LEFT && std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end()) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == RIGHT && std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice2B_guard.autState) !=shallow_final_choice2B_guard.end())))))) || KLEENE_NOTSTARTED == ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.kleeneState) && (FST == FST && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && S0 == S0))) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.interruptState == FST && (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.right_clock_F1.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_pguardB.ts_C.autState == S0)))))
						{
							if(((((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.interruptState == FST && 0) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.interruptState == SND && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.guardState == GUARD_NOTSTARTED && (last_event_time.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9)  && ((NONE == NONE && (std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end() || std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), S0) !=shallow_final_choice2B_guard.end())) || (NONE == LEFT && std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end()) || (NONE == RIGHT && std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice2B_guard.autState) !=shallow_final_choice2B_guard.end())))) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.guardState == GUARD_STARTED && ((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == NONE && (std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end() || std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), S0) !=shallow_final_choice2B_guard.end())) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == LEFT && std::find(shallow_final_D.begin(), shallow_final_D.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice_1choiceB_guard.ts_D.autState) !=shallow_final_D.end()) || (ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.choiceState == RIGHT && std::find(shallow_final_choice2B_guard.begin(), shallow_final_choice2B_guard.end(), ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_guardB.ts_choiceB_guard.ts_choice2B_guard.autState) !=shallow_final_choice2B_guard.end())))))) || KLEENE_NOTSTARTED == ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.kleeneState) && (FST == FST && (last_event_time.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && S0 == S0))))
							{
								ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.kleeneState = KLEENE_STARTED;
								ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.interruptState = FST;
								ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_pguardB.ts_C.autState = S0;
								if((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.interruptState == FST && (last_event_time.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_pguardB.ts_C.autState == S0)))
								{
									if((last_event_time.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_pguardB.ts_C.autState == S0))
									{
										if(ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_pguardB.ts_C.autState == S0)
										{
											ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_pguardB.ts_C.autState = S0;
											exec = 1;
										
										}
									
									}
								
								}
							
							}else if((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.interruptState == FST && (last_event_time.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_pguardB.ts_C.autState == S0)))
							{
								ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.kleeneState = KLEENE_STARTED;
								if((ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.interruptState == FST && (last_event_time.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_pguardB.ts_C.autState == S0)))
								{
									if((last_event_time.expired((ts_J.avg + 3 * ts_J.stddev)*1.0E9) == false  && ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_pguardB.ts_C.autState == S0))
									{
										if(ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_pguardB.ts_C.autState == S0)
										{
											ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.ts_F1.ts_A.ts_B.ts_pguardB.ts_C.autState = S0;
											exec = 1;
										
										}
									
									}
								
								}
							
							}
							ts_J.ts_guardJ.ts_choiceJ_guard.ts_choice2J_guard.ts_F.right_clock_F1.reset_clock();
						}
					
					}
				
				}
			
			}
		
		}
	
	}
	if(exec == 1)
	{
		last_event_time = exec_start;
	
	}
	return exec;

}
void* producers_event_func(void* arg)
{
	while (continue_signal)
	{
		int*  argc = (int*) arg;
		Event  _evt = IO::read_event(*argc);
		if(_evt.label.empty())
		{
			continue_signal = 0;
			break;
		
		}
		queue.enqueue(_evt);
	
	}
	return NULL;

}
void* producers_Step_func(void* arg)
{
	while (continue_signal)
	{
		if(last_step_time.expired(step_time))
		{
			Event  Step;
			Step.label = "Step";
			last_step_time.reset_clock();
		
		}
		std::this_thread::sleep_for(std::chrono::nanoseconds(step_time/1000));
	
	}
	return NULL;

}
void* consumer_func(void* arg)
{
	Event  _evt;
	while (continue_signal)
	{
		queue.wait_dequeue(_evt);
		if(_evt.label.compare("e") == 0)
		{
			if(e())
			{
				continue;
			}else 
			{
				ERROR_2;
			
			}
		
		}else 
		{
			ERROR_1;
		
		}
	
	}
	return NULL;

}
int main(int argc, char** argv)
{
	IO::configInputStream(argc, argv);
	ts_J.interruptState = FST;
	ts_J.stddev = 0;
	ts_J.vec = {};
	ts_J.avg = 0;
	ts_J.clock_timed_interrupt.reset_clock();
	ts_J.ts_pguardJ.ts_J1.autState = S0;
	ts_J.ts_pguardJ.ts_J1.h.reset_clock();
	pthread_t  consumer;
	pthread_t  producers[2];
	pthread_create(& consumer, NULL, consumer_func, NULL);
	pthread_create(& producers[0], NULL, producers_event_func, (void*) &argc);
	pthread_create(& producers[1], NULL, producers_Step_func, NULL);
	pthread_join(consumer, NULL);
	pthread_join(producers[0], NULL);
	pthread_join(producers[1], NULL);
	return 0;

}
